<?xml version="1.0" ?>
<launch>

<rosparam>
    use_sim_time: false
    cassie:
        is_simulation: true
        dt: 0.0005
        log_estimation: true
        log_interface:  true
        log_controller: true
        use_ekf:        true
        interface:
            safe_torque_limit: '[90, 60, 90, 200, 40, 90, 60, 90, 200, 40]'
            heelspring_solver:
                zero_springs_on_startup: false
                num_zeroing_samples: 2000
            contact_classifier:
                use_sigmoid: false
                sigmoid_A: 0.30
                sigmoid_B: 30
                sigmoid_power: 1
                linear_lb: 60
                linear_ub: 110
                lowpass_dt_cutoff: 0.005
        estimation:
            kinematics_velocity:
                lowpass_vx_dt_cutoff: 0.06
                lowpass_vy_dt_cutoff: 0.06
                lowpass_vz_dt_cutoff: 0.06
            contact_ekf:
                apply_post_filter: false
                post_filter_dt_cutoff_x: 0.03
                post_filter_dt_cutoff_y: 0.03
                post_filter_dt_cutoff_z: 0.03
                gyro_noise_std: 0.000065
                gyro_bias_noise_std: 0.001
                accel_noise_std: 0.0075
                accel_bias_noise_std: 0.005
                contact_noise_std: 0.0001
                encoder_noise_std: 0.000175
                contact_std: 0.001
                contact_yaw_std: 0.001
                prior_base_rotation_std: 0.000001
                prior_base_position_std: 0.0001
                prior_base_velocity_std: 0.001
                prior_contact_position_std: 0.0025
                prior_gyro_bias_std: 0.00001
                prior_accel_bias_std: 0.0001
                prior_forward_kinematics_std: 0.003
                prior_contact_yaw_std: 0.03
        locomotion_control:
            dt: 0.0005
            standing:
                use_qp: true  <!-- use qp controller or ID controller  -->
                use_lateral_comp: false
                Kp_lateral_compensator: 3.0
                Kd_lateral_compensator: 0.04
                kp: '[200., 100., 300., 400., 50.]'
                kd: '[5., 2., 6., 8., 2.]'
                pose_command:
                    x_com_offset: 0
                    x_lowpass_dt_cutoff: 0.75
                    height_lowpass_dt_cutoff: 1.5
                    pitch_lowpass_dt_cutoff: 2.0
                    lateral_lowpass_dt_cutoff: 2.0
                    height_lb: -0.90
                    height_ub: -0.40
                    lateral_lb: -0.75
                    lateral_ub: 0.75
                    pitch_lb: 0
                    pitch_ub: 0
                inverse_kinematics:
                    ik_xtol: 0.00000001
                    ik_iter_limit: 10
                qp:
                    clf_use_Vdot_cost: true
                    clf_use_inequality: true
                    clf_use_task_pd: false
                    clf_gam: 0.0012
                    res_clf_ep: 0.12
                    Pdiag: '[1245.425,1245.425,270.6392,99.5274,99.5274,50.9902,13.9243,13.9243,8.5584,6.2947,6.2947,5.099]'
                    Poffdiag: '[89.4427,89.4427,31.6228,15.8114,15.8114,10]'
                    kp: '[600, 500, 200, 400, 200, 100]'
                    kd: '[18, 15, 8, 10, 4, 4]'
                    nQPIter: 30
                    reg_ddq: 0.08
                    reg_u: 1.8
                    reg_achilles: 0.0001
                    reg_rigid: 0.001
                    reg_fx: 0.0625
                    reg_fy: 0.00001
                    reg_fz: 0.0001
                    reg_muy: 0.01
                    reg_muz: 0.20
                    reg_clf_delta: 0.15
                    w_u_chatter: 0.006
                    w_outputs: 1
                    w_hol_achilles: 8
                    w_hol_fixed: 8
                    w_hol_fx: 15
                    w_hol_fy: 15
                    w_hol_fz: 15
                    w_hol_my: 6
                    w_hol_mz: 6
                    w_Vdot: 3.2
            stepping:
                standing_qp:
                    output_selec: '[1,1,1,1,1,1]'
                    kp: '[4000, 4000, 3000, 1500, 4500, 1500]'
                    kd: '[20,  20,  20, 20,  20,  20]'
                    nQPIter: 50
                    weights: '[50000, 10000, 50000, 100, 1000, 100]'
                    w_outputs: 10
                    reg_u: '[0.0000001, 0.01, 0.0000001,0.0000001,0.0000001]'
                    reg_Fcontact: '[0.00001, 0.00001, 0., 0.01, 0.01]'
<!--                     reg_Fcontact: '[0.0001, 0.0001, 0.000001, 0.1, 0.1]' -->
                    reg_Finteral: '[0.0000001, 0.0000001, 0., 0., 0., 0.]'
                    reg_relaxation: '[1, 1, 1000, 10, 10, 1, 1, 1000, 10, 10 , 1,1,1,1 ]' <!--  contact, contact, 4x springs  -->
                standing_qp_compliant:
                    reg_Finteral: '[0.000001, 0.000001]'
                    reg_relaxation: '[1, 1, 10000, 10, 10, 1, 1, 10000, 10, 10  ]' <!--  contact, contact -->
                walking_qp:
                    output_selec: '[1,1,1,1,1,1,1,1,1]'
                    kp: '[3000, 2500, 2500, 1500, 1800, 4500, 6500, 2500, 4500]'
                    kd: '[20,    30,  20,    20,  5,    20,  40,   20,    16]'
                    nQPIter: 50
                    weights: '[1000, 1000, 1000, 10000, 1000, 4000, 1000, 1000, 1000]'
                    w_outputs: 10
                    reg_u: '[0.000001, 0.005, 0.000001,0.000001,0.000001]'
                    reg_Fcontact: '[0.00001, 0.00001, 100., 0.01, 0.01]'
<!--                     reg_Finteral: '[0.0000001, 0.0000001, 0.0, 0.0, 0.0, 0.0]' -->
                    reg_Finteral: '[0., 0., 10.0, 10.0, 10.0, 10.0]'
                    reg_relaxation: '[10, 10, 10000, 10, 10 ,10,10, 10,10,10,10 ]'
                walking_qp_compliant:
                    reg_Finteral: '[0.000001, 0.000001]'
                    reg_relaxation: '[1, 1, 10000, 10, 10]'
                inair_qp:
                    output_selec: '[1,1,1,1,1,1,1,1,1,1]'
                    kp: '[2000, 2000, 2000, 2000, 2000,2000, 2000, 2000, 2000, 2000]'
                    kd: '[20,  20,  20, 20,  20,  20,  20,  20, 20,  20]'
                    nQPIter: 50
                    weights: '[10, 10, 10, 10, 10, 10 , 10, 10, 10, 10]'
                    w_outputs: 10
            HLIP:
                control_mode: 0 <!-- 0: standing, 1: walking, -1: in air -->
                isRigid: true
                useHLIP: true
                useDCBF: false
                time_scale: 1.0
                vx_offset: 0.00
                vy_offset: 0.00
                stoppable_velocity_threshold: 0.2
                useDSP:    true
                bh:      '[0, 0, 0, 1, 1, 1]'
                z0des:    .75
                zsw_max: 0.1
                zsw_neg: -0.005
                MPC_N:   5
                xratio:  0.5
                Edes:    .5
                Edes_eps: 0.3
                Edes_gamma_in: 0.2
                Edes_gamma_out: 10
                stonex:  '[0, -0.15, 0.2, 0.4, 1.12, 1.4, 1.8, 2.1, 2.6, 2.9 , 3.35, 3.7, 4.1, 4.3, 4.6, 5.2, 5.85, 6.1, 6.3, 6.6, 6.9]'
                stonez:  '[0, 0,  0,     0 ,  0 ,  0  , 0 ,    0 ,     0,  0,   0  ,  0,   0,     0,  0,    0,  0,    0 ,   0, 0, 0,0,0]'
                wdes:      0.4
                nDomain: 2
                HLIP_Ts: 0.4
                HLIP_vxd: .5
                HLIP_vyd: 0.1
                HLIP_udes: 0
                nom_stand_height: 0.85
                stand_radio_ratio: 0.1

</rosparam>

<node name="locomotion_node_new" pkg="cassie_controllers" type="locomotion_node_new" args="" respawn="false" output="screen"/>

<node name="cassie_mujocoSim_node" pkg="cassie_interface" type="cassie_mujocoSim_node" args="" respawn="false" output="screen"/>

<node name="cassie_estimation_node" pkg="cassie_estimation" type="cassie_estimation_node" args="" respawn="false" output="screen"/>

</launch>
