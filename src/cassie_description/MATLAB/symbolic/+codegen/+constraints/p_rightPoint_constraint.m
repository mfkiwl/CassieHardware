%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% p_rightPoint_constraint
% 
% This file is automatically converted to matlab format from C code.
% Source symbolic expressions exported from FROST:
% 	 https://github.com/ayonga/frost-dev
% 
% Author: Jenna Reher (jreher@caltech.edu)
% Automatically generated on: August 26, 2021 T 02:18
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function out = p_rightPoint_constraint(var1)

  out = zeros(4, 1);

  p_output1 = zeros(4,1);


  t41 = cos(var1(5));
  t69 = cos(var1(16));
  t83 = -1.*t69;
  t100 = 1. + t83;
  t196 = sin(var1(16));
  t284 = sin(var1(15));
  t358 = sin(var1(5));
  t436 = cos(var1(15));
  t498 = sin(var1(6));
  t54 = cos(var1(6));
  t523 = t284*t358;
  t524 = -1.*t436*t41*t498;
  t528 = t523 + t524;
  t563 = cos(var1(17));
  t567 = -1.*t563;
  t582 = 1. + t567;
  t599 = sin(var1(17));
  t603 = t436*t358;
  t604 = t41*t284*t498;
  t605 = t603 + t604;
  t743 = t69*t41*t54;
  t744 = t196*t528;
  t746 = t743 + t744;
  t750 = cos(var1(18));
  t751 = -1.*t750;
  t760 = 1. + t751;
  t767 = sin(var1(18));
  t791 = t599*t605;
  t792 = t563*t746;
  t797 = t791 + t792;
  t821 = t563*t605;
  t825 = -1.*t599*t746;
  t826 = t821 + t825;
  t828 = cos(var1(19));
  t829 = -1.*t828;
  t831 = 1. + t829;
  t833 = sin(var1(19));
  t838 = -1.*t767*t797;
  t839 = t750*t826;
  t840 = t838 + t839;
  t847 = t750*t797;
  t850 = t767*t826;
  t851 = t847 + t850;
  t862 = cos(var1(20));
  t873 = -1.*t862;
  t877 = 1. + t873;
  t883 = sin(var1(20));
  t895 = t833*t840;
  t899 = t828*t851;
  t901 = t895 + t899;
  t921 = t828*t840;
  t922 = -1.*t833*t851;
  t927 = t921 + t922;
  t140 = -0.049*t100;
  t250 = -0.135*t196;
  t258 = t140 + t250;
  t946 = sin(var1(4));
  t443 = -1.*t436;
  t494 = 1. + t443;
  t950 = cos(var1(4));
  t506 = -0.135*t100;
  t510 = 0.049*t196;
  t519 = t506 + t510;
  t954 = t950*t54;
  t956 = -1.*t946*t358*t498;
  t957 = t954 + t956;
  t598 = -0.09*t582;
  t600 = 0.049*t599;
  t602 = t598 + t600;
  t948 = t54*t946*t358;
  t951 = t950*t498;
  t952 = t948 + t951;
  t959 = -1.*t41*t284*t946;
  t960 = t436*t957;
  t964 = t959 + t960;
  t733 = -0.049*t582;
  t735 = -0.09*t599;
  t736 = t733 + t735;
  t762 = -0.049*t760;
  t778 = -0.21*t767;
  t782 = t762 + t778;
  t979 = -1.*t436*t41*t946;
  t980 = -1.*t284*t957;
  t981 = t979 + t980;
  t1007 = t69*t952;
  t1014 = t196*t964;
  t1015 = t1007 + t1014;
  t804 = -0.21*t760;
  t808 = 0.049*t767;
  t816 = t804 + t808;
  t832 = -0.27068*t831;
  t835 = 0.00159*t833;
  t837 = t832 + t835;
  t1022 = t599*t981;
  t1024 = t563*t1015;
  t1025 = t1022 + t1024;
  t1027 = t563*t981;
  t1028 = -1.*t599*t1015;
  t1029 = t1027 + t1028;
  t843 = -0.00159*t831;
  t845 = -0.27068*t833;
  t846 = t843 + t845;
  t880 = 0.01841*t877;
  t884 = -0.70544*t883;
  t887 = t880 + t884;
  t1036 = -1.*t767*t1025;
  t1038 = t750*t1029;
  t1045 = t1036 + t1038;
  t1059 = t750*t1025;
  t1064 = t767*t1029;
  t1065 = t1059 + t1064;
  t906 = -0.70544*t877;
  t913 = -0.01841*t883;
  t917 = t906 + t913;
  t1076 = t833*t1045;
  t1077 = t828*t1065;
  t1078 = t1076 + t1077;
  t1081 = t828*t1045;
  t1082 = -1.*t833*t1065;
  t1083 = t1081 + t1082;
  t1152 = t54*t946;
  t1153 = t950*t358*t498;
  t1154 = t1152 + t1153;
  t1133 = -1.*t950*t54*t358;
  t1137 = t946*t498;
  t1145 = t1133 + t1137;
  t1156 = t950*t41*t284;
  t1157 = t436*t1154;
  t1159 = t1156 + t1157;
  t1161 = t436*t950*t41;
  t1163 = -1.*t284*t1154;
  t1164 = t1161 + t1163;
  t1173 = t69*t1145;
  t1174 = t196*t1159;
  t1176 = t1173 + t1174;
  t1185 = t599*t1164;
  t1186 = t563*t1176;
  t1187 = t1185 + t1186;
  t1189 = t563*t1164;
  t1191 = -1.*t599*t1176;
  t1192 = t1189 + t1191;
  t1204 = -1.*t767*t1187;
  t1213 = t750*t1192;
  t1217 = t1204 + t1213;
  t1221 = t750*t1187;
  t1222 = t767*t1192;
  t1225 = t1221 + t1222;
  t1227 = t833*t1217;
  t1228 = t828*t1225;
  t1229 = t1227 + t1228;
  t1232 = t828*t1217;
  t1233 = -1.*t833*t1225;
  t1235 = t1232 + t1233;
  t1250 = t862*t1229;
  t1253 = t883*t1235;
  t1254 = t1250 + t1253;
  t1267 = t196*t1145;
  t1268 = -1.*t69*t1159;
  t1270 = t1267 + t1268;
  t1103 = t862*t1078;
  t1110 = t883*t1083;
  t1121 = t1103 + t1110;
  t1271 = power(t1270,2);
  t1272 = power(t1254,2);
  t1274 = t1271 + t1272;
  t1275 = 1/sqrt(t1274);
  t937 = t862*t901;
  t940 = t883*t927;
  t941 = t937 + t940;
  p_output1(1)=0.135*t284*t358 + 0.135*t41*t494*t498 + t519*t528 + t258*t41*t54 + t602*t605 - 0.1305*(-1.*t196*t41*t54 + t528*t69) + t736*t746 + t782*t797 + t816*t826 + t837*t840 + t846*t851 + t887*t901 + t917*t927 - 1.11344*(-1.*t883*t901 + t862*t927) - 0.02159*t941 + var1(1);
  p_output1(2)=-0.02159*t1121 + t1015*t736 + t1025*t782 + t1029*t816 + t1045*t837 + t1065*t846 - 1.11344*(t1083*t862 - 1.*t1078*t883) + t1078*t887 + t1083*t917 - 0.135*t284*t41*t946 + t258*t952 - 0.135*t494*t957 + t519*t964 - 0.1305*(-1.*t196*t952 + t69*t964) + t602*t981 + var1(2);
  p_output1(3)=-0.02159*t1254 + t1145*t258 - 0.135*t1154*t494 + t1159*t519 + t1164*t602 - 0.1305*(-1.*t1145*t196 + t1159*t69) + t1176*t736 + t1187*t782 + t1192*t816 + t1217*t837 + t1225*t846 - 1.11344*(t1235*t862 - 1.*t1229*t883) + t1229*t887 + t1235*t917 + 0.135*t284*t41*t950 + var1(3);
  p_output1(4)=Arctan(t1121*t1270*t1275 - 1.*t1254*t1275*(t196*t952 - 1.*t69*t964),t1254*t1275*(t196*t41*t54 - 1.*t528*t69) - 1.*t1270*t1275*t941);
  out = reshape(p_output1, 4, 1);
end