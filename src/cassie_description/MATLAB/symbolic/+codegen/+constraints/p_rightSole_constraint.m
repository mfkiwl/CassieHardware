%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% p_rightSole_constraint
% 
% This file is automatically converted to matlab format from C code.
% Source symbolic expressions exported from FROST:
% 	 https://github.com/ayonga/frost-dev
% 
% Author: Jenna Reher (jreher@caltech.edu)
% Automatically generated on: August 26, 2021 T 02:19
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function out = p_rightSole_constraint(var1)

  out = zeros(5, 1);

  p_output1 = zeros(5,1);


  t15 = cos(var1(5));
  t82 = cos(var1(16));
  t115 = -1.*t82;
  t118 = 1. + t115;
  t150 = sin(var1(16));
  t208 = sin(var1(15));
  t221 = sin(var1(5));
  t243 = cos(var1(15));
  t261 = sin(var1(6));
  t24 = cos(var1(6));
  t280 = t208*t221;
  t288 = -1.*t243*t15*t261;
  t292 = t280 + t288;
  t350 = cos(var1(17));
  t357 = -1.*t350;
  t359 = 1. + t357;
  t398 = sin(var1(17));
  t412 = t243*t221;
  t414 = t15*t208*t261;
  t415 = t412 + t414;
  t439 = t82*t15*t24;
  t440 = t150*t292;
  t441 = t439 + t440;
  t445 = cos(var1(18));
  t449 = -1.*t445;
  t453 = 1. + t449;
  t461 = sin(var1(18));
  t473 = t398*t415;
  t477 = t350*t441;
  t479 = t473 + t477;
  t522 = t350*t415;
  t536 = -1.*t398*t441;
  t544 = t522 + t536;
  t557 = cos(var1(19));
  t561 = -1.*t557;
  t562 = 1. + t561;
  t565 = sin(var1(19));
  t569 = -1.*t461*t479;
  t572 = t445*t544;
  t573 = t569 + t572;
  t584 = t445*t479;
  t585 = t461*t544;
  t586 = t584 + t585;
  t588 = cos(var1(20));
  t589 = -1.*t588;
  t591 = 1. + t589;
  t593 = sin(var1(20));
  t639 = t565*t573;
  t651 = t557*t586;
  t655 = t639 + t651;
  t715 = t557*t573;
  t719 = -1.*t565*t586;
  t725 = t715 + t719;
  t728 = cos(var1(22));
  t730 = -1.*t728;
  t731 = 1. + t730;
  t928 = sin(var1(22));
  t1071 = -1.*t593*t655;
  t1089 = t588*t725;
  t1095 = t1071 + t1089;
  t1128 = t588*t655;
  t1132 = t593*t725;
  t1135 = t1128 + t1132;
  t128 = -0.049*t118;
  t172 = -0.135*t150;
  t195 = t128 + t172;
  t1353 = sin(var1(4));
  t259 = -1.*t243;
  t260 = 1. + t259;
  t1371 = cos(var1(4));
  t264 = -0.135*t118;
  t272 = 0.049*t150;
  t276 = t264 + t272;
  t1405 = t1371*t24;
  t1418 = -1.*t1353*t221*t261;
  t1485 = t1405 + t1418;
  t397 = -0.09*t359;
  t400 = 0.049*t398;
  t403 = t397 + t400;
  t1365 = t24*t1353*t221;
  t1381 = t1371*t261;
  t1385 = t1365 + t1381;
  t1517 = -1.*t15*t208*t1353;
  t1525 = t243*t1485;
  t1528 = t1517 + t1525;
  t434 = -0.049*t359;
  t437 = -0.09*t398;
  t438 = t434 + t437;
  t457 = -0.049*t453;
  t465 = -0.21*t461;
  t469 = t457 + t465;
  t1542 = -1.*t243*t15*t1353;
  t1550 = -1.*t208*t1485;
  t1554 = t1542 + t1550;
  t1622 = t82*t1385;
  t1632 = t150*t1528;
  t1639 = t1622 + t1632;
  t485 = -0.21*t453;
  t486 = 0.049*t461;
  t490 = t485 + t486;
  t564 = -0.27068*t562;
  t566 = 0.00159*t565;
  t568 = t564 + t566;
  t1648 = t398*t1554;
  t1649 = t350*t1639;
  t1650 = t1648 + t1649;
  t1674 = t350*t1554;
  t1679 = -1.*t398*t1639;
  t1680 = t1674 + t1679;
  t576 = -0.00159*t562;
  t577 = -0.27068*t565;
  t578 = t576 + t577;
  t592 = 0.01841*t591;
  t595 = -0.70544*t593;
  t596 = t592 + t595;
  t1686 = -1.*t461*t1650;
  t1689 = t445*t1680;
  t1690 = t1686 + t1689;
  t1693 = t445*t1650;
  t1696 = t461*t1680;
  t1710 = t1693 + t1696;
  t667 = -0.70544*t591;
  t671 = -0.01841*t593;
  t675 = t667 + t671;
  t869 = -1.11344*t731;
  t1020 = 0.02159*t928;
  t1042 = t869 + t1020;
  t1715 = t565*t1690;
  t1719 = t557*t1710;
  t1735 = t1715 + t1719;
  t1747 = t557*t1690;
  t1750 = -1.*t565*t1710;
  t1753 = t1747 + t1750;
  t1107 = -0.02159*t731;
  t1123 = -1.11344*t928;
  t1127 = t1107 + t1123;
  t1761 = -1.*t593*t1735;
  t1765 = t588*t1753;
  t1766 = t1761 + t1765;
  t1780 = t588*t1735;
  t1782 = t593*t1753;
  t1784 = t1780 + t1782;
  t1815 = t24*t1353;
  t1816 = t1371*t221*t261;
  t1819 = t1815 + t1816;
  t1809 = -1.*t1371*t24*t221;
  t1810 = t1353*t261;
  t1811 = t1809 + t1810;
  t1835 = t1371*t15*t208;
  t1836 = t243*t1819;
  t1838 = t1835 + t1836;
  t1846 = t243*t1371*t15;
  t1849 = -1.*t208*t1819;
  t1852 = t1846 + t1849;
  t1863 = t82*t1811;
  t1864 = t150*t1838;
  t1865 = t1863 + t1864;
  t1873 = t398*t1852;
  t1875 = t350*t1865;
  t1876 = t1873 + t1875;
  t1886 = t350*t1852;
  t1889 = -1.*t398*t1865;
  t1892 = t1886 + t1889;
  t1895 = -1.*t461*t1876;
  t1898 = t445*t1892;
  t1901 = t1895 + t1898;
  t1914 = t445*t1876;
  t1915 = t461*t1892;
  t1917 = t1914 + t1915;
  t1920 = t565*t1901;
  t1931 = t557*t1917;
  t1932 = t1920 + t1931;
  t1935 = t557*t1901;
  t1936 = -1.*t565*t1917;
  t1938 = t1935 + t1936;
  t1940 = -1.*t593*t1932;
  t1942 = t588*t1938;
  t1943 = t1940 + t1942;
  t1946 = t588*t1932;
  t1947 = t593*t1938;
  t1948 = t1946 + t1947;
  t1211 = t928*t1095;
  t1241 = t728*t1135;
  t1245 = t1211 + t1241;
  t1252 = t728*t1095;
  t1264 = -1.*t928*t1135;
  t1278 = t1252 + t1264;
  t1790 = t928*t1766;
  t1791 = t728*t1784;
  t1793 = t1790 + t1791;
  t1798 = t728*t1766;
  t1802 = -1.*t928*t1784;
  t1803 = t1798 + t1802;
  t1951 = t928*t1943;
  t1952 = t728*t1948;
  t1953 = t1951 + t1952;
  t1956 = t728*t1943;
  t1958 = -1.*t928*t1948;
  t1959 = t1956 + t1958;
  t1556 = -1.*t150*t1385;
  t1561 = t82*t1528;
  t1610 = t1556 + t1561;
  t1857 = -1.*t150*t1811;
  t1858 = t82*t1838;
  t1861 = t1857 + t1858;
  t1985 = -0.766044*t1953;
  t1986 = 0.642788*t1959;
  t1988 = t1985 + t1986;
  t1989 = power(t1861,2);
  t1990 = power(t1988,2);
  t1996 = t1989 + t1990;
  t1997 = 1/sqrt(t1996);
  t427 = -1.*t15*t24*t150;
  t431 = t82*t292;
  t432 = t427 + t431;
  p_output1(1)=t1042*t1095 + t1127*t1135 + 0.0306*t1245 - 1.13106*t1278 + 0.135*t208*t221 + t15*t195*t24 + 0.135*t15*t260*t261 + t276*t292 + t403*t415 - 0.1305*t432 + t438*t441 + t469*t479 + t490*t544 + t568*t573 + t578*t586 + t596*t655 + t675*t725 + var1(1);
  p_output1(2)=-0.1305*t1610 + t1042*t1766 + t1127*t1784 + 0.0306*t1793 - 1.13106*t1803 + t1385*t195 - 0.135*t1353*t15*t208 - 0.135*t1485*t260 + t1528*t276 + t1554*t403 + t1639*t438 + t1650*t469 + t1680*t490 + t1690*t568 + t1710*t578 + t1735*t596 + t1753*t675 + var1(2);
  p_output1(3)=-0.1305*t1861 + t1042*t1943 + t1127*t1948 + t1811*t195 + 0.0306*t1953 - 1.13106*t1959 + 0.135*t1371*t15*t208 - 0.135*t1819*t260 + t1838*t276 + t1852*t403 + t1865*t438 + t1876*t469 + t1892*t490 + t1901*t568 + t1917*t578 + t1932*t596 + t1938*t675 + var1(3);
  p_output1(4)=Arctan(sqrt(power(0.642788*t1245 + 0.766044*t1278,2) + power(0.642788*t1793 + 0.766044*t1803,2)),-0.642788*t1953 - 0.766044*t1959);
  p_output1(5)=Arctan(-1.*(-0.766044*t1793 + 0.642788*t1803)*t1861*t1997 + t1610*t1988*t1997,(-0.766044*t1245 + 0.642788*t1278)*t1861*t1997 - 1.*t1988*t1997*t432);
  out = reshape(p_output1, 5, 1);
end