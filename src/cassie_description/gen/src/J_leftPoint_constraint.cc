/*
 * Automatically Generated from Mathematica.
 * Thu 26 Aug 2021 14:18:53 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftPoint_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1436;
  double t478;
  double t1146;
  double t1297;
  double t1421;
  double t1449;
  double t1472;
  double t1478;
  double t1569;
  double t1675;
  double t1728;
  double t1867;
  double t1870;
  double t1871;
  double t1874;
  double t1808;
  double t1824;
  double t1859;
  double t1912;
  double t1916;
  double t1921;
  double t1969;
  double t1970;
  double t1971;
  double t1973;
  double t1957;
  double t1961;
  double t1965;
  double t1983;
  double t1987;
  double t1991;
  double t2002;
  double t2009;
  double t2013;
  double t2021;
  double t2033;
  double t2034;
  double t2035;
  double t2043;
  double t2044;
  double t2045;
  double t2059;
  double t2062;
  double t2066;
  double t2068;
  double t2071;
  double t2072;
  double t2073;
  double t2079;
  double t2095;
  double t2096;
  double t2099;
  double t2100;
  double t2101;
  double t2104;
  double t2108;
  double t2109;
  double t2111;
  double t2117;
  double t2119;
  double t2120;
  double t732;
  double t1044;
  double t2140;
  double t2141;
  double t2142;
  double t1873;
  double t1878;
  double t1883;
  double t1923;
  double t1927;
  double t1928;
  double t2146;
  double t2148;
  double t2149;
  double t2152;
  double t2153;
  double t2154;
  double t1972;
  double t1977;
  double t1978;
  double t1992;
  double t1993;
  double t1994;
  double t2017;
  double t2025;
  double t2029;
  double t2162;
  double t2164;
  double t2165;
  double t2168;
  double t2174;
  double t2175;
  double t2037;
  double t2041;
  double t2042;
  double t2067;
  double t2069;
  double t2070;
  double t2178;
  double t2179;
  double t2180;
  double t2183;
  double t2184;
  double t2186;
  double t2075;
  double t2077;
  double t2078;
  double t2103;
  double t2105;
  double t2107;
  double t2188;
  double t2190;
  double t2191;
  double t2194;
  double t2195;
  double t2196;
  double t2113;
  double t2115;
  double t2116;
  double t2199;
  double t2200;
  double t2202;
  double t2204;
  double t2207;
  double t2208;
  double t2273;
  double t2274;
  double t2275;
  double t2282;
  double t2283;
  double t2284;
  double t2269;
  double t2270;
  double t2271;
  double t2272;
  double t2276;
  double t2277;
  double t2278;
  double t2279;
  double t2280;
  double t2281;
  double t2285;
  double t2286;
  double t2289;
  double t2290;
  double t2294;
  double t2287;
  double t2295;
  double t2296;
  double t2299;
  double t2301;
  double t2302;
  double t2298;
  double t2303;
  double t2305;
  double t2306;
  double t2307;
  double t2309;
  double t2310;
  double t2311;
  double t2313;
  double t2314;
  double t2315;
  double t2317;
  double t2263;
  double t2264;
  double t2265;
  double t2334;
  double t2335;
  double t2337;
  double t2325;
  double t2326;
  double t2327;
  double t2332;
  double t2338;
  double t2340;
  double t2342;
  double t2344;
  double t2345;
  double t2341;
  double t2346;
  double t2348;
  double t2350;
  double t2352;
  double t2353;
  double t2318;
  double t2319;
  double t2321;
  double t2322;
  double t2129;
  double t2130;
  double t2136;
  double t2387;
  double t2388;
  double t2389;
  double t2255;
  double t2256;
  double t2260;
  double t2392;
  double t2403;
  double t2404;
  double t2406;
  double t2266;
  double t2267;
  double t2268;
  double t2349;
  double t2354;
  double t2356;
  double t2357;
  double t2358;
  double t2360;
  double t2361;
  double t2362;
  double t2365;
  double t2414;
  double t2415;
  double t2417;
  double t2418;
  double t2420;
  double t2421;
  double t2422;
  double t2424;
  double t2425;
  double t2426;
  double t2445;
  double t2447;
  double t2448;
  double t2458;
  double t2459;
  double t2460;
  double t2463;
  double t2464;
  double t2465;
  double t2467;
  double t2468;
  double t2469;
  double t2472;
  double t2473;
  double t2479;
  double t2501;
  double t2502;
  double t2504;
  double t2506;
  double t2508;
  double t2509;
  double t2512;
  double t2513;
  double t2514;
  double t2516;
  double t2517;
  double t2519;
  double t2538;
  double t2539;
  double t2541;
  double t2554;
  double t2555;
  double t2556;
  double t2559;
  double t2560;
  double t2561;
  double t2563;
  double t2564;
  double t2565;
  double t2568;
  double t2569;
  double t2571;
  double t2573;
  double t2574;
  double t2580;
  double t2594;
  double t2598;
  double t2601;
  double t2610;
  double t2611;
  double t2613;
  double t2615;
  double t2618;
  double t2619;
  double t2646;
  double t2647;
  double t2649;
  double t2659;
  double t2674;
  double t2695;
  double t2698;
  double t2699;
  double t2700;
  double t2703;
  double t2709;
  double t2710;
  double t2716;
  double t2717;
  double t2721;
  double t2735;
  double t2737;
  double t2744;
  double t2755;
  double t2775;
  double t2783;
  double t2788;
  double t2795;
  double t2801;
  double t2813;
  double t2814;
  double t2838;
  double t2323;
  double t2366;
  double t2367;
  double t2858;
  double t2864;
  double t2865;
  double t2632;
  double t2633;
  double t2635;
  double t2962;
  double t2968;
  double t2969;
  double t2983;
  double t3025;
  double t3026;
  double t2529;
  double t2530;
  double t2531;
  double t3503;
  double t3513;
  double t3518;
  double t3541;
  double t3542;
  double t3543;
  double t3550;
  double t3560;
  double t3563;
  double t3633;
  double t3648;
  double t3654;
  double t3800;
  double t3877;
  double t3881;
  double t3916;
  double t3948;
  double t3950;
  double t4011;
  double t4020;
  double t4022;
  double t4163;
  double t4173;
  double t4174;
  double t4207;
  double t4208;
  double t4209;
  double t4309;
  double t4318;
  double t4320;
  double t4351;
  double t4373;
  double t4374;
  double t4392;
  double t4451;
  double t4452;
  double t4462;
  double t4473;
  double t4474;
  double t4485;
  double t4506;
  double t4509;
  double t4513;
  double t4554;
  double t4558;
  double t5151;
  double t5163;
  double t5190;
  double t5436;
  double t5488;
  double t5502;
  double t5526;
  double t5529;
  double t5530;
  double t5592;
  double t5593;
  double t5600;
  double t5667;
  double t5754;
  double t5777;
  double t5810;
  double t5832;
  double t6017;
  double t6155;
  double t6208;
  double t6212;
  double t6660;
  double t6682;
  double t7930;
  double t8911;
  double t9186;
  double t9190;
  double t9208;
  double t9215;
  double t9228;
  double t4780;
  double t4812;
  double t4813;
  double t4143;
  double t4144;
  double t4153;
  double t9913;
  double t9938;
  double t9941;
  double t9965;
  double t9966;
  double t9967;
  double t9970;
  double t9974;
  double t9977;
  double t9983;
  double t9984;
  double t9988;
  double t10014;
  double t10073;
  double t10124;
  double t10158;
  double t10159;
  double t10162;
  double t10185;
  double t10187;
  double t10195;
  double t10415;
  double t10417;
  double t10447;
  double t10459;
  double t10473;
  double t10480;
  double t10546;
  double t10567;
  double t10575;
  double t10590;
  double t10591;
  double t10611;
  double t10677;
  double t10693;
  double t10694;
  double t10700;
  double t10717;
  double t10723;
  double t10749;
  double t10756;
  double t10761;
  double t10937;
  double t10943;
  double t10948;
  double t10949;
  double t10983;
  double t11011;
  double t11018;
  double t11020;
  double t11026;
  double t11027;
  double t11069;
  double t11096;
  double t11100;
  double t11108;
  double t11122;
  double t11134;
  double t11136;
  double t11138;
  double t11139;
  double t11141;
  double t11214;
  double t11216;
  double t11221;
  double t11299;
  double t11320;
  double t11324;
  double t10243;
  double t10247;
  double t10257;
  double t10804;
  double t10805;
  double t10811;
  double t11506;
  double t11512;
  double t11514;
  double t11540;
  double t11543;
  double t11588;
  double t11599;
  double t11600;
  double t11602;
  double t11607;
  double t11608;
  double t11612;
  double t11660;
  double t11699;
  double t11744;
  double t11427;
  double t11429;
  double t11446;
  double t11463;
  double t11465;
  double t2157;
  double t2158;
  double t2160;
  double t11834;
  double t11837;
  double t11838;
  double t11844;
  double t11849;
  double t11850;
  double t11866;
  double t11894;
  double t11909;
  double t11925;
  double t11938;
  double t11964;
  double t12054;
  double t12059;
  double t12067;
  double t12123;
  double t12140;
  double t12145;
  double t12164;
  double t12165;
  double t12172;
  double t12180;
  double t12185;
  double t12189;
  double t12212;
  double t12220;
  double t12222;
  double t12261;
  double t12262;
  double t12267;
  double t12279;
  double t12281;
  double t12290;
  double t11991;
  double t11993;
  double t12021;
  double t11769;
  double t11771;
  double t11778;
  double t12350;
  double t12354;
  double t12355;
  double t12365;
  double t12366;
  double t12370;
  double t12371;
  double t12372;
  double t12376;
  double t12377;
  double t12378;
  double t12382;
  double t12383;
  double t12390;
  double t12333;
  double t12337;
  double t12342;
  double t12343;
  double t12346;
  double t12439;
  double t12445;
  double t12450;
  double t12458;
  double t12460;
  double t12465;
  double t12466;
  double t12470;
  double t12474;
  double t12477;
  double t12478;
  double t12488;
  double t12489;
  double t12490;
  double t12517;
  double t12519;
  double t12521;
  double t12524;
  double t12528;
  double t12530;
  double t12531;
  double t12534;
  double t12537;
  double t12540;
  double t12541;
  double t12543;
  double t12544;
  double t12546;
  double t12548;
  double t12549;
  double t12550;
  double t12398;
  double t12399;
  double t12402;
  double t12496;
  double t12501;
  double t12502;
  double t12649;
  double t12650;
  double t12655;
  double t12656;
  double t12658;
  double t12660;
  double t12662;
  double t12611;
  double t12613;
  double t12620;
  double t12638;
  double t12645;
  double t12683;
  double t12684;
  double t12687;
  double t12688;
  double t12690;
  double t12692;
  double t12693;
  double t12722;
  double t12725;
  double t12727;
  double t12734;
  double t12738;
  double t12741;
  double t12742;
  double t12744;
  double t12749;
  double t12750;
  double t12664;
  double t12667;
  double t12669;
  double t12695;
  double t12696;
  double t12697;
  double t12794;
  double t12795;
  double t12783;
  double t12784;
  double t12786;
  double t12789;
  double t12790;
  double t12821;
  double t12822;
  double t2229;
  double t12841;
  double t12842;
  double t12848;
  double t12849;
  double t12850;
  double t12799;
  double t12800;
  double t12801;
  double t12827;
  double t12830;
  double t12812;
  double t12887;
  double t12890;
  double t12893;
  double t12898;
  double t12902;
  double t2228;
  double t2230;
  double t12833;
  double t12855;
  double t12950;
  double t12954;
  double t12909;
  double t12912;
  t1436 = Cos(var1[3]);
  t478 = Cos(var1[6]);
  t1146 = Cos(var1[5]);
  t1297 = Sin(var1[3]);
  t1421 = -1.*t1146*t1297;
  t1449 = Sin(var1[4]);
  t1472 = Sin(var1[5]);
  t1478 = -1.*t1436*t1449*t1472;
  t1569 = t1421 + t1478;
  t1675 = Cos(var1[4]);
  t1728 = Sin(var1[6]);
  t1867 = Cos(var1[7]);
  t1870 = -1.*t1867;
  t1871 = 1. + t1870;
  t1874 = Sin(var1[7]);
  t1808 = t478*t1569;
  t1824 = -1.*t1436*t1675*t1728;
  t1859 = t1808 + t1824;
  t1912 = t1436*t1146*t1449;
  t1916 = -1.*t1297*t1472;
  t1921 = t1912 + t1916;
  t1969 = Cos(var1[8]);
  t1970 = -1.*t1969;
  t1971 = 1. + t1970;
  t1973 = Sin(var1[8]);
  t1957 = t1867*t1921;
  t1961 = t1859*t1874;
  t1965 = t1957 + t1961;
  t1983 = -1.*t1436*t1675*t478;
  t1987 = -1.*t1569*t1728;
  t1991 = t1983 + t1987;
  t2002 = Cos(var1[9]);
  t2009 = -1.*t2002;
  t2013 = 1. + t2009;
  t2021 = Sin(var1[9]);
  t2033 = t1969*t1965;
  t2034 = t1991*t1973;
  t2035 = t2033 + t2034;
  t2043 = t1969*t1991;
  t2044 = -1.*t1965*t1973;
  t2045 = t2043 + t2044;
  t2059 = Cos(var1[10]);
  t2062 = -1.*t2059;
  t2066 = 1. + t2062;
  t2068 = Sin(var1[10]);
  t2071 = -1.*t2021*t2035;
  t2072 = t2002*t2045;
  t2073 = t2071 + t2072;
  t2079 = t2002*t2035;
  t2095 = t2021*t2045;
  t2096 = t2079 + t2095;
  t2099 = Cos(var1[11]);
  t2100 = -1.*t2099;
  t2101 = 1. + t2100;
  t2104 = Sin(var1[11]);
  t2108 = t2068*t2073;
  t2109 = t2059*t2096;
  t2111 = t2108 + t2109;
  t2117 = t2059*t2073;
  t2119 = -1.*t2068*t2096;
  t2120 = t2117 + t2119;
  t732 = -1.*t478;
  t1044 = 1. + t732;
  t2140 = t1436*t1146;
  t2141 = -1.*t1297*t1449*t1472;
  t2142 = t2140 + t2141;
  t1873 = 0.135*t1871;
  t1878 = 0.049*t1874;
  t1883 = t1873 + t1878;
  t1923 = -0.049*t1871;
  t1927 = 0.135*t1874;
  t1928 = t1923 + t1927;
  t2146 = t478*t2142;
  t2148 = -1.*t1675*t1297*t1728;
  t2149 = t2146 + t2148;
  t2152 = t1146*t1297*t1449;
  t2153 = t1436*t1472;
  t2154 = t2152 + t2153;
  t1972 = -0.049*t1971;
  t1977 = -0.09*t1973;
  t1978 = t1972 + t1977;
  t1992 = -0.09*t1971;
  t1993 = 0.049*t1973;
  t1994 = t1992 + t1993;
  t2017 = -0.049*t2013;
  t2025 = -0.21*t2021;
  t2029 = t2017 + t2025;
  t2162 = t1867*t2154;
  t2164 = t2149*t1874;
  t2165 = t2162 + t2164;
  t2168 = -1.*t1675*t478*t1297;
  t2174 = -1.*t2142*t1728;
  t2175 = t2168 + t2174;
  t2037 = -0.21*t2013;
  t2041 = 0.049*t2021;
  t2042 = t2037 + t2041;
  t2067 = -0.27068*t2066;
  t2069 = 0.00159*t2068;
  t2070 = t2067 + t2069;
  t2178 = t1969*t2165;
  t2179 = t2175*t1973;
  t2180 = t2178 + t2179;
  t2183 = t1969*t2175;
  t2184 = -1.*t2165*t1973;
  t2186 = t2183 + t2184;
  t2075 = -0.00159*t2066;
  t2077 = -0.27068*t2068;
  t2078 = t2075 + t2077;
  t2103 = 0.01841*t2101;
  t2105 = -0.70544*t2104;
  t2107 = t2103 + t2105;
  t2188 = -1.*t2021*t2180;
  t2190 = t2002*t2186;
  t2191 = t2188 + t2190;
  t2194 = t2002*t2180;
  t2195 = t2021*t2186;
  t2196 = t2194 + t2195;
  t2113 = -0.70544*t2101;
  t2115 = -0.01841*t2104;
  t2116 = t2113 + t2115;
  t2199 = t2068*t2191;
  t2200 = t2059*t2196;
  t2202 = t2199 + t2200;
  t2204 = t2059*t2191;
  t2207 = -1.*t2068*t2196;
  t2208 = t2204 + t2207;
  t2273 = t1146*t1297;
  t2274 = t1436*t1449*t1472;
  t2275 = t2273 + t2274;
  t2282 = t1436*t1675*t478;
  t2283 = -1.*t2275*t1728;
  t2284 = t2282 + t2283;
  t2269 = -1.*t1436*t1146*t1449;
  t2270 = t1297*t1472;
  t2271 = t2269 + t2270;
  t2272 = t1867*t2271;
  t2276 = t478*t2275;
  t2277 = t1436*t1675*t1728;
  t2278 = t2276 + t2277;
  t2279 = t2278*t1874;
  t2280 = t2272 + t2279;
  t2281 = t1969*t2280;
  t2285 = t2284*t1973;
  t2286 = t2281 + t2285;
  t2289 = t1969*t2284;
  t2290 = -1.*t2280*t1973;
  t2294 = t2289 + t2290;
  t2287 = -1.*t2021*t2286;
  t2295 = t2002*t2294;
  t2296 = t2287 + t2295;
  t2299 = t2002*t2286;
  t2301 = t2021*t2294;
  t2302 = t2299 + t2301;
  t2298 = t2068*t2296;
  t2303 = t2059*t2302;
  t2305 = t2298 + t2303;
  t2306 = t2099*t2305;
  t2307 = t2059*t2296;
  t2309 = -1.*t2068*t2302;
  t2310 = t2307 + t2309;
  t2311 = t2104*t2310;
  t2313 = t2306 + t2311;
  t2314 = -1.*t1867*t2278;
  t2315 = t2271*t1874;
  t2317 = t2314 + t2315;
  t2263 = -1.*t1675*t478*t1472;
  t2264 = t1449*t1728;
  t2265 = t2263 + t2264;
  t2334 = t478*t1449;
  t2335 = t1675*t1472*t1728;
  t2337 = t2334 + t2335;
  t2325 = t1675*t1146*t1867;
  t2326 = t2265*t1874;
  t2327 = t2325 + t2326;
  t2332 = t1969*t2327;
  t2338 = t2337*t1973;
  t2340 = t2332 + t2338;
  t2342 = t1969*t2337;
  t2344 = -1.*t2327*t1973;
  t2345 = t2342 + t2344;
  t2341 = -1.*t2021*t2340;
  t2346 = t2002*t2345;
  t2348 = t2341 + t2346;
  t2350 = t2002*t2340;
  t2352 = t2021*t2345;
  t2353 = t2350 + t2352;
  t2318 = Power(t2317,2);
  t2319 = Power(t2313,2);
  t2321 = t2318 + t2319;
  t2322 = 1/Sqrt(t2321);
  t2129 = t2099*t2111;
  t2130 = t2104*t2120;
  t2136 = t2129 + t2130;
  t2387 = -1.*t1867*t2149;
  t2388 = t2154*t1874;
  t2389 = t2387 + t2388;
  t2255 = t2099*t2202;
  t2256 = t2104*t2208;
  t2260 = t2255 + t2256;
  t2392 = Power(t2321,-1.5);
  t2403 = 2.*t2389*t2317;
  t2404 = 2.*t2313*t2260;
  t2406 = t2403 + t2404;
  t2266 = -1.*t1867*t2265;
  t2267 = t1675*t1146*t1874;
  t2268 = t2266 + t2267;
  t2349 = t2068*t2348;
  t2354 = t2059*t2353;
  t2356 = t2349 + t2354;
  t2357 = t2099*t2356;
  t2358 = t2059*t2348;
  t2360 = -1.*t2068*t2353;
  t2361 = t2358 + t2360;
  t2362 = t2104*t2361;
  t2365 = t2357 + t2362;
  t2414 = -1.*t2389*t2313*t2322;
  t2415 = t2317*t2260*t2322;
  t2417 = t2414 + t2415;
  t2418 = Power(t2417,2);
  t2420 = t2268*t2313*t2322;
  t2421 = -1.*t2317*t2365*t2322;
  t2422 = t2420 + t2421;
  t2424 = Power(t2422,2);
  t2425 = t2418 + t2424;
  t2426 = 1/t2425;
  t2445 = t478*t1449*t1472;
  t2447 = t1675*t1728;
  t2448 = t2445 + t2447;
  t2458 = -1.*t1146*t1867*t1449;
  t2459 = t2448*t1874;
  t2460 = t2458 + t2459;
  t2463 = t1675*t478;
  t2464 = -1.*t1449*t1472*t1728;
  t2465 = t2463 + t2464;
  t2467 = t1969*t2460;
  t2468 = t2465*t1973;
  t2469 = t2467 + t2468;
  t2472 = t1969*t2465;
  t2473 = -1.*t2460*t1973;
  t2479 = t2472 + t2473;
  t2501 = -1.*t2021*t2469;
  t2502 = t2002*t2479;
  t2504 = t2501 + t2502;
  t2506 = t2002*t2469;
  t2508 = t2021*t2479;
  t2509 = t2506 + t2508;
  t2512 = t2068*t2504;
  t2513 = t2059*t2509;
  t2514 = t2512 + t2513;
  t2516 = t2059*t2504;
  t2517 = -1.*t2068*t2509;
  t2519 = t2516 + t2517;
  t2538 = -1.*t1675*t478*t1297*t1472;
  t2539 = t1297*t1449*t1728;
  t2541 = t2538 + t2539;
  t2554 = t1675*t1146*t1867*t1297;
  t2555 = t2541*t1874;
  t2556 = t2554 + t2555;
  t2559 = t478*t1297*t1449;
  t2560 = t1675*t1297*t1472*t1728;
  t2561 = t2559 + t2560;
  t2563 = t1969*t2556;
  t2564 = t2561*t1973;
  t2565 = t2563 + t2564;
  t2568 = t1969*t2561;
  t2569 = -1.*t2556*t1973;
  t2571 = t2568 + t2569;
  t2573 = -1.*t2021*t2565;
  t2574 = t2002*t2571;
  t2580 = t2573 + t2574;
  t2594 = t2002*t2565;
  t2598 = t2021*t2571;
  t2601 = t2594 + t2598;
  t2610 = t2068*t2580;
  t2611 = t2059*t2601;
  t2613 = t2610 + t2611;
  t2615 = t2059*t2580;
  t2618 = -1.*t2068*t2601;
  t2619 = t2615 + t2618;
  t2646 = t1436*t1675*t478*t1472;
  t2647 = -1.*t1436*t1449*t1728;
  t2649 = t2646 + t2647;
  t2659 = -1.*t1436*t1675*t1146*t1867;
  t2674 = t2649*t1874;
  t2695 = t2659 + t2674;
  t2698 = -1.*t1436*t478*t1449;
  t2699 = -1.*t1436*t1675*t1472*t1728;
  t2700 = t2698 + t2699;
  t2703 = t1969*t2695;
  t2709 = t2700*t1973;
  t2710 = t2703 + t2709;
  t2716 = t1969*t2700;
  t2717 = -1.*t2695*t1973;
  t2721 = t2716 + t2717;
  t2735 = -1.*t2021*t2710;
  t2737 = t2002*t2721;
  t2744 = t2735 + t2737;
  t2755 = t2002*t2710;
  t2775 = t2021*t2721;
  t2783 = t2755 + t2775;
  t2788 = t2068*t2744;
  t2795 = t2059*t2783;
  t2801 = t2788 + t2795;
  t2813 = t2059*t2744;
  t2814 = -1.*t2068*t2783;
  t2838 = t2813 + t2814;
  t2323 = -1.*t2268*t2313*t2322;
  t2366 = t2317*t2365*t2322;
  t2367 = t2323 + t2366;
  t2858 = t2099*t2801;
  t2864 = t2104*t2838;
  t2865 = t2858 + t2864;
  t2632 = t2099*t2613;
  t2633 = t2104*t2619;
  t2635 = t2632 + t2633;
  t2962 = -1.*t1867*t2649;
  t2968 = -1.*t1436*t1675*t1146*t1874;
  t2969 = t2962 + t2968;
  t2983 = 2.*t2969*t2317;
  t3025 = 2.*t2313*t2865;
  t3026 = t2983 + t3025;
  t2529 = t2099*t2514;
  t2530 = t2104*t2519;
  t2531 = t2529 + t2530;
  t3503 = -1.*t1675*t1867*t1472;
  t3513 = -1.*t1675*t1146*t478*t1874;
  t3518 = t3503 + t3513;
  t3541 = t1969*t3518;
  t3542 = t1675*t1146*t1728*t1973;
  t3543 = t3541 + t3542;
  t3550 = t1675*t1146*t1969*t1728;
  t3560 = -1.*t3518*t1973;
  t3563 = t3550 + t3560;
  t3633 = -1.*t2021*t3543;
  t3648 = t2002*t3563;
  t3654 = t3633 + t3648;
  t3800 = t2002*t3543;
  t3877 = t2021*t3563;
  t3881 = t3800 + t3877;
  t3916 = t2068*t3654;
  t3948 = t2059*t3881;
  t3950 = t3916 + t3948;
  t4011 = t2059*t3654;
  t4020 = -1.*t2068*t3881;
  t4022 = t4011 + t4020;
  t4163 = -1.*t1146*t1297*t1449;
  t4173 = -1.*t1436*t1472;
  t4174 = t4163 + t4173;
  t4207 = t1867*t2142;
  t4208 = t478*t4174*t1874;
  t4209 = t4207 + t4208;
  t4309 = t1969*t4209;
  t4318 = -1.*t4174*t1728*t1973;
  t4320 = t4309 + t4318;
  t4351 = -1.*t1969*t4174*t1728;
  t4373 = -1.*t4209*t1973;
  t4374 = t4351 + t4373;
  t4392 = -1.*t2021*t4320;
  t4451 = t2002*t4374;
  t4452 = t4392 + t4451;
  t4462 = t2002*t4320;
  t4473 = t2021*t4374;
  t4474 = t4462 + t4473;
  t4485 = t2068*t4452;
  t4506 = t2059*t4474;
  t4509 = t4485 + t4506;
  t4513 = t2059*t4452;
  t4554 = -1.*t2068*t4474;
  t4558 = t4513 + t4554;
  t5151 = t1867*t2275;
  t5163 = t478*t1921*t1874;
  t5190 = t5151 + t5163;
  t5436 = t1969*t5190;
  t5488 = -1.*t1921*t1728*t1973;
  t5502 = t5436 + t5488;
  t5526 = -1.*t1969*t1921*t1728;
  t5529 = -1.*t5190*t1973;
  t5530 = t5526 + t5529;
  t5592 = -1.*t2021*t5502;
  t5593 = t2002*t5530;
  t5600 = t5592 + t5593;
  t5667 = t2002*t5502;
  t5754 = t2021*t5530;
  t5777 = t5667 + t5754;
  t5810 = t2068*t5600;
  t5832 = t2059*t5777;
  t6017 = t5810 + t5832;
  t6155 = t2059*t5600;
  t6208 = -1.*t2068*t5777;
  t6212 = t6155 + t6208;
  t6660 = t2099*t6017;
  t6682 = t2104*t6212;
  t7930 = t6660 + t6682;
  t8911 = -1.*t478*t1867*t1921;
  t9186 = t2275*t1874;
  t9190 = t8911 + t9186;
  t9208 = 2.*t2317*t9190;
  t9215 = 2.*t7930*t2313;
  t9228 = t9208 + t9215;
  t4780 = t2099*t4509;
  t4812 = t2104*t4558;
  t4813 = t4780 + t4812;
  t4143 = t2099*t3950;
  t4144 = t2104*t4022;
  t4153 = t4143 + t4144;
  t9913 = t1675*t478*t1472;
  t9938 = -1.*t1449*t1728;
  t9941 = t9913 + t9938;
  t9965 = t1969*t2337*t1874;
  t9966 = t9941*t1973;
  t9967 = t9965 + t9966;
  t9970 = t1969*t9941;
  t9974 = -1.*t2337*t1874*t1973;
  t9977 = t9970 + t9974;
  t9983 = -1.*t2021*t9967;
  t9984 = t2002*t9977;
  t9988 = t9983 + t9984;
  t10014 = t2002*t9967;
  t10073 = t2021*t9977;
  t10124 = t10014 + t10073;
  t10158 = t2068*t9988;
  t10159 = t2059*t10124;
  t10162 = t10158 + t10159;
  t10185 = t2059*t9988;
  t10187 = -1.*t2068*t10124;
  t10195 = t10185 + t10187;
  t10415 = -1.*t478*t2142;
  t10417 = t1675*t1297*t1728;
  t10447 = t10415 + t10417;
  t10459 = t1969*t2175*t1874;
  t10473 = t10447*t1973;
  t10480 = t10459 + t10473;
  t10546 = t1969*t10447;
  t10567 = -1.*t2175*t1874*t1973;
  t10575 = t10546 + t10567;
  t10590 = -1.*t2021*t10480;
  t10591 = t2002*t10575;
  t10611 = t10590 + t10591;
  t10677 = t2002*t10480;
  t10693 = t2021*t10575;
  t10694 = t10677 + t10693;
  t10700 = t2068*t10611;
  t10717 = t2059*t10694;
  t10723 = t10700 + t10717;
  t10749 = t2059*t10611;
  t10756 = -1.*t2068*t10694;
  t10761 = t10749 + t10756;
  t10937 = -1.*t478*t2275;
  t10943 = t10937 + t1824;
  t10948 = t1969*t2284*t1874;
  t10949 = t10943*t1973;
  t10983 = t10948 + t10949;
  t11011 = t1969*t10943;
  t11018 = -1.*t2284*t1874*t1973;
  t11020 = t11011 + t11018;
  t11026 = -1.*t2021*t10983;
  t11027 = t2002*t11020;
  t11069 = t11026 + t11027;
  t11096 = t2002*t10983;
  t11100 = t2021*t11020;
  t11108 = t11096 + t11100;
  t11122 = t2068*t11069;
  t11134 = t2059*t11108;
  t11136 = t11122 + t11134;
  t11138 = t2059*t11069;
  t11139 = -1.*t2068*t11108;
  t11141 = t11138 + t11139;
  t11214 = t2099*t11136;
  t11216 = t2104*t11141;
  t11221 = t11214 + t11216;
  t11299 = -2.*t1867*t2284*t2317;
  t11320 = 2.*t11221*t2313;
  t11324 = t11299 + t11320;
  t10243 = t2099*t10162;
  t10247 = t2104*t10195;
  t10257 = t10243 + t10247;
  t10804 = t2099*t10723;
  t10805 = t2104*t10761;
  t10811 = t10804 + t10805;
  t11506 = t1867*t2265;
  t11512 = -1.*t1675*t1146*t1874;
  t11514 = t11506 + t11512;
  t11540 = -1.*t1969*t2021*t11514;
  t11543 = -1.*t2002*t11514*t1973;
  t11588 = t11540 + t11543;
  t11599 = t2002*t1969*t11514;
  t11600 = -1.*t2021*t11514*t1973;
  t11602 = t11599 + t11600;
  t11607 = t2068*t11588;
  t11608 = t2059*t11602;
  t11612 = t11607 + t11608;
  t11660 = t2059*t11588;
  t11699 = -1.*t2068*t11602;
  t11744 = t11660 + t11699;
  t11427 = 0.135*t1867;
  t11429 = -0.049*t1874;
  t11446 = t11427 + t11429;
  t11463 = 0.049*t1867;
  t11465 = t11463 + t1927;
  t2157 = t1867*t2149;
  t2158 = -1.*t2154*t1874;
  t2160 = t2157 + t2158;
  t11834 = -1.*t1969*t2021*t2160;
  t11837 = -1.*t2002*t2160*t1973;
  t11838 = t11834 + t11837;
  t11844 = t2002*t1969*t2160;
  t11849 = -1.*t2021*t2160*t1973;
  t11850 = t11844 + t11849;
  t11866 = t2068*t11838;
  t11894 = t2059*t11850;
  t11909 = t11866 + t11894;
  t11925 = t2059*t11838;
  t11938 = -1.*t2068*t11850;
  t11964 = t11925 + t11938;
  t12054 = t1867*t2278;
  t12059 = -1.*t2271*t1874;
  t12067 = t12054 + t12059;
  t12123 = -1.*t1969*t2021*t12067;
  t12140 = -1.*t2002*t12067*t1973;
  t12145 = t12123 + t12140;
  t12164 = t2002*t1969*t12067;
  t12165 = -1.*t2021*t12067*t1973;
  t12172 = t12164 + t12165;
  t12180 = t2068*t12145;
  t12185 = t2059*t12172;
  t12189 = t12180 + t12185;
  t12212 = t2059*t12145;
  t12220 = -1.*t2068*t12172;
  t12222 = t12212 + t12220;
  t12261 = t2099*t12189;
  t12262 = t2104*t12222;
  t12267 = t12261 + t12262;
  t12279 = 2.*t2317*t2280;
  t12281 = 2.*t12267*t2313;
  t12290 = t12279 + t12281;
  t11991 = t2099*t11909;
  t11993 = t2104*t11964;
  t12021 = t11991 + t11993;
  t11769 = t2099*t11612;
  t11771 = t2104*t11744;
  t11778 = t11769 + t11771;
  t12350 = -1.*t1969*t2327;
  t12354 = -1.*t2337*t1973;
  t12355 = t12350 + t12354;
  t12365 = t2021*t12355;
  t12366 = t12365 + t2346;
  t12370 = t2002*t12355;
  t12371 = -1.*t2021*t2345;
  t12372 = t12370 + t12371;
  t12376 = -1.*t2068*t12366;
  t12377 = t2059*t12372;
  t12378 = t12376 + t12377;
  t12382 = t2059*t12366;
  t12383 = t2068*t12372;
  t12390 = t12382 + t12383;
  t12333 = 0.049*t1969;
  t12337 = t12333 + t1977;
  t12342 = -0.09*t1969;
  t12343 = -0.049*t1973;
  t12346 = t12342 + t12343;
  t12439 = -1.*t1969*t2165;
  t12445 = -1.*t2175*t1973;
  t12450 = t12439 + t12445;
  t12458 = t2021*t12450;
  t12460 = t12458 + t2190;
  t12465 = t2002*t12450;
  t12466 = -1.*t2021*t2186;
  t12470 = t12465 + t12466;
  t12474 = -1.*t2068*t12460;
  t12477 = t2059*t12470;
  t12478 = t12474 + t12477;
  t12488 = t2059*t12460;
  t12489 = t2068*t12470;
  t12490 = t12488 + t12489;
  t12517 = -1.*t1969*t2280;
  t12519 = -1.*t2284*t1973;
  t12521 = t12517 + t12519;
  t12524 = t2021*t12521;
  t12528 = t12524 + t2295;
  t12530 = t2002*t12521;
  t12531 = -1.*t2021*t2294;
  t12534 = t12530 + t12531;
  t12537 = -1.*t2068*t12528;
  t12540 = t2059*t12534;
  t12541 = t12537 + t12540;
  t12543 = t2059*t12528;
  t12544 = t2068*t12534;
  t12546 = t12543 + t12544;
  t12548 = t2104*t12541;
  t12549 = t2099*t12546;
  t12550 = t12548 + t12549;
  t12398 = t2104*t12378;
  t12399 = t2099*t12390;
  t12402 = t12398 + t12399;
  t12496 = t2104*t12478;
  t12501 = t2099*t12490;
  t12502 = t12496 + t12501;
  t12649 = -1.*t2002*t2340;
  t12650 = t12649 + t12371;
  t12655 = -1.*t2068*t2348;
  t12656 = t2059*t12650;
  t12658 = t12655 + t12656;
  t12660 = t2068*t12650;
  t12662 = t2358 + t12660;
  t12611 = -0.21*t2002;
  t12613 = -0.049*t2021;
  t12620 = t12611 + t12613;
  t12638 = 0.049*t2002;
  t12645 = t12638 + t2025;
  t12683 = -1.*t2002*t2180;
  t12684 = t12683 + t12466;
  t12687 = -1.*t2068*t2191;
  t12688 = t2059*t12684;
  t12690 = t12687 + t12688;
  t12692 = t2068*t12684;
  t12693 = t2204 + t12692;
  t12722 = -1.*t2002*t2286;
  t12725 = t12722 + t12531;
  t12727 = -1.*t2068*t2296;
  t12734 = t2059*t12725;
  t12738 = t12727 + t12734;
  t12741 = t2068*t12725;
  t12742 = t2307 + t12741;
  t12744 = t2104*t12738;
  t12749 = t2099*t12742;
  t12750 = t12744 + t12749;
  t12664 = t2104*t12658;
  t12667 = t2099*t12662;
  t12669 = t12664 + t12667;
  t12695 = t2104*t12690;
  t12696 = t2099*t12693;
  t12697 = t12695 + t12696;
  t12794 = -1.*t2059*t2353;
  t12795 = t12655 + t12794;
  t12783 = 0.00159*t2059;
  t12784 = t12783 + t2077;
  t12786 = -0.27068*t2059;
  t12789 = -0.00159*t2068;
  t12790 = t12786 + t12789;
  t12821 = -1.*t2059*t2196;
  t12822 = t12687 + t12821;
  t2229 = t2099*t2208;
  t12841 = -1.*t2059*t2302;
  t12842 = t12727 + t12841;
  t12848 = t2104*t12842;
  t12849 = t2099*t2310;
  t12850 = t12848 + t12849;
  t12799 = t2104*t12795;
  t12800 = t2099*t2361;
  t12801 = t12799 + t12800;
  t12827 = t2104*t12822;
  t12830 = t12827 + t2229;
  t12812 = -1.*t2104*t2361;
  t12887 = -0.70544*t2099;
  t12890 = 0.01841*t2104;
  t12893 = t12887 + t12890;
  t12898 = -0.01841*t2099;
  t12902 = t12898 + t2105;
  t2228 = -1.*t2104*t2202;
  t2230 = t2228 + t2229;
  t12833 = -1.*t2104*t2208;
  t12855 = -1.*t2104*t2310;
  t12950 = -1.*t2104*t2305;
  t12954 = t12950 + t12849;
  t12909 = -1.*t2104*t2356;
  t12912 = t12909 + t12800;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=1.;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0.135*t1044*t1569 + 0.135*t1436*t1675*t1728 + t1859*t1883 + 0.1305*(t1859*t1867 - 1.*t1874*t1921) + t1921*t1928 + t1965*t1978 + t1991*t1994 + t2029*t2035 + t2042*t2045 + t2070*t2073 + t2078*t2096 + t2107*t2111 + t2116*t2120 - 1.11344*(-1.*t2104*t2111 + t2099*t2120) - 0.02159*t2136;
  p_output1[14]=0.135*t1297*t1675*t1728 + 0.135*t1044*t2142 + t1883*t2149 + t1928*t2154 + 0.1305*t2160 + t1978*t2165 + t1994*t2175 + t2029*t2180 + t2042*t2186 + t2070*t2191 + t2078*t2196 + t2107*t2202 + t2116*t2208 - 1.11344*t2230 - 0.02159*t2260;
  p_output1[15]=t2367*(-1.*(-1.*t1859*t1867 + t1874*t1921)*t2313*t2322 + t2136*t2317*t2322 - 0.5*t2260*t2317*t2392*t2406 + 0.5*t2313*t2389*t2392*t2406)*t2426 + (t2260*t2268*t2322 - 1.*t2322*t2365*t2389 - 0.5*t2268*t2313*t2392*t2406 + 0.5*t2317*t2365*t2392*t2406)*t2417*t2426;
  p_output1[16]=0.135*t1044*t1449*t1472 - 0.135*t1675*t1728 - 1.*t1146*t1449*t1928 + t1883*t2448 + 0.1305*(t1146*t1449*t1874 + t1867*t2448) + t1978*t2460 + t1994*t2465 + t2029*t2469 + t2042*t2479 + t2070*t2504 + t2078*t2509 + t2107*t2514 + t2116*t2519 - 1.11344*(-1.*t2104*t2514 + t2099*t2519) - 0.02159*t2531;
  p_output1[17]=-0.135*t1044*t1297*t1472*t1675 - 0.135*t1297*t1449*t1728 + t1146*t1297*t1675*t1928 + t1883*t2541 + 0.1305*(-1.*t1146*t1297*t1675*t1874 + t1867*t2541) + t1978*t2556 + t1994*t2561 + t2029*t2565 + t2042*t2571 + t2070*t2580 + t2078*t2601 + t2107*t2613 + t2116*t2619 - 1.11344*(-1.*t2104*t2613 + t2099*t2619) - 0.02159*t2635;
  p_output1[18]=0.135*t1044*t1436*t1472*t1675 + 0.135*t1436*t1449*t1728 - 1.*t1146*t1436*t1675*t1928 + t1883*t2649 + 0.1305*(t1146*t1436*t1675*t1874 + t1867*t2649) + t1978*t2695 + t1994*t2700 + t2029*t2710 + t2042*t2721 + t2070*t2744 + t2078*t2783 + t2107*t2801 + t2116*t2838 - 1.11344*(-1.*t2104*t2801 + t2099*t2838) - 0.02159*t2865;
  p_output1[19]=t2417*t2426*(t2313*t2322*(-1.*t1146*t1449*t1874 - 1.*t1867*t2448) - 1.*t2317*t2322*t2531 + t2268*t2322*t2865 - 1.*t2322*t2365*t2969 - 0.5*t2268*t2313*t2392*t3026 + 0.5*t2317*t2365*t2392*t3026) + t2367*t2426*(-1.*t2313*t2322*(t1146*t1297*t1675*t1874 - 1.*t1867*t2541) + t2317*t2322*t2635 - 1.*t2322*t2389*t2865 + t2260*t2322*t2969 - 0.5*t2260*t2317*t2392*t3026 + 0.5*t2313*t2389*t2392*t3026);
  p_output1[20]=-0.135*t1044*t1146*t1675 - 1.*t1472*t1675*t1928 + t1146*t1675*t1728*t1994 + t1978*t3518 + t2029*t3543 + t2042*t3563 + t2070*t3654 + t2078*t3881 + t2107*t3950 + t2116*t4022 - 1.11344*(-1.*t2104*t3950 + t2099*t4022) - 0.02159*t4153 - 1.*t1146*t1675*t1883*t478 + 0.1305*(t1472*t1675*t1874 - 1.*t1146*t1675*t1867*t478);
  p_output1[21]=t1928*t2142 + 0.135*t1044*t4174 - 1.*t1728*t1994*t4174 + t1978*t4209 + t2029*t4320 + t2042*t4374 + t2070*t4452 + t2078*t4474 + t2107*t4509 + t2116*t4558 - 1.11344*(-1.*t2104*t4509 + t2099*t4558) + t1883*t4174*t478 + 0.1305*(-1.*t1874*t2142 + t1867*t4174*t478) - 0.02159*t4813;
  p_output1[22]=0.135*t1044*t1921 - 1.*t1728*t1921*t1994 + t1928*t2275 + t1883*t1921*t478 + 0.1305*(-1.*t1874*t2275 + t1867*t1921*t478) + t1978*t5190 + t2029*t5502 + t2042*t5530 + t2070*t5600 + t2078*t5777 + t2107*t6017 + t2116*t6212 - 1.11344*(-1.*t2104*t6017 + t2099*t6212) - 0.02159*t7930;
  p_output1[23]=t2417*t2426*(-1.*t2317*t2322*t4153 + t2313*t2322*(-1.*t1472*t1675*t1874 + t1146*t1675*t1867*t478) + t2268*t2322*t7930 - 1.*t2322*t2365*t9190 - 0.5*t2268*t2313*t2392*t9228 + 0.5*t2317*t2365*t2392*t9228) + t2367*t2426*(-1.*t2313*t2322*(t1874*t2142 - 1.*t1867*t4174*t478) + t2317*t2322*t4813 - 1.*t2322*t2389*t7930 + t2260*t2322*t9190 - 0.5*t2260*t2317*t2392*t9228 + 0.5*t2313*t2389*t2392*t9228);
  p_output1[24]=-0.02159*t10257 - 0.135*t1472*t1675*t1728 + t10124*t2078 - 1.11344*(t10195*t2099 - 1.*t10162*t2104) + t10162*t2107 + t10195*t2116 + 0.1305*t1867*t2337 + t1883*t2337 + t1874*t1978*t2337 - 0.135*t1449*t478 + t1994*t9941 + t2029*t9967 + t2042*t9977 + t2070*t9988;
  p_output1[25]=-0.02159*t10811 + t10447*t1994 + t10480*t2029 + t10575*t2042 + t10611*t2070 + t10694*t2078 - 1.11344*(t10761*t2099 - 1.*t10723*t2104) + t10723*t2107 + t10761*t2116 + 0.135*t1728*t2142 + 0.1305*t1867*t2175 + t1883*t2175 + t1874*t1978*t2175 + 0.135*t1297*t1675*t478;
  p_output1[26]=-0.02159*t11221 + t10943*t1994 + t10983*t2029 + t11020*t2042 + t11069*t2070 + t11108*t2078 - 1.11344*(t11141*t2099 - 1.*t11136*t2104) + t11136*t2107 + t11141*t2116 + 0.135*t1728*t2275 + 0.1305*t1867*t2284 + t1883*t2284 + t1874*t1978*t2284 - 0.135*t1436*t1675*t478;
  p_output1[27]=t2367*(-1.*t1867*t2260*t2284*t2322 + t1867*t2175*t2313*t2322 + t10811*t2317*t2322 - 1.*t11221*t2322*t2389 - 0.5*t11324*t2260*t2317*t2392 + 0.5*t11324*t2313*t2389*t2392)*t2426 + (t11221*t2268*t2322 - 1.*t10257*t2317*t2322 - 1.*t1867*t2313*t2322*t2337 + t1867*t2284*t2322*t2365 - 0.5*t11324*t2268*t2313*t2392 + 0.5*t11324*t2317*t2365*t2392)*t2417*t2426;
  p_output1[28]=-0.02159*t11778 + t11446*t1146*t1675 + t11514*t1978 + t11514*t1969*t2029 - 1.*t11514*t1973*t2042 + t11588*t2070 + t11602*t2078 - 1.11344*(t11744*t2099 - 1.*t11612*t2104) + t11612*t2107 + t11744*t2116 + t11465*t2265 + 0.1305*(-1.*t1146*t1675*t1867 - 1.*t1874*t2265);
  p_output1[29]=-0.02159*t12021 + t11838*t2070 + t11850*t2078 - 1.11344*(t11964*t2099 - 1.*t11909*t2104) + t11909*t2107 + t11964*t2116 + t11465*t2149 + t11446*t2154 + 0.1305*(-1.*t1874*t2149 - 1.*t1867*t2154) + t1978*t2160 + t1969*t2029*t2160 - 1.*t1973*t2042*t2160;
  p_output1[30]=-0.02159*t12267 + t12067*t1978 + t12067*t1969*t2029 - 1.*t12067*t1973*t2042 + t12145*t2070 + t12172*t2078 - 1.11344*(t12222*t2099 - 1.*t12189*t2104) + t12189*t2107 + t12222*t2116 + t11446*t2271 + t11465*t2278 + 0.1305*(-1.*t1867*t2271 - 1.*t1874*t2278);
  p_output1[31]=t2367*(t2260*t2280*t2322 - 1.*t2165*t2313*t2322 + t12021*t2317*t2322 - 1.*t12267*t2322*t2389 - 0.5*t12290*t2260*t2317*t2392 + 0.5*t12290*t2313*t2389*t2392)*t2426 + (t12267*t2268*t2322 - 1.*t11778*t2317*t2322 + t2313*t2322*t2327 - 1.*t2280*t2322*t2365 - 0.5*t12290*t2268*t2313*t2392 + 0.5*t12290*t2317*t2365*t2392)*t2417*t2426;
  p_output1[32]=-0.02159*t12402 + t12355*t2042 + t12372*t2070 + t12366*t2078 - 1.11344*(t12378*t2099 - 1.*t12390*t2104) + t12390*t2107 + t12378*t2116 + t12346*t2327 + t12337*t2337 + t2029*t2345;
  p_output1[33]=-0.02159*t12502 + t12450*t2042 + t12470*t2070 + t12460*t2078 - 1.11344*(t12478*t2099 - 1.*t12490*t2104) + t12490*t2107 + t12478*t2116 + t12346*t2165 + t12337*t2175 + t2029*t2186;
  p_output1[34]=-0.02159*t12550 + t12521*t2042 + t12534*t2070 + t12528*t2078 - 1.11344*(t12541*t2099 - 1.*t12546*t2104) + t12546*t2107 + t12541*t2116 + t12346*t2280 + t12337*t2284 + t2029*t2294;
  p_output1[35]=t2367*(t12502*t2317*t2322 - 1.*t12550*t2322*t2389 - 1.*t12550*t2260*t2313*t2317*t2392 + t12550*t2319*t2389*t2392)*t2426 + (t12550*t2268*t2322 - 1.*t12402*t2317*t2322 - 1.*t12550*t2268*t2319*t2392 + t12550*t2313*t2317*t2365*t2392)*t2417*t2426;
  p_output1[36]=-0.02159*t12669 + t12650*t2070 - 1.11344*(t12658*t2099 - 1.*t12662*t2104) + t12662*t2107 + t12658*t2116 + t12620*t2340 + t12645*t2345 + t2078*t2348;
  p_output1[37]=-0.02159*t12697 + t12684*t2070 - 1.11344*(t12690*t2099 - 1.*t12693*t2104) + t12693*t2107 + t12690*t2116 + t12620*t2180 + t12645*t2186 + t2078*t2191;
  p_output1[38]=-0.02159*t12750 + t12725*t2070 - 1.11344*(t12738*t2099 - 1.*t12742*t2104) + t12742*t2107 + t12738*t2116 + t12620*t2286 + t12645*t2294 + t2078*t2296;
  p_output1[39]=t2367*(t12697*t2317*t2322 - 1.*t12750*t2322*t2389 - 1.*t12750*t2260*t2313*t2317*t2392 + t12750*t2319*t2389*t2392)*t2426 + (t12750*t2268*t2322 - 1.*t12669*t2317*t2322 - 1.*t12750*t2268*t2319*t2392 + t12750*t2313*t2317*t2365*t2392)*t2417*t2426;
  p_output1[40]=-0.02159*t12801 - 1.11344*(t12812 + t12795*t2099) + t12795*t2116 + t12784*t2348 + t12790*t2353 + t2107*t2361;
  p_output1[41]=-0.02159*t12830 - 1.11344*(t12833 + t12822*t2099) + t12822*t2116 + t12784*t2191 + t12790*t2196 + t2107*t2208;
  p_output1[42]=-0.02159*t12850 - 1.11344*(t12855 + t12842*t2099) + t12842*t2116 + t12784*t2296 + t12790*t2302 + t2107*t2310;
  p_output1[43]=t2367*(t12830*t2317*t2322 - 1.*t12850*t2322*t2389 - 1.*t12850*t2260*t2313*t2317*t2392 + t12850*t2319*t2389*t2392)*t2426 + (t12850*t2268*t2322 - 1.*t12801*t2317*t2322 - 1.*t12850*t2268*t2319*t2392 + t12850*t2313*t2317*t2365*t2392)*t2417*t2426;
  p_output1[44]=-0.02159*t12912 + t12893*t2356 - 1.11344*(t12812 - 1.*t2099*t2356) + t12902*t2361;
  p_output1[45]=t12893*t2202 - 1.11344*(t12833 - 1.*t2099*t2202) + t12902*t2208 - 0.02159*t2230;
  p_output1[46]=-0.02159*t12954 + t12893*t2305 - 1.11344*(t12855 - 1.*t2099*t2305) + t12902*t2310;
  p_output1[47]=t2367*(t2230*t2317*t2322 - 1.*t12954*t2322*t2389 - 1.*t12954*t2260*t2313*t2317*t2392 + t12954*t2319*t2389*t2392)*t2426 + (t12954*t2268*t2322 - 1.*t12912*t2317*t2322 - 1.*t12954*t2268*t2319*t2392 + t12954*t2313*t2317*t2365*t2392)*t2417*t2426;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftPoint_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




