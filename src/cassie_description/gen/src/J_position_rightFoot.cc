/*
 * Automatically Generated from Mathematica.
 * Mon 13 Sep 2021 16:09:01 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_position_rightFoot.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t535;
  double t600;
  double t686;
  double t724;
  double t739;
  double t846;
  double t903;
  double t933;
  double t986;
  double t1088;
  double t1089;
  double t1091;
  double t1096;
  double t1083;
  double t1084;
  double t1085;
  double t1162;
  double t1106;
  double t1111;
  double t1116;
  double t1249;
  double t1254;
  double t1259;
  double t1318;
  double t1325;
  double t1329;
  double t1341;
  double t1345;
  double t1363;
  double t1377;
  double t1401;
  double t1402;
  double t1408;
  double t1436;
  double t1446;
  double t1460;
  double t1499;
  double t1507;
  double t1509;
  double t1510;
  double t1517;
  double t1518;
  double t1519;
  double t1527;
  double t1530;
  double t1537;
  double t1539;
  double t1574;
  double t1576;
  double t1577;
  double t1584;
  double t1585;
  double t1586;
  double t1589;
  double t1590;
  double t1592;
  double t1594;
  double t1598;
  double t1600;
  double t1601;
  double t1622;
  double t1630;
  double t1633;
  double t731;
  double t735;
  double t1095;
  double t1098;
  double t1103;
  double t944;
  double t996;
  double t1032;
  double t1136;
  double t1140;
  double t1161;
  double t1207;
  double t1226;
  double t1243;
  double t1657;
  double t1659;
  double t1660;
  double t1333;
  double t1342;
  double t1343;
  double t1653;
  double t1654;
  double t1655;
  double t1664;
  double t1665;
  double t1667;
  double t1392;
  double t1399;
  double t1400;
  double t1472;
  double t1505;
  double t1506;
  double t1684;
  double t1685;
  double t1687;
  double t1689;
  double t1697;
  double t1698;
  double t1513;
  double t1514;
  double t1515;
  double t1538;
  double t1572;
  double t1573;
  double t1701;
  double t1702;
  double t1703;
  double t1706;
  double t1707;
  double t1709;
  double t1580;
  double t1581;
  double t1582;
  double t1593;
  double t1596;
  double t1597;
  double t1711;
  double t1713;
  double t1714;
  double t1717;
  double t1718;
  double t1719;
  double t1604;
  double t1607;
  double t1611;
  double t1740;
  double t1741;
  double t1743;
  double t1745;
  double t1747;
  double t1748;
  double t1778;
  double t1779;
  double t1786;
  double t1794;
  double t1795;
  double t1796;
  double t1799;
  double t1800;
  double t1802;
  double t1804;
  double t1806;
  double t1807;
  double t1819;
  double t1820;
  double t1822;
  double t1824;
  double t1825;
  double t1826;
  double t1829;
  double t1830;
  double t1831;
  double t1834;
  double t1835;
  double t1837;
  double t1839;
  double t1841;
  double t1842;
  double t1880;
  double t1881;
  double t1882;
  double t1885;
  double t1886;
  double t1888;
  double t1892;
  double t1893;
  double t1894;
  double t1897;
  double t1898;
  double t1906;
  double t1911;
  double t1912;
  double t1914;
  double t1916;
  double t1918;
  double t1919;
  double t1922;
  double t1923;
  double t1924;
  double t1927;
  double t1928;
  double t1930;
  double t1932;
  double t1934;
  double t1935;
  double t1969;
  double t1971;
  double t1972;
  double t1975;
  double t1976;
  double t1977;
  double t1980;
  double t1981;
  double t1983;
  double t1985;
  double t1999;
  double t2000;
  double t2003;
  double t2004;
  double t2006;
  double t2009;
  double t2010;
  double t2011;
  double t2014;
  double t2015;
  double t2026;
  double t2028;
  double t2031;
  double t2032;
  double t2035;
  double t2037;
  double t2038;
  double t2068;
  double t2069;
  double t2070;
  double t2073;
  double t2075;
  double t2076;
  double t2079;
  double t2080;
  double t2082;
  double t2084;
  double t2097;
  double t2098;
  double t2102;
  double t2104;
  double t2105;
  double t2118;
  double t2119;
  double t2120;
  double t2123;
  double t2125;
  double t2126;
  double t2129;
  double t2130;
  double t2132;
  double t2165;
  double t2173;
  double t2174;
  double t2184;
  double t2185;
  double t2186;
  double t2190;
  double t2192;
  double t2193;
  double t2199;
  double t2204;
  double t2205;
  double t2208;
  double t2209;
  double t2210;
  double t2212;
  double t2229;
  double t2230;
  double t2293;
  double t2454;
  double t2461;
  double t2713;
  double t2908;
  double t2955;
  double t3065;
  double t3315;
  double t3316;
  double t4261;
  double t4270;
  double t4297;
  double t4357;
  double t4366;
  double t4404;
  double t4520;
  double t4527;
  double t4534;
  double t4638;
  double t4685;
  double t4702;
  double t4729;
  double t4740;
  double t4768;
  double t4831;
  double t4867;
  double t4885;
  double t4938;
  double t4980;
  double t5005;
  double t5024;
  double t5062;
  double t5066;
  double t5100;
  double t5130;
  double t5156;
  double t5458;
  double t5462;
  double t5466;
  double t5546;
  double t5551;
  double t5581;
  double t5624;
  double t5639;
  double t5656;
  double t5677;
  double t5696;
  double t5702;
  double t5710;
  double t5714;
  double t5732;
  double t5780;
  double t5781;
  double t5808;
  double t5837;
  double t5842;
  double t5843;
  double t5444;
  double t5446;
  double t5404;
  double t5413;
  double t5422;
  double t1669;
  double t1680;
  double t1681;
  double t6440;
  double t6447;
  double t6461;
  double t6540;
  double t6552;
  double t6558;
  double t6578;
  double t6581;
  double t6646;
  double t6683;
  double t6729;
  double t6913;
  double t6947;
  double t6948;
  double t6951;
  double t6983;
  double t6988;
  double t6993;
  double t7110;
  double t7111;
  double t7117;
  double t7144;
  double t7150;
  double t7152;
  double t7176;
  double t7177;
  double t7187;
  double t7194;
  double t7196;
  double t7197;
  double t7231;
  double t7251;
  double t7260;
  double t7268;
  double t7269;
  double t7272;
  double t7278;
  double t7282;
  double t7286;
  double t7294;
  double t7295;
  double t7301;
  double t7432;
  double t7442;
  double t7443;
  double t7446;
  double t7447;
  double t7448;
  double t7460;
  double t7464;
  double t7466;
  double t7477;
  double t7481;
  double t7487;
  double t7504;
  double t7511;
  double t7518;
  double t7538;
  double t7544;
  double t7558;
  double t7564;
  double t7578;
  double t7580;
  double t7582;
  double t7583;
  double t7584;
  double t7587;
  double t7588;
  double t7591;
  double t7377;
  double t7389;
  double t7406;
  double t7422;
  double t7430;
  double t7607;
  double t7608;
  double t7612;
  double t7615;
  double t7617;
  double t7625;
  double t7626;
  double t7629;
  double t7632;
  double t7635;
  double t7636;
  double t7640;
  double t7642;
  double t7644;
  double t7650;
  double t7651;
  double t7652;
  double t7658;
  double t7659;
  double t7673;
  double t7763;
  double t7764;
  double t7765;
  double t7767;
  double t7768;
  double t7772;
  double t7781;
  double t7791;
  double t7808;
  double t7833;
  double t7838;
  double t7839;
  double t7847;
  double t7854;
  double t7858;
  double t7862;
  double t7864;
  double t7866;
  double t7870;
  double t7871;
  double t7872;
  double t7876;
  double t7881;
  double t7889;
  double t7911;
  double t7917;
  double t7923;
  double t7975;
  double t7980;
  double t7986;
  double t7999;
  double t8000;
  double t8003;
  double t8015;
  double t8024;
  double t8026;
  double t8032;
  double t8036;
  double t8037;
  double t8044;
  double t8049;
  double t8052;
  double t8057;
  double t8061;
  double t8062;
  double t8068;
  double t7963;
  double t7964;
  double t7970;
  double t7988;
  double t7993;
  double t8098;
  double t8101;
  double t8122;
  double t8129;
  double t8137;
  double t8150;
  double t8170;
  double t8177;
  double t8179;
  double t8186;
  double t8196;
  double t8197;
  double t8202;
  double t8262;
  double t8266;
  double t8269;
  double t8276;
  double t8278;
  double t8301;
  double t8304;
  double t8311;
  double t8316;
  double t8319;
  double t8333;
  double t8337;
  double t8347;
  double t8360;
  double t8374;
  double t8376;
  double t8386;
  double t8389;
  double t8390;
  double t8412;
  double t8413;
  double t8414;
  double t8416;
  double t8417;
  double t8419;
  double t8420;
  double t8422;
  double t8424;
  double t8425;
  double t8427;
  double t8446;
  double t8447;
  double t8403;
  double t8404;
  double t8406;
  double t8407;
  double t8408;
  double t8530;
  double t8534;
  double t8549;
  double t8556;
  double t8564;
  double t8565;
  double t8566;
  double t8669;
  double t8671;
  double t8673;
  double t8684;
  double t8685;
  double t8700;
  double t8712;
  double t8725;
  double t8729;
  double t8735;
  double t8739;
  double t8740;
  double t8743;
  double t8778;
  double t8779;
  double t8784;
  double t8805;
  double t8806;
  double t8809;
  double t8810;
  double t8770;
  double t8776;
  double t8777;
  double t8789;
  double t8797;
  double t8850;
  double t8851;
  double t1756;
  double t8893;
  double t8901;
  double t8908;
  double t8913;
  double t8914;
  double t8940;
  double t8954;
  double t8814;
  double t9024;
  double t9030;
  double t9031;
  double t8821;
  double t8996;
  double t9001;
  double t9006;
  double t9012;
  double t9018;
  double t8856;
  double t1757;
  double t1759;
  double t8970;
  double t9090;
  double t9093;
  double t9096;
  double t8986;
  t535 = Cos(var1[3]);
  t600 = Cos(var1[4]);
  t686 = Sin(var1[14]);
  t724 = Cos(var1[14]);
  t739 = Sin(var1[3]);
  t846 = Cos(var1[15]);
  t903 = -1.*t846;
  t933 = 1. + t903;
  t986 = Sin(var1[15]);
  t1088 = Cos(var1[16]);
  t1089 = -1.*t1088;
  t1091 = 1. + t1089;
  t1096 = Sin(var1[16]);
  t1083 = -1.*t535*t600*t686;
  t1084 = -1.*t724*t739;
  t1085 = t1083 + t1084;
  t1162 = Sin(var1[4]);
  t1106 = -1.*t724*t535*t600;
  t1111 = t686*t739;
  t1116 = t1106 + t1111;
  t1249 = t986*t1085;
  t1254 = t846*t535*t1162;
  t1259 = t1249 + t1254;
  t1318 = Cos(var1[17]);
  t1325 = -1.*t1318;
  t1329 = 1. + t1325;
  t1341 = Sin(var1[17]);
  t1345 = t1096*t1116;
  t1363 = t1088*t1259;
  t1377 = t1345 + t1363;
  t1401 = t1088*t1116;
  t1402 = -1.*t1096*t1259;
  t1408 = t1401 + t1402;
  t1436 = Cos(var1[18]);
  t1446 = -1.*t1436;
  t1460 = 1. + t1446;
  t1499 = Sin(var1[18]);
  t1507 = -1.*t1341*t1377;
  t1509 = t1318*t1408;
  t1510 = t1507 + t1509;
  t1517 = t1318*t1377;
  t1518 = t1341*t1408;
  t1519 = t1517 + t1518;
  t1527 = Cos(var1[19]);
  t1530 = -1.*t1527;
  t1537 = 1. + t1530;
  t1539 = Sin(var1[19]);
  t1574 = t1499*t1510;
  t1576 = t1436*t1519;
  t1577 = t1574 + t1576;
  t1584 = t1436*t1510;
  t1585 = -1.*t1499*t1519;
  t1586 = t1584 + t1585;
  t1589 = Cos(var1[21]);
  t1590 = -1.*t1589;
  t1592 = 1. + t1590;
  t1594 = Sin(var1[21]);
  t1598 = -1.*t1539*t1577;
  t1600 = t1527*t1586;
  t1601 = t1598 + t1600;
  t1622 = t1527*t1577;
  t1630 = t1539*t1586;
  t1633 = t1622 + t1630;
  t731 = -1.*t724;
  t735 = 1. + t731;
  t1095 = -0.09*t1091;
  t1098 = 0.049*t1096;
  t1103 = t1095 + t1098;
  t944 = -0.135*t933;
  t996 = 0.049*t986;
  t1032 = t944 + t996;
  t1136 = -0.049*t933;
  t1140 = -0.135*t986;
  t1161 = t1136 + t1140;
  t1207 = -0.049*t1091;
  t1226 = -0.09*t1096;
  t1243 = t1207 + t1226;
  t1657 = t724*t535;
  t1659 = -1.*t600*t686*t739;
  t1660 = t1657 + t1659;
  t1333 = -0.049*t1329;
  t1342 = -0.21*t1341;
  t1343 = t1333 + t1342;
  t1653 = -1.*t535*t686;
  t1654 = -1.*t724*t600*t739;
  t1655 = t1653 + t1654;
  t1664 = t986*t1660;
  t1665 = t846*t739*t1162;
  t1667 = t1664 + t1665;
  t1392 = -0.21*t1329;
  t1399 = 0.049*t1341;
  t1400 = t1392 + t1399;
  t1472 = -0.27068*t1460;
  t1505 = 0.00159*t1499;
  t1506 = t1472 + t1505;
  t1684 = t1096*t1655;
  t1685 = t1088*t1667;
  t1687 = t1684 + t1685;
  t1689 = t1088*t1655;
  t1697 = -1.*t1096*t1667;
  t1698 = t1689 + t1697;
  t1513 = -0.00159*t1460;
  t1514 = -0.27068*t1499;
  t1515 = t1513 + t1514;
  t1538 = 0.01841*t1537;
  t1572 = -0.70544*t1539;
  t1573 = t1538 + t1572;
  t1701 = -1.*t1341*t1687;
  t1702 = t1318*t1698;
  t1703 = t1701 + t1702;
  t1706 = t1318*t1687;
  t1707 = t1341*t1698;
  t1709 = t1706 + t1707;
  t1580 = -0.70544*t1537;
  t1581 = -0.01841*t1539;
  t1582 = t1580 + t1581;
  t1593 = -1.11344*t1592;
  t1596 = 0.02159*t1594;
  t1597 = t1593 + t1596;
  t1711 = t1499*t1703;
  t1713 = t1436*t1709;
  t1714 = t1711 + t1713;
  t1717 = t1436*t1703;
  t1718 = -1.*t1499*t1709;
  t1719 = t1717 + t1718;
  t1604 = -0.02159*t1592;
  t1607 = -1.11344*t1594;
  t1611 = t1604 + t1607;
  t1740 = -1.*t1539*t1714;
  t1741 = t1527*t1719;
  t1743 = t1740 + t1741;
  t1745 = t1527*t1714;
  t1747 = t1539*t1719;
  t1748 = t1745 + t1747;
  t1778 = t600*t686*t986;
  t1779 = -1.*t846*t1162;
  t1786 = t1778 + t1779;
  t1794 = t724*t600*t1096;
  t1795 = t1088*t1786;
  t1796 = t1794 + t1795;
  t1799 = t724*t1088*t600;
  t1800 = -1.*t1096*t1786;
  t1802 = t1799 + t1800;
  t1804 = -1.*t1341*t1796;
  t1806 = t1318*t1802;
  t1807 = t1804 + t1806;
  t1819 = t1318*t1796;
  t1820 = t1341*t1802;
  t1822 = t1819 + t1820;
  t1824 = t1499*t1807;
  t1825 = t1436*t1822;
  t1826 = t1824 + t1825;
  t1829 = t1436*t1807;
  t1830 = -1.*t1499*t1822;
  t1831 = t1829 + t1830;
  t1834 = -1.*t1539*t1826;
  t1835 = t1527*t1831;
  t1837 = t1834 + t1835;
  t1839 = t1527*t1826;
  t1841 = t1539*t1831;
  t1842 = t1839 + t1841;
  t1880 = t846*t600*t739;
  t1881 = t686*t986*t739*t1162;
  t1882 = t1880 + t1881;
  t1885 = t724*t1096*t739*t1162;
  t1886 = t1088*t1882;
  t1888 = t1885 + t1886;
  t1892 = t724*t1088*t739*t1162;
  t1893 = -1.*t1096*t1882;
  t1894 = t1892 + t1893;
  t1897 = -1.*t1341*t1888;
  t1898 = t1318*t1894;
  t1906 = t1897 + t1898;
  t1911 = t1318*t1888;
  t1912 = t1341*t1894;
  t1914 = t1911 + t1912;
  t1916 = t1499*t1906;
  t1918 = t1436*t1914;
  t1919 = t1916 + t1918;
  t1922 = t1436*t1906;
  t1923 = -1.*t1499*t1914;
  t1924 = t1922 + t1923;
  t1927 = -1.*t1539*t1919;
  t1928 = t1527*t1924;
  t1930 = t1927 + t1928;
  t1932 = t1527*t1919;
  t1934 = t1539*t1924;
  t1935 = t1932 + t1934;
  t1969 = -1.*t846*t535*t600;
  t1971 = -1.*t535*t686*t986*t1162;
  t1972 = t1969 + t1971;
  t1975 = -1.*t724*t535*t1096*t1162;
  t1976 = t1088*t1972;
  t1977 = t1975 + t1976;
  t1980 = -1.*t724*t1088*t535*t1162;
  t1981 = -1.*t1096*t1972;
  t1983 = t1980 + t1981;
  t1985 = -1.*t1341*t1977;
  t1999 = t1318*t1983;
  t2000 = t1985 + t1999;
  t2003 = t1318*t1977;
  t2004 = t1341*t1983;
  t2006 = t2003 + t2004;
  t2009 = t1499*t2000;
  t2010 = t1436*t2006;
  t2011 = t2009 + t2010;
  t2014 = t1436*t2000;
  t2015 = -1.*t1499*t2006;
  t2026 = t2014 + t2015;
  t2028 = -1.*t1539*t2011;
  t2031 = t1527*t2026;
  t2032 = t2028 + t2031;
  t2035 = t1527*t2011;
  t2037 = t1539*t2026;
  t2038 = t2035 + t2037;
  t2068 = t724*t1088*t986*t1162;
  t2069 = -1.*t686*t1096*t1162;
  t2070 = t2068 + t2069;
  t2073 = -1.*t1088*t686*t1162;
  t2075 = -1.*t724*t986*t1096*t1162;
  t2076 = t2073 + t2075;
  t2079 = -1.*t1341*t2070;
  t2080 = t1318*t2076;
  t2082 = t2079 + t2080;
  t2084 = t1318*t2070;
  t2097 = t1341*t2076;
  t2098 = t2084 + t2097;
  t2102 = t1499*t2082;
  t2104 = t1436*t2098;
  t2105 = t2102 + t2104;
  t2118 = t1436*t2082;
  t2119 = -1.*t1499*t2098;
  t2120 = t2118 + t2119;
  t2123 = -1.*t1539*t2105;
  t2125 = t1527*t2120;
  t2126 = t2123 + t2125;
  t2129 = t1527*t2105;
  t2130 = t1539*t2120;
  t2132 = t2129 + t2130;
  t2165 = -1.*t724*t535;
  t2173 = t600*t686*t739;
  t2174 = t2165 + t2173;
  t2184 = -1.*t986*t1096*t1655;
  t2185 = t1088*t2174;
  t2186 = t2184 + t2185;
  t2190 = t1088*t986*t1655;
  t2192 = t1096*t2174;
  t2193 = t2190 + t2192;
  t2199 = t1341*t2186;
  t2204 = t1318*t2193;
  t2205 = t2199 + t2204;
  t2208 = t1318*t2186;
  t2209 = -1.*t1341*t2193;
  t2210 = t2208 + t2209;
  t2212 = -1.*t1499*t2205;
  t2229 = t1436*t2210;
  t2230 = t2212 + t2229;
  t2293 = t1436*t2205;
  t2454 = t1499*t2210;
  t2461 = t2293 + t2454;
  t2713 = t1539*t2230;
  t2908 = t1527*t2461;
  t2955 = t2713 + t2908;
  t3065 = t1527*t2230;
  t3315 = -1.*t1539*t2461;
  t3316 = t3065 + t3315;
  t4261 = t724*t535*t600;
  t4270 = -1.*t686*t739;
  t4297 = t4261 + t4270;
  t4357 = t1096*t1085;
  t4366 = t1088*t986*t4297;
  t4404 = t4357 + t4366;
  t4520 = t1088*t1085;
  t4527 = -1.*t986*t1096*t4297;
  t4534 = t4520 + t4527;
  t4638 = -1.*t1341*t4404;
  t4685 = t1318*t4534;
  t4702 = t4638 + t4685;
  t4729 = t1318*t4404;
  t4740 = t1341*t4534;
  t4768 = t4729 + t4740;
  t4831 = t1499*t4702;
  t4867 = t1436*t4768;
  t4885 = t4831 + t4867;
  t4938 = t1436*t4702;
  t4980 = -1.*t1499*t4768;
  t5005 = t4938 + t4980;
  t5024 = -1.*t1539*t4885;
  t5062 = t1527*t5005;
  t5066 = t5024 + t5062;
  t5100 = t1527*t4885;
  t5130 = t1539*t5005;
  t5156 = t5100 + t5130;
  t5458 = -1.*t600*t986;
  t5462 = t846*t686*t1162;
  t5466 = t5458 + t5462;
  t5546 = -1.*t1318*t1096*t5466;
  t5551 = -1.*t1088*t1341*t5466;
  t5581 = t5546 + t5551;
  t5624 = t1088*t1318*t5466;
  t5639 = -1.*t1096*t1341*t5466;
  t5656 = t5624 + t5639;
  t5677 = t1499*t5581;
  t5696 = t1436*t5656;
  t5702 = t5677 + t5696;
  t5710 = t1436*t5581;
  t5714 = -1.*t1499*t5656;
  t5732 = t5710 + t5714;
  t5780 = -1.*t1539*t5702;
  t5781 = t1527*t5732;
  t5808 = t5780 + t5781;
  t5837 = t1527*t5702;
  t5842 = t1539*t5732;
  t5843 = t5837 + t5842;
  t5444 = 0.049*t846;
  t5446 = t5444 + t1140;
  t5404 = -0.135*t846;
  t5413 = -0.049*t986;
  t5422 = t5404 + t5413;
  t1669 = t846*t1660;
  t1680 = -1.*t986*t739*t1162;
  t1681 = t1669 + t1680;
  t6440 = -1.*t1318*t1096*t1681;
  t6447 = -1.*t1088*t1341*t1681;
  t6461 = t6440 + t6447;
  t6540 = t1088*t1318*t1681;
  t6552 = -1.*t1096*t1341*t1681;
  t6558 = t6540 + t6552;
  t6578 = t1499*t6461;
  t6581 = t1436*t6558;
  t6646 = t6578 + t6581;
  t6683 = t1436*t6461;
  t6729 = -1.*t1499*t6558;
  t6913 = t6683 + t6729;
  t6947 = -1.*t1539*t6646;
  t6948 = t1527*t6913;
  t6951 = t6947 + t6948;
  t6983 = t1527*t6646;
  t6988 = t1539*t6913;
  t6993 = t6983 + t6988;
  t7110 = t535*t600*t686;
  t7111 = t724*t739;
  t7117 = t7110 + t7111;
  t7144 = t846*t7117;
  t7150 = t535*t986*t1162;
  t7152 = t7144 + t7150;
  t7176 = -1.*t1318*t1096*t7152;
  t7177 = -1.*t1088*t1341*t7152;
  t7187 = t7176 + t7177;
  t7194 = t1088*t1318*t7152;
  t7196 = -1.*t1096*t1341*t7152;
  t7197 = t7194 + t7196;
  t7231 = t1499*t7187;
  t7251 = t1436*t7197;
  t7260 = t7231 + t7251;
  t7268 = t1436*t7187;
  t7269 = -1.*t1499*t7197;
  t7272 = t7268 + t7269;
  t7278 = -1.*t1539*t7260;
  t7282 = t1527*t7272;
  t7286 = t7278 + t7282;
  t7294 = t1527*t7260;
  t7295 = t1539*t7272;
  t7301 = t7294 + t7295;
  t7432 = t846*t600;
  t7442 = t686*t986*t1162;
  t7443 = t7432 + t7442;
  t7446 = -1.*t724*t1096*t1162;
  t7447 = -1.*t1088*t7443;
  t7448 = t7446 + t7447;
  t7460 = t724*t1088*t1162;
  t7464 = -1.*t1096*t7443;
  t7466 = t7460 + t7464;
  t7477 = t1341*t7448;
  t7481 = t1318*t7466;
  t7487 = t7477 + t7481;
  t7504 = t1318*t7448;
  t7511 = -1.*t1341*t7466;
  t7518 = t7504 + t7511;
  t7538 = -1.*t1499*t7487;
  t7544 = t1436*t7518;
  t7558 = t7538 + t7544;
  t7564 = t1436*t7487;
  t7578 = t1499*t7518;
  t7580 = t7564 + t7578;
  t7582 = t1539*t7558;
  t7583 = t1527*t7580;
  t7584 = t7582 + t7583;
  t7587 = t1527*t7558;
  t7588 = -1.*t1539*t7580;
  t7591 = t7587 + t7588;
  t7377 = 0.049*t1088;
  t7389 = t7377 + t1226;
  t7406 = -0.09*t1088;
  t7422 = -0.049*t1096;
  t7430 = t7406 + t7422;
  t7607 = -1.*t1096*t1655;
  t7608 = -1.*t1088*t1667;
  t7612 = t7607 + t7608;
  t7615 = t1341*t7612;
  t7617 = t7615 + t1702;
  t7625 = t1318*t7612;
  t7626 = -1.*t1341*t1698;
  t7629 = t7625 + t7626;
  t7632 = -1.*t1499*t7617;
  t7635 = t1436*t7629;
  t7636 = t7632 + t7635;
  t7640 = t1436*t7617;
  t7642 = t1499*t7629;
  t7644 = t7640 + t7642;
  t7650 = t1539*t7636;
  t7651 = t1527*t7644;
  t7652 = t7650 + t7651;
  t7658 = t1527*t7636;
  t7659 = -1.*t1539*t7644;
  t7673 = t7658 + t7659;
  t7763 = t986*t7117;
  t7764 = -1.*t846*t535*t1162;
  t7765 = t7763 + t7764;
  t7767 = -1.*t1096*t4297;
  t7768 = -1.*t1088*t7765;
  t7772 = t7767 + t7768;
  t7781 = t1088*t4297;
  t7791 = -1.*t1096*t7765;
  t7808 = t7781 + t7791;
  t7833 = t1341*t7772;
  t7838 = t1318*t7808;
  t7839 = t7833 + t7838;
  t7847 = t1318*t7772;
  t7854 = -1.*t1341*t7808;
  t7858 = t7847 + t7854;
  t7862 = -1.*t1499*t7839;
  t7864 = t1436*t7858;
  t7866 = t7862 + t7864;
  t7870 = t1436*t7839;
  t7871 = t1499*t7858;
  t7872 = t7870 + t7871;
  t7876 = t1539*t7866;
  t7881 = t1527*t7872;
  t7889 = t7876 + t7881;
  t7911 = t1527*t7866;
  t7917 = -1.*t1539*t7872;
  t7923 = t7911 + t7917;
  t7975 = t724*t1096*t1162;
  t7980 = t1088*t7443;
  t7986 = t7975 + t7980;
  t7999 = -1.*t1341*t7986;
  t8000 = t7999 + t7481;
  t8003 = -1.*t1318*t7986;
  t8015 = t8003 + t7511;
  t8024 = -1.*t1499*t8000;
  t8026 = t1436*t8015;
  t8032 = t8024 + t8026;
  t8036 = t1436*t8000;
  t8037 = t1499*t8015;
  t8044 = t8036 + t8037;
  t8049 = t1539*t8032;
  t8052 = t1527*t8044;
  t8057 = t8049 + t8052;
  t8061 = t1527*t8032;
  t8062 = -1.*t1539*t8044;
  t8068 = t8061 + t8062;
  t7963 = -0.21*t1318;
  t7964 = -0.049*t1341;
  t7970 = t7963 + t7964;
  t7988 = 0.049*t1318;
  t7993 = t7988 + t1342;
  t8098 = -1.*t1318*t1687;
  t8101 = t8098 + t7626;
  t8122 = -1.*t1499*t1703;
  t8129 = t1436*t8101;
  t8137 = t8122 + t8129;
  t8150 = t1499*t8101;
  t8170 = t1717 + t8150;
  t8177 = t1539*t8137;
  t8179 = t1527*t8170;
  t8186 = t8177 + t8179;
  t8196 = t1527*t8137;
  t8197 = -1.*t1539*t8170;
  t8202 = t8196 + t8197;
  t8262 = t1096*t4297;
  t8266 = t1088*t7765;
  t8269 = t8262 + t8266;
  t8276 = -1.*t1341*t8269;
  t8278 = t8276 + t7838;
  t8301 = -1.*t1318*t8269;
  t8304 = t8301 + t7854;
  t8311 = -1.*t1499*t8278;
  t8316 = t1436*t8304;
  t8319 = t8311 + t8316;
  t8333 = t1436*t8278;
  t8337 = t1499*t8304;
  t8347 = t8333 + t8337;
  t8360 = t1539*t8319;
  t8374 = t1527*t8347;
  t8376 = t8360 + t8374;
  t8386 = t1527*t8319;
  t8389 = -1.*t1539*t8347;
  t8390 = t8386 + t8389;
  t8412 = t1318*t7986;
  t8413 = t1341*t7466;
  t8414 = t8412 + t8413;
  t8416 = -1.*t1436*t8414;
  t8417 = t8024 + t8416;
  t8419 = -1.*t1499*t8414;
  t8420 = t8036 + t8419;
  t8422 = t1539*t8417;
  t8424 = t1527*t8420;
  t8425 = t8422 + t8424;
  t8427 = t1527*t8417;
  t8446 = -1.*t1539*t8420;
  t8447 = t8427 + t8446;
  t8403 = 0.00159*t1436;
  t8404 = t8403 + t1514;
  t8406 = -0.27068*t1436;
  t8407 = -0.00159*t1499;
  t8408 = t8406 + t8407;
  t8530 = -1.*t1436*t1709;
  t8534 = t8122 + t8530;
  t8549 = t1539*t8534;
  t8556 = t8549 + t1741;
  t8564 = t1527*t8534;
  t8565 = -1.*t1539*t1719;
  t8566 = t8564 + t8565;
  t8669 = t1318*t8269;
  t8671 = t1341*t7808;
  t8673 = t8669 + t8671;
  t8684 = -1.*t1436*t8673;
  t8685 = t8311 + t8684;
  t8700 = -1.*t1499*t8673;
  t8712 = t8333 + t8700;
  t8725 = t1539*t8685;
  t8729 = t1527*t8712;
  t8735 = t8725 + t8729;
  t8739 = t1527*t8685;
  t8740 = -1.*t1539*t8712;
  t8743 = t8739 + t8740;
  t8778 = t1499*t8000;
  t8779 = t1436*t8414;
  t8784 = t8778 + t8779;
  t8805 = -1.*t1539*t8784;
  t8806 = t8805 + t8424;
  t8809 = -1.*t1527*t8784;
  t8810 = t8809 + t8446;
  t8770 = -0.70544*t1527;
  t8776 = 0.01841*t1539;
  t8777 = t8770 + t8776;
  t8789 = -0.01841*t1527;
  t8797 = t8789 + t1572;
  t8850 = -1.*t1527*t1714;
  t8851 = t8850 + t8565;
  t1756 = t1589*t1743;
  t8893 = t1499*t8278;
  t8901 = t1436*t8673;
  t8908 = t8893 + t8901;
  t8913 = -1.*t1539*t8908;
  t8914 = t8913 + t8729;
  t8940 = -1.*t1527*t8908;
  t8954 = t8940 + t8740;
  t8814 = -1.*t1594*t8806;
  t9024 = t1527*t8784;
  t9030 = t1539*t8420;
  t9031 = t9024 + t9030;
  t8821 = t1589*t8806;
  t8996 = 0.02159*t1589;
  t9001 = t8996 + t1607;
  t9006 = -1.11344*t1589;
  t9012 = -0.02159*t1594;
  t9018 = t9006 + t9012;
  t8856 = -1.*t1594*t1743;
  t1757 = -1.*t1594*t1748;
  t1759 = t1756 + t1757;
  t8970 = -1.*t1594*t8914;
  t9090 = t1527*t8908;
  t9093 = t1539*t8712;
  t9096 = t9090 + t9093;
  t8986 = t1589*t8914;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t1032*t1085 + t1103*t1116 + t1243*t1259 + t1343*t1377 + t1400*t1408 + t1506*t1510 + t1515*t1519 + t1573*t1577 + t1582*t1586 + t1597*t1601 + t1611*t1633 + 0.0306*(t1594*t1601 + t1589*t1633) - 1.13106*(t1589*t1601 - 1.*t1594*t1633) + t1161*t1162*t535 - 0.135*t535*t600*t686 + 0.135*t735*t739 - 0.1305*(t1085*t846 - 1.*t1162*t535*t986);
  p_output1[11]=t1103*t1655 + t1032*t1660 + t1243*t1667 - 0.1305*t1681 + t1343*t1687 + t1400*t1698 + t1506*t1703 + t1515*t1709 + t1573*t1714 + t1582*t1719 + t1597*t1743 + t1611*t1748 + 0.0306*(t1594*t1743 + t1589*t1748) - 1.13106*t1759 - 0.135*t535*t735 + t1161*t1162*t739 - 0.135*t600*t686*t739;
  p_output1[12]=-1.*t1161*t1162 + t1243*t1786 + t1343*t1796 + t1400*t1802 + t1506*t1807 + t1515*t1822 + t1573*t1826 + t1582*t1831 + t1597*t1837 + t1611*t1842 + 0.0306*(t1594*t1837 + t1589*t1842) - 1.13106*(t1589*t1837 - 1.*t1594*t1842) + 0.135*t600*t686 + t1032*t600*t686 + t1103*t600*t724 - 0.1305*(t600*t686*t846 + t1162*t986);
  p_output1[13]=t1243*t1882 + t1343*t1888 + t1400*t1894 + t1506*t1906 + t1515*t1914 + t1573*t1919 + t1582*t1924 + t1597*t1930 + t1611*t1935 + 0.0306*(t1594*t1930 + t1589*t1935) - 1.13106*(t1589*t1930 - 1.*t1594*t1935) + t1161*t600*t739 + 0.135*t1162*t686*t739 + t1032*t1162*t686*t739 + t1103*t1162*t724*t739 - 0.1305*(t1162*t686*t739*t846 - 1.*t600*t739*t986);
  p_output1[14]=t1243*t1972 + t1343*t1977 + t1400*t1983 + t1506*t2000 + t1515*t2006 + t1573*t2011 + t1582*t2026 + t1597*t2032 + t1611*t2038 + 0.0306*(t1594*t2032 + t1589*t2038) - 1.13106*(t1589*t2032 - 1.*t1594*t2038) - 1.*t1161*t535*t600 - 0.135*t1162*t535*t686 - 1.*t1032*t1162*t535*t686 - 1.*t1103*t1162*t535*t724 - 0.1305*(-1.*t1162*t535*t686*t846 + t535*t600*t986);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=t1343*t2070 + t1400*t2076 + t1506*t2082 + t1515*t2098 + t1573*t2105 + t1582*t2120 + t1597*t2126 + t1611*t2132 + 0.0306*(t1594*t2126 + t1589*t2132) - 1.13106*(t1589*t2126 - 1.*t1594*t2132) - 1.*t1103*t1162*t686 + 0.135*t1162*t724 + t1032*t1162*t724 - 0.1305*t1162*t724*t846 + t1162*t1243*t724*t986;
  p_output1[43]=t1032*t1655 + t1103*t2174 + t1400*t2186 + t1343*t2193 + t1515*t2205 + t1506*t2210 + t1582*t2230 + t1573*t2461 + t1611*t2955 + t1597*t3316 - 1.13106*(-1.*t1594*t2955 + t1589*t3316) + 0.0306*(t1589*t2955 + t1594*t3316) - 0.135*t535*t686 - 0.135*t600*t724*t739 - 0.1305*t1655*t846 + t1243*t1655*t986;
  p_output1[44]=t1085*t1103 + t1032*t4297 + t1343*t4404 + t1400*t4534 + t1506*t4702 + t1515*t4768 + t1573*t4885 + t1582*t5005 + t1597*t5066 + t1611*t5156 + 0.0306*(t1594*t5066 + t1589*t5156) - 1.13106*(t1589*t5066 - 1.*t1594*t5156) + 0.135*t535*t600*t724 - 0.135*t686*t739 - 0.1305*t4297*t846 + t1243*t4297*t986;
  p_output1[45]=t1243*t5466 + t1088*t1343*t5466 - 1.*t1096*t1400*t5466 + t1506*t5581 + t1515*t5656 + t1573*t5702 + t1582*t5732 + t1597*t5808 + t1611*t5843 + 0.0306*(t1594*t5808 + t1589*t5843) - 1.13106*(t1589*t5808 - 1.*t1594*t5843) + t5422*t600 + t1162*t5446*t686 - 0.1305*(-1.*t600*t846 - 1.*t1162*t686*t986);
  p_output1[46]=t1243*t1681 + t1088*t1343*t1681 - 1.*t1096*t1400*t1681 + t1660*t5446 + t1506*t6461 + t1515*t6558 + t1573*t6646 + t1582*t6913 + t1597*t6951 + t1611*t6993 + 0.0306*(t1594*t6951 + t1589*t6993) - 1.13106*(t1589*t6951 - 1.*t1594*t6993) + t1162*t5422*t739 - 0.1305*(-1.*t1162*t739*t846 - 1.*t1660*t986);
  p_output1[47]=-1.*t1162*t535*t5422 + t5446*t7117 + t1243*t7152 + t1088*t1343*t7152 - 1.*t1096*t1400*t7152 + t1506*t7187 + t1515*t7197 + t1573*t7260 + t1582*t7272 + t1597*t7286 + t1611*t7301 + 0.0306*(t1594*t7286 + t1589*t7301) - 1.13106*(t1589*t7286 - 1.*t1594*t7301) - 0.1305*(t1254 - 1.*t7117*t986);
  p_output1[48]=t1162*t724*t7389 + t7430*t7443 + t1400*t7448 + t1343*t7466 + t1515*t7487 + t1506*t7518 + t1582*t7558 + t1573*t7580 + t1611*t7584 + t1597*t7591 - 1.13106*(-1.*t1594*t7584 + t1589*t7591) + 0.0306*(t1589*t7584 + t1594*t7591);
  p_output1[49]=t1343*t1698 + t1655*t7389 + t1667*t7430 + t1400*t7612 + t1515*t7617 + t1506*t7629 + t1582*t7636 + t1573*t7644 + t1611*t7652 + t1597*t7673 - 1.13106*(-1.*t1594*t7652 + t1589*t7673) + 0.0306*(t1589*t7652 + t1594*t7673);
  p_output1[50]=t4297*t7389 + t7430*t7765 + t1400*t7772 + t1343*t7808 + t1515*t7839 + t1506*t7858 + t1582*t7866 + t1573*t7872 + t1611*t7889 + t1597*t7923 - 1.13106*(-1.*t1594*t7889 + t1589*t7923) + 0.0306*(t1589*t7889 + t1594*t7923);
  p_output1[51]=t7970*t7986 + t7466*t7993 + t1515*t8000 + t1506*t8015 + t1582*t8032 + t1573*t8044 + t1611*t8057 + t1597*t8068 - 1.13106*(-1.*t1594*t8057 + t1589*t8068) + 0.0306*(t1589*t8057 + t1594*t8068);
  p_output1[52]=t1515*t1703 + t1687*t7970 + t1698*t7993 + t1506*t8101 + t1582*t8137 + t1573*t8170 + t1611*t8186 + t1597*t8202 - 1.13106*(-1.*t1594*t8186 + t1589*t8202) + 0.0306*(t1589*t8186 + t1594*t8202);
  p_output1[53]=t7808*t7993 + t7970*t8269 + t1515*t8278 + t1506*t8304 + t1582*t8319 + t1573*t8347 + t1611*t8376 + t1597*t8390 - 1.13106*(-1.*t1594*t8376 + t1589*t8390) + 0.0306*(t1589*t8376 + t1594*t8390);
  p_output1[54]=t8000*t8404 + t8408*t8414 + t1582*t8417 + t1573*t8420 + t1611*t8425 + t1597*t8447 - 1.13106*(-1.*t1594*t8425 + t1589*t8447) + 0.0306*(t1589*t8425 + t1594*t8447);
  p_output1[55]=t1573*t1719 + t1703*t8404 + t1709*t8408 + t1582*t8534 + t1611*t8556 + t1597*t8566 - 1.13106*(-1.*t1594*t8556 + t1589*t8566) + 0.0306*(t1589*t8556 + t1594*t8566);
  p_output1[56]=t8278*t8404 + t8408*t8673 + t1582*t8685 + t1573*t8712 + t1611*t8735 + t1597*t8743 - 1.13106*(-1.*t1594*t8735 + t1589*t8743) + 0.0306*(t1589*t8735 + t1594*t8743);
  p_output1[57]=t8777*t8784 + t8420*t8797 + t1611*t8806 + t1597*t8810 - 1.13106*(t1589*t8810 + t8814) + 0.0306*(t1594*t8810 + t8821);
  p_output1[58]=t1611*t1743 + t1714*t8777 + t1719*t8797 + t1597*t8851 + 0.0306*(t1756 + t1594*t8851) - 1.13106*(t1589*t8851 + t8856);
  p_output1[59]=t8712*t8797 + t8777*t8908 + t1611*t8914 + t1597*t8954 - 1.13106*(t1589*t8954 + t8970) + 0.0306*(t1594*t8954 + t8986);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t8806*t9001 + t9018*t9031 - 1.13106*(t8814 - 1.*t1589*t9031) + 0.0306*(t8821 - 1.*t1594*t9031);
  p_output1[64]=0.0306*t1759 - 1.13106*(-1.*t1589*t1748 + t8856) + t1743*t9001 + t1748*t9018;
  p_output1[65]=t8914*t9001 + t9018*t9096 - 1.13106*(t8970 - 1.*t1589*t9096) + 0.0306*(t8986 - 1.*t1594*t9096);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_position_rightFoot_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




