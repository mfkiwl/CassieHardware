/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:07 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "Jdot_achilles_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t312;
  double t205;
  double t233;
  double t327;
  double t762;
  double t935;
  double t1395;
  double t1459;
  double t1541;
  double t254;
  double t722;
  double t723;
  double t1877;
  double t2245;
  double t2281;
  double t2414;
  double t2512;
  double t2532;
  double t3628;
  double t2830;
  double t2831;
  double t3231;
  double t3677;
  double t4653;
  double t3253;
  double t5228;
  double t5337;
  double t5342;
  double t1124;
  double t5425;
  double t5463;
  double t2388;
  double t2397;
  double t5486;
  double t5489;
  double t5493;
  double t3794;
  double t5697;
  double t5792;
  double t4046;
  double t4084;
  double t4107;
  double t5849;
  double t5853;
  double t4195;
  double t4236;
  double t4299;
  double t4426;
  double t4559;
  double t4698;
  double t4710;
  double t4725;
  double t4744;
  double t4790;
  double t4818;
  double t4830;
  double t5119;
  double t5187;
  double t5188;
  double t5216;
  double t5225;
  double t5227;
  double t5233;
  double t5234;
  double t5240;
  double t5250;
  double t5270;
  double t5287;
  double t763;
  double t1134;
  double t1355;
  double t1625;
  double t1771;
  double t1778;
  double t1803;
  double t2548;
  double t3888;
  double t3939;
  double t3962;
  double t4166;
  double t4300;
  double t4346;
  double t4410;
  double t4944;
  double t5244;
  double t5278;
  double t5291;
  double t5294;
  double t5305;
  double t5312;
  double t5356;
  double t5363;
  double t5369;
  double t5386;
  double t5389;
  double t5414;
  double t5464;
  double t5472;
  double t5575;
  double t5576;
  double t5611;
  double t6064;
  double t6078;
  double t6084;
  double t6087;
  double t6113;
  double t6125;
  double t6142;
  double t6150;
  double t6157;
  double t6321;
  double t6338;
  double t6380;
  double t6383;
  double t6031;
  double t6032;
  double t6302;
  double t6307;
  double t6308;
  double t6309;
  double t6314;
  double t6317;
  double t6343;
  double t6345;
  double t6346;
  double t6348;
  double t6350;
  double t6351;
  double t6355;
  double t6358;
  double t6360;
  double t6362;
  double t6364;
  double t6366;
  double t6367;
  double t6468;
  double t6470;
  double t6496;
  double t5476;
  double t5694;
  double t5794;
  double t5857;
  double t5858;
  double t5863;
  double t5864;
  double t5867;
  double t5868;
  double t5886;
  double t5892;
  double t5906;
  double t5929;
  double t5941;
  double t5944;
  double t6009;
  double t5318;
  double t5323;
  double t5378;
  double t5417;
  double t6012;
  double t6530;
  double t6531;
  double t6533;
  double t6534;
  double t6535;
  double t6536;
  double t6538;
  double t6539;
  double t6034;
  double t6046;
  double t6055;
  double t6059;
  double t6085;
  double t6086;
  double t6133;
  double t6162;
  double t6164;
  double t6166;
  double t6168;
  double t6218;
  double t6232;
  double t6236;
  double t6264;
  double t6274;
  double t6278;
  double t6285;
  double t6288;
  double t6290;
  double t6292;
  double t6299;
  double t6372;
  double t6450;
  double t6452;
  double t6557;
  double t6560;
  double t6567;
  double t6555;
  double t6556;
  double t6559;
  double t6569;
  double t6570;
  double t6573;
  double t6574;
  double t6577;
  double t6578;
  double t6586;
  double t6592;
  double t6593;
  double t6594;
  double t6596;
  double t6598;
  double t6602;
  double t6815;
  double t6864;
  double t6812;
  double t6885;
  double t6781;
  double t6782;
  double t6783;
  double t6784;
  double t6786;
  double t6787;
  double t6793;
  double t6797;
  double t6802;
  double t6803;
  double t6804;
  double t6808;
  double t6809;
  double t6811;
  double t6824;
  double t6826;
  double t6830;
  double t6842;
  double t6854;
  double t6855;
  double t6856;
  double t6858;
  double t6863;
  double t6868;
  double t6869;
  double t6873;
  double t6878;
  double t6879;
  double t6886;
  double t6887;
  double t6889;
  double t6893;
  double t6894;
  double t6900;
  double t6901;
  double t6908;
  double t6909;
  double t6912;
  double t6913;
  double t6296;
  double t6542;
  double t6545;
  double t6546;
  double t6373;
  double t6378;
  double t6387;
  double t6391;
  double t6392;
  double t6396;
  double t6398;
  double t6403;
  double t6408;
  double t6411;
  double t6414;
  double t6418;
  double t6422;
  double t6423;
  double t6428;
  double t6431;
  double t6434;
  double t6461;
  double t6466;
  double t6498;
  double t6500;
  double t6503;
  double t6504;
  double t6505;
  double t6507;
  double t6508;
  double t6509;
  double t6513;
  double t6514;
  double t6515;
  double t6517;
  double t6518;
  double t6522;
  double t6524;
  double t6525;
  double t6540;
  double t6541;
  double t6550;
  double t6551;
  double t6553;
  double t6623;
  double t6635;
  double t6685;
  double t7012;
  double t7014;
  double t7015;
  double t6925;
  double t6926;
  double t6927;
  double t6928;
  double t6931;
  double t6932;
  double t6934;
  double t6935;
  double t6940;
  double t6952;
  double t6956;
  double t6957;
  double t6958;
  double t6959;
  double t6960;
  double t6962;
  double t6964;
  double t6965;
  double t6967;
  double t6968;
  double t6969;
  double t6970;
  double t6973;
  double t6974;
  double t6977;
  double t6978;
  double t6979;
  double t6989;
  double t6991;
  double t6994;
  double t6995;
  double t6996;
  double t7052;
  double t7046;
  double t7047;
  double t7050;
  double t7116;
  double t7000;
  double t7001;
  double t7002;
  double t6027;
  double t6440;
  double t6526;
  double t7149;
  double t7150;
  double t7152;
  double t7153;
  double t7155;
  double t7156;
  double t7157;
  double t7158;
  double t7159;
  double t7160;
  double t7161;
  double t7162;
  double t7163;
  double t7164;
  double t7165;
  double t7166;
  double t7168;
  double t7171;
  double t7172;
  double t7174;
  double t7175;
  double t7176;
  double t7177;
  double t7178;
  double t7180;
  double t7182;
  double t7183;
  double t7184;
  double t7187;
  double t7194;
  double t7196;
  double t7207;
  double t7210;
  double t7211;
  double t7214;
  double t7256;
  double t7243;
  double t7245;
  double t7255;
  double t7259;
  double t7260;
  double t7263;
  double t7264;
  double t7272;
  double t7274;
  double t7278;
  double t7283;
  double t7286;
  double t7287;
  double t7296;
  double t7297;
  double t7298;
  double t7299;
  double t7300;
  double t7301;
  double t7305;
  double t7308;
  double t7026;
  double t7030;
  double t7032;
  double t6919;
  double t6963;
  double t6997;
  double t7381;
  double t7378;
  double t7379;
  double t7382;
  double t7385;
  double t7387;
  double t7391;
  double t7392;
  double t7393;
  double t7380;
  double t7383;
  double t7384;
  double t7398;
  double t7399;
  double t7400;
  double t7403;
  double t7404;
  double t7405;
  double t7413;
  double t7414;
  double t7408;
  double t7409;
  double t7411;
  double t7421;
  double t7412;
  double t7446;
  double t7461;
  double t7462;
  double t7388;
  double t7471;
  double t7472;
  double t7401;
  double t7402;
  double t7476;
  double t7484;
  double t7485;
  double t7415;
  double t7515;
  double t7517;
  double t7419;
  double t7420;
  double t7422;
  double t7423;
  double t7424;
  double t7425;
  double t7426;
  double t7427;
  double t7428;
  double t7522;
  double t7523;
  double t7430;
  double t7431;
  double t7432;
  double t7434;
  double t7435;
  double t7436;
  double t7440;
  double t7441;
  double t7442;
  double t7443;
  double t7444;
  double t7445;
  double t7447;
  double t7448;
  double t7449;
  double t7451;
  double t7452;
  double t7454;
  double t7386;
  double t7389;
  double t7390;
  double t7394;
  double t7395;
  double t7396;
  double t7397;
  double t7407;
  double t7416;
  double t7417;
  double t7418;
  double t7429;
  double t7433;
  double t7437;
  double t7438;
  double t7439;
  double t7450;
  double t7453;
  double t7455;
  double t7456;
  double t7457;
  double t7458;
  double t7463;
  double t7464;
  double t7465;
  double t7467;
  double t7468;
  double t7469;
  double t7473;
  double t7474;
  double t7488;
  double t7489;
  double t7490;
  double t7577;
  double t7578;
  double t7579;
  double t7587;
  double t7588;
  double t7589;
  double t7591;
  double t7592;
  double t7595;
  double t7665;
  double t7666;
  double t7726;
  double t7728;
  double t7567;
  double t7568;
  double t7632;
  double t7636;
  double t7637;
  double t7652;
  double t7654;
  double t7656;
  double t7670;
  double t7671;
  double t7686;
  double t7687;
  double t7695;
  double t7696;
  double t7699;
  double t7701;
  double t7703;
  double t7704;
  double t7705;
  double t7711;
  double t7713;
  double t7757;
  double t7758;
  double t7759;
  double t7475;
  double t7491;
  double t7519;
  double t7524;
  double t7525;
  double t7549;
  double t7551;
  double t7553;
  double t7554;
  double t7556;
  double t7557;
  double t7558;
  double t7559;
  double t7561;
  double t7562;
  double t7563;
  double t7459;
  double t7460;
  double t7466;
  double t7470;
  double t7564;
  double t7780;
  double t7781;
  double t7782;
  double t7783;
  double t7784;
  double t7785;
  double t7786;
  double t7787;
  double t7572;
  double t7573;
  double t7575;
  double t7576;
  double t7580;
  double t7582;
  double t7590;
  double t7596;
  double t7599;
  double t7600;
  double t7602;
  double t7603;
  double t7604;
  double t7605;
  double t7606;
  double t7607;
  double t7608;
  double t7609;
  double t7611;
  double t7613;
  double t7621;
  double t7631;
  double t7714;
  double t7753;
  double t7754;
  double t7798;
  double t7800;
  double t7801;
  double t7796;
  double t7797;
  double t7799;
  double t7802;
  double t7803;
  double t7804;
  double t7805;
  double t7806;
  double t7807;
  double t7808;
  double t7809;
  double t7810;
  double t7811;
  double t7812;
  double t7813;
  double t7814;
  double t7870;
  double t7894;
  double t7867;
  double t7913;
  double t7832;
  double t7833;
  double t7834;
  double t7835;
  double t7836;
  double t7841;
  double t7842;
  double t7843;
  double t7844;
  double t7866;
  double t7873;
  double t7874;
  double t7875;
  double t7878;
  double t7881;
  double t7884;
  double t7887;
  double t7891;
  double t7892;
  double t7895;
  double t7896;
  double t7897;
  double t7901;
  double t7907;
  double t7908;
  double t7909;
  double t7910;
  double t7912;
  double t7919;
  double t7920;
  double t7921;
  double t7922;
  double t7923;
  double t7924;
  double t7925;
  double t7926;
  double t7928;
  double t7930;
  double t7931;
  double t7622;
  double t7790;
  double t7791;
  double t7792;
  double t7716;
  double t7717;
  double t7729;
  double t7730;
  double t7731;
  double t7736;
  double t7739;
  double t7740;
  double t7741;
  double t7742;
  double t7743;
  double t7744;
  double t7745;
  double t7746;
  double t7748;
  double t7750;
  double t7751;
  double t7755;
  double t7756;
  double t7760;
  double t7761;
  double t7762;
  double t7763;
  double t7764;
  double t7765;
  double t7766;
  double t7767;
  double t7768;
  double t7769;
  double t7770;
  double t7771;
  double t7772;
  double t7774;
  double t7775;
  double t7776;
  double t7788;
  double t7789;
  double t7793;
  double t7794;
  double t7795;
  double t7815;
  double t7816;
  double t7817;
  double t7976;
  double t7977;
  double t7978;
  double t7933;
  double t7934;
  double t7935;
  double t7936;
  double t7937;
  double t7938;
  double t7939;
  double t7940;
  double t7941;
  double t7942;
  double t7943;
  double t7944;
  double t7945;
  double t7946;
  double t7947;
  double t7948;
  double t7950;
  double t7951;
  double t7952;
  double t7953;
  double t7954;
  double t7955;
  double t7956;
  double t7957;
  double t7958;
  double t7959;
  double t7960;
  double t7961;
  double t7962;
  double t7963;
  double t7964;
  double t7965;
  double t8000;
  double t7996;
  double t7997;
  double t7998;
  double t8028;
  double t7969;
  double t7970;
  double t7971;
  double t7566;
  double t7752;
  double t7777;
  double t8061;
  double t8062;
  double t8064;
  double t8065;
  double t8066;
  double t8067;
  double t8068;
  double t8069;
  double t8070;
  double t8071;
  double t8072;
  double t8073;
  double t8074;
  double t8075;
  double t8076;
  double t8077;
  double t8078;
  double t8079;
  double t8080;
  double t8081;
  double t8082;
  double t8083;
  double t8090;
  double t8091;
  double t8092;
  double t8093;
  double t8094;
  double t8095;
  double t8097;
  double t8106;
  double t8117;
  double t8118;
  double t8120;
  double t8122;
  double t8123;
  double t8137;
  double t8128;
  double t8129;
  double t8133;
  double t8138;
  double t8139;
  double t8140;
  double t8141;
  double t8142;
  double t8143;
  double t8145;
  double t8146;
  double t8148;
  double t8149;
  double t8153;
  double t8154;
  double t8155;
  double t8166;
  double t8167;
  double t8169;
  double t8171;
  double t8175;
  double t7989;
  double t7990;
  double t7991;
  double t7932;
  double t7949;
  double t7966;
  t312 = Cos(var1[9]);
  t205 = Cos(var1[10]);
  t233 = Sin(var1[9]);
  t327 = Sin(var1[10]);
  t762 = Cos(var1[11]);
  t935 = Sin(var1[11]);
  t1395 = t312*t205;
  t1459 = -1.*t233*t327;
  t1541 = t1395 + t1459;
  t254 = -1.*t205*t233;
  t722 = -1.*t312*t327;
  t723 = t254 + t722;
  t1877 = Cos(var1[12]);
  t2245 = -1.*t1877;
  t2281 = 1. + t2245;
  t2414 = -1.*t762*t1541;
  t2512 = -1.*t723*t935;
  t2532 = t2414 + t2512;
  t3628 = Sin(var1[12]);
  t2830 = t762*t723;
  t2831 = -1.*t1541*t935;
  t3231 = t2830 + t2831;
  t3677 = -0.996943*t3628;
  t4653 = -0.0004284921280000001*t2281;
  t3253 = 0.0004284921280000001*t2281;
  t5228 = 0.996943*t3628;
  t5337 = -1.*t205;
  t5342 = 1. + t5337;
  t1124 = -0.70544*t935;
  t5425 = -1.*t762;
  t5463 = 1. + t5425;
  t2388 = -0.999969365345*t2281;
  t2397 = 1. + t2388;
  t5486 = -1.*t312*t205;
  t5489 = t233*t327;
  t5493 = t5486 + t5489;
  t3794 = t3253 + t3677;
  t5697 = t762*t5493;
  t5792 = t5697 + t2512;
  t4046 = 0.005481192614*t2281;
  t4084 = -0.077936*t3628;
  t4107 = t4046 + t4084;
  t5849 = t5493*t935;
  t5853 = t2830 + t5849;
  t4195 = 0.07769774964800001*t2281;
  t4236 = 0.005498*t3628;
  t4299 = t4195 + t4236;
  t4426 = -1.2096424700126054e-9*var1[12];
  t4559 = -0.6934128581485427*t2281;
  t4698 = t4653 + t3677;
  t4710 = -0.021877537552*t4698;
  t4725 = -0.005481192614*t2281;
  t4744 = 0.077936*t3628;
  t4790 = t4725 + t4744;
  t4818 = 0.005534467322*t4790;
  t4830 = t4426 + t4559 + t4710 + t4818;
  t5119 = -1.7147089040178687e-8*var1[12];
  t5187 = -0.021744644052735636*t2281;
  t5188 = -0.07769774964800001*t2281;
  t5216 = -0.005498*t3628;
  t5225 = t5188 + t5216;
  t5227 = 0.005534467322*t5225;
  t5233 = t4653 + t5228;
  t5234 = -0.6934341012630001*t5233;
  t5240 = t5119 + t5187 + t5227 + t5234;
  t5250 = -0.993925573253*t2281;
  t5270 = 1. + t5250;
  t5287 = t3253 + t5228;
  t763 = -0.01841*t762;
  t1134 = t763 + t1124;
  t1355 = -1.*t723*t1134;
  t1625 = -0.70544*t762;
  t1771 = 0.01841*t935;
  t1778 = t1625 + t1771;
  t1803 = -1.*t1541*t1778;
  t2548 = t2397*t2532;
  t3888 = t3231*t3794;
  t3939 = t2548 + t3888;
  t3962 = 0.588518*t3939;
  t4166 = t2532*t4107;
  t4300 = t3231*t4299;
  t4346 = t4166 + t4300;
  t4410 = -0.124503*t4346;
  t4944 = -1.*t2532*t4830;
  t5244 = -1.*t3231*t5240;
  t5278 = t5270*t3231;
  t5291 = t2532*t5287;
  t5294 = t5278 + t5291;
  t5305 = -0.045407*t5294;
  t5312 = t1355 + t1803 + t3962 + t4410 + t4944 + t5244 + t5305;
  t5356 = -0.00159*t5342;
  t5363 = -0.27068*t327;
  t5369 = t5356 + t5363;
  t5386 = -0.27068*t5342;
  t5389 = 0.00159*t327;
  t5414 = t5386 + t5389;
  t5464 = 0.01841*t5463;
  t5472 = t5464 + t1124;
  t5575 = -0.70544*t5463;
  t5576 = -0.01841*t935;
  t5611 = t5575 + t5576;
  t6064 = t205*t233;
  t6078 = t312*t327;
  t6084 = t6064 + t6078;
  t6087 = t762*t1541;
  t6113 = -1.*t6084*t935;
  t6125 = t6087 + t6113;
  t6142 = t762*t6084;
  t6150 = t1541*t935;
  t6157 = t6142 + t6150;
  t6321 = t723*t935;
  t6338 = t6087 + t6321;
  t6380 = -1.*t762*t6084;
  t6383 = t6380 + t2831;
  t6031 = -1.*t312;
  t6032 = 1. + t6031;
  t6302 = 0.21*t233;
  t6307 = -1.*t312*t5369;
  t6308 = t233*t5414;
  t6309 = -1.*t1541*t5472;
  t6314 = -1.*t723*t5611;
  t6317 = t2397*t3231;
  t6343 = t6338*t3794;
  t6345 = t6317 + t6343;
  t6346 = 0.588518*t6345;
  t6348 = t3231*t4107;
  t6350 = t6338*t4299;
  t6351 = t6348 + t6350;
  t6355 = -0.124503*t6351;
  t6358 = -1.*t3231*t4830;
  t6360 = -1.*t6338*t5240;
  t6362 = t5270*t6338;
  t6364 = t3231*t5287;
  t6366 = t6362 + t6364;
  t6367 = -0.045407*t6366;
  t6468 = -1.*t762*t723;
  t6470 = -1.*t5493*t935;
  t6496 = t6468 + t6470;
  t5476 = -1.*t723*t5472;
  t5694 = -1.*t5493*t5611;
  t5794 = t2397*t5792;
  t5857 = t5853*t3794;
  t5858 = t5794 + t5857;
  t5863 = 0.588518*t5858;
  t5864 = t5792*t4107;
  t5867 = t5853*t4299;
  t5868 = t5864 + t5867;
  t5886 = -0.124503*t5868;
  t5892 = -1.*t5792*t4830;
  t5906 = -1.*t5853*t5240;
  t5929 = t5270*t5853;
  t5941 = t5792*t5287;
  t5944 = t5929 + t5941;
  t6009 = -0.045407*t5944;
  t5318 = 0.21*t312;
  t5323 = 0.049*t233;
  t5378 = t233*t5369;
  t5417 = t312*t5414;
  t6012 = t5318 + t5323 + t5378 + t5417 + t5476 + t5694 + t5863 + t5886 + t5892 + t5906 + t6009;
  t6530 = 0.00159*t205;
  t6531 = t6530 + t5363;
  t6533 = t233*t6531;
  t6534 = -0.27068*t205;
  t6535 = -0.00159*t327;
  t6536 = t6534 + t6535;
  t6538 = -1.*t312*t6536;
  t6539 = t6533 + t6538 + t5476 + t5694 + t5863 + t5886 + t5892 + t5906 + t6009;
  t6034 = 0.21*t6032;
  t6046 = -0.049*t233;
  t6055 = -1.*t233*t5369;
  t6059 = -1.*t312*t5414;
  t6085 = -1.*t6084*t5472;
  t6086 = -1.*t1541*t5611;
  t6133 = t2397*t6125;
  t6162 = t6157*t3794;
  t6164 = t6133 + t6162;
  t6166 = 0.588518*t6164;
  t6168 = t6125*t4107;
  t6218 = t6157*t4299;
  t6232 = t6168 + t6218;
  t6236 = -0.124503*t6232;
  t6264 = -1.*t6125*t4830;
  t6274 = -1.*t6157*t5240;
  t6278 = t5270*t6157;
  t6285 = t6125*t5287;
  t6288 = t6278 + t6285;
  t6290 = -0.045407*t6288;
  t6292 = -0.09 + t6034 + t6046 + t6055 + t6059 + t6085 + t6086 + t6166 + t6236 + t6264 + t6274 + t6290;
  t6299 = -0.049*t312;
  t6372 = t6299 + t6302 + t6307 + t6308 + t6309 + t6314 + t6346 + t6355 + t6358 + t6360 + t6367;
  t6450 = 0.049*t6032;
  t6452 = -0.049 + t6450 + t6302 + t6307 + t6308 + t6309 + t6314 + t6346 + t6355 + t6358 + t6360 + t6367;
  t6557 = t6142 + t6470;
  t6560 = t6084*t935;
  t6567 = t5697 + t6560;
  t6555 = -1.*t5493*t5472;
  t6556 = -1.*t6084*t5611;
  t6559 = t2397*t6557;
  t6569 = t6567*t3794;
  t6570 = t6559 + t6569;
  t6573 = 0.588518*t6570;
  t6574 = t6557*t4107;
  t6577 = t6567*t4299;
  t6578 = t6574 + t6577;
  t6586 = -0.124503*t6578;
  t6592 = -1.*t6557*t4830;
  t6593 = -1.*t6567*t5240;
  t6594 = t5270*t6567;
  t6596 = t6557*t5287;
  t6598 = t6594 + t6596;
  t6602 = -0.045407*t6598;
  t6815 = -0.0004284921280000001*t3628;
  t6864 = 0.996943*t1877;
  t6812 = -0.996943*t1877;
  t6885 = 0.0004284921280000001*t3628;
  t6781 = -0.077936*t1877;
  t6782 = 0.005481192614*t3628;
  t6783 = t6781 + t6782;
  t6784 = t3231*t6783;
  t6786 = 0.005498*t1877;
  t6787 = 0.07769774964800001*t3628;
  t6793 = t6786 + t6787;
  t6797 = t6338*t6793;
  t6802 = t6784 + t6797;
  t6803 = -0.124503*t6802;
  t6804 = 0.077936*t1877;
  t6808 = -0.005481192614*t3628;
  t6809 = t6804 + t6808;
  t6811 = 0.005534467322*t6809;
  t6824 = t6812 + t6815;
  t6826 = -0.021877537552*t6824;
  t6830 = -0.6934128581485427*t3628;
  t6842 = -1.2096424700126054e-9 + t6811 + t6826 + t6830;
  t6854 = -1.*t3231*t6842;
  t6855 = -0.005498*t1877;
  t6856 = -0.07769774964800001*t3628;
  t6858 = t6855 + t6856;
  t6863 = 0.005534467322*t6858;
  t6868 = t6864 + t6815;
  t6869 = -0.6934341012630001*t6868;
  t6873 = -0.021744644052735636*t3628;
  t6878 = -1.7147089040178687e-8 + t6863 + t6869 + t6873;
  t6879 = -1.*t6338*t6878;
  t6886 = t6864 + t6885;
  t6887 = t3231*t6886;
  t6889 = -0.993925573253*t6338*t3628;
  t6893 = t6887 + t6889;
  t6894 = -0.045407*t6893;
  t6900 = t6812 + t6885;
  t6901 = t6338*t6900;
  t6908 = -0.999969365345*t3231*t3628;
  t6909 = t6901 + t6908;
  t6912 = 0.588518*t6909;
  t6913 = t6803 + t6854 + t6879 + t6894 + t6912;
  t6296 = 2.*t5312*t6292;
  t6542 = -1.*t312*t6531;
  t6545 = -1.*t233*t6536;
  t6546 = t6542 + t6545 + t6309 + t6314 + t6346 + t6355 + t6358 + t6360 + t6367;
  t6373 = -1.*t1541*t1134;
  t6378 = -1.*t6084*t1778;
  t6387 = t2397*t6383;
  t6391 = t6125*t3794;
  t6392 = t6387 + t6391;
  t6396 = 0.588518*t6392;
  t6398 = t6383*t4107;
  t6403 = t6125*t4299;
  t6408 = t6398 + t6403;
  t6411 = -0.124503*t6408;
  t6414 = -1.*t6383*t4830;
  t6418 = -1.*t6125*t5240;
  t6422 = t5270*t6125;
  t6423 = t6383*t5287;
  t6428 = t6422 + t6423;
  t6431 = -0.045407*t6428;
  t6434 = t6373 + t6378 + t6396 + t6411 + t6414 + t6418 + t6431;
  t6461 = -1.*t5493*t1134;
  t6466 = -1.*t723*t1778;
  t6498 = t2397*t6496;
  t6500 = t5792*t3794;
  t6503 = t6498 + t6500;
  t6504 = 0.588518*t6503;
  t6505 = t6496*t4107;
  t6507 = t5792*t4299;
  t6508 = t6505 + t6507;
  t6509 = -0.124503*t6508;
  t6513 = -1.*t6496*t4830;
  t6514 = -1.*t5792*t5240;
  t6515 = t5270*t5792;
  t6517 = t6496*t5287;
  t6518 = t6515 + t6517;
  t6522 = -0.045407*t6518;
  t6524 = t6461 + t6466 + t6504 + t6509 + t6513 + t6514 + t6522;
  t6525 = 2.*t6452*t6524;
  t6540 = 2.*t6539*t6012;
  t6541 = 2.*t6539*t6292;
  t6550 = 2.*t6546*t6372;
  t6551 = t312*t6531;
  t6553 = t233*t6536;
  t6623 = t6551 + t6553 + t6555 + t6556 + t6573 + t6586 + t6592 + t6593 + t6602;
  t6635 = 2.*t6452*t6623;
  t6685 = t6540 + t6541 + t6550 + t6635;
  t7012 = -0.00159*t205;
  t7014 = 0.27068*t327;
  t7015 = t7012 + t7014;
  t6925 = 2.*t6292*t6913;
  t6926 = t6125*t6783;
  t6927 = t6157*t6793;
  t6928 = t6926 + t6927;
  t6931 = -0.124503*t6928;
  t6932 = -1.*t6125*t6842;
  t6934 = -1.*t6157*t6878;
  t6935 = t6157*t6900;
  t6940 = -0.999969365345*t6125*t3628;
  t6952 = t6935 + t6940;
  t6956 = 0.588518*t6952;
  t6957 = t6125*t6886;
  t6958 = -0.993925573253*t6157*t3628;
  t6959 = t6957 + t6958;
  t6960 = -0.045407*t6959;
  t6962 = t6931 + t6932 + t6934 + t6956 + t6960;
  t6964 = t5792*t6783;
  t6965 = t5853*t6793;
  t6967 = t6964 + t6965;
  t6968 = -0.124503*t6967;
  t6969 = -1.*t5792*t6842;
  t6970 = -1.*t5853*t6878;
  t6973 = t5853*t6900;
  t6974 = -0.999969365345*t5792*t3628;
  t6977 = t6973 + t6974;
  t6978 = 0.588518*t6977;
  t6979 = t5792*t6886;
  t6989 = -0.993925573253*t5853*t3628;
  t6991 = t6979 + t6989;
  t6994 = -0.045407*t6991;
  t6995 = t6968 + t6969 + t6970 + t6978 + t6994;
  t6996 = 2.*t6452*t6995;
  t7052 = t2414 + t6560;
  t7046 = 0.01841*t762;
  t7047 = 0.70544*t935;
  t7050 = t7046 + t7047;
  t7116 = t6468 + t6150;
  t7000 = 2.*t5312*t6539;
  t7001 = 2.*t6546*t6434;
  t7002 = t7000 + t6296 + t7001 + t6525;
  t6027 = 2.*t5312*t6012;
  t6440 = 2.*t6372*t6434;
  t6526 = t6027 + t6296 + t6440 + t6525;
  t7149 = 2.*t5312*t6913;
  t7150 = t2532*t6783;
  t7152 = t3231*t6793;
  t7153 = t7150 + t7152;
  t7155 = -0.124503*t7153;
  t7156 = -1.*t2532*t6842;
  t7157 = -1.*t3231*t6878;
  t7158 = t3231*t6900;
  t7159 = -0.999969365345*t2532*t3628;
  t7160 = t7158 + t7159;
  t7161 = 0.588518*t7160;
  t7162 = t2532*t6886;
  t7163 = -0.993925573253*t3231*t3628;
  t7164 = t7162 + t7163;
  t7165 = -0.045407*t7164;
  t7166 = t7155 + t7156 + t7157 + t7161 + t7165;
  t7168 = 2.*t6452*t7166;
  t7171 = t6383*t6783;
  t7172 = t6125*t6793;
  t7174 = t7171 + t7172;
  t7175 = -0.124503*t7174;
  t7176 = -1.*t6383*t6842;
  t7177 = -1.*t6125*t6878;
  t7178 = t6383*t6886;
  t7180 = -0.993925573253*t6125*t3628;
  t7182 = t7178 + t7180;
  t7183 = -0.045407*t7182;
  t7184 = t6125*t6900;
  t7187 = -0.999969365345*t6383*t3628;
  t7194 = t7184 + t7187;
  t7196 = 0.588518*t7194;
  t7207 = t7175 + t7176 + t7177 + t7183 + t7196;
  t7210 = 2.*t6292*t7207;
  t7211 = 2.*t6434*t6962;
  t7214 = t7149 + t7168 + t7210 + t7211;
  t7256 = -0.0004284921280000001*t1877;
  t7243 = 0.0004284921280000001*t1877;
  t7245 = t7243 + t3677;
  t7255 = -0.021744644052735636*t1877;
  t7259 = t7256 + t3677;
  t7260 = -0.6934341012630001*t7259;
  t7263 = -0.07769774964800001*t1877;
  t7264 = t7263 + t4236;
  t7272 = 0.005534467322*t7264;
  t7274 = t7255 + t7260 + t7272;
  t7278 = 0.07769774964800001*t1877;
  t7283 = t7278 + t5216;
  t7286 = 0.005481192614*t1877;
  t7287 = t7286 + t4744;
  t7296 = -0.6934128581485427*t1877;
  t7297 = -0.005481192614*t1877;
  t7298 = t7297 + t4084;
  t7299 = 0.005534467322*t7298;
  t7300 = t7256 + t5228;
  t7301 = -0.021877537552*t7300;
  t7305 = t7296 + t7299 + t7301;
  t7308 = t7243 + t5228;
  t7026 = 2.*t6539*t6913;
  t7030 = 2.*t6546*t6962;
  t7032 = t7026 + t6925 + t7030 + t6996;
  t6919 = 2.*t6012*t6913;
  t6963 = 2.*t6372*t6962;
  t6997 = t6919 + t6925 + t6963 + t6996;
  t7381 = Cos(var1[17]);
  t7378 = Cos(var1[18]);
  t7379 = Sin(var1[17]);
  t7382 = Sin(var1[18]);
  t7385 = Cos(var1[19]);
  t7387 = Sin(var1[19]);
  t7391 = t7381*t7378;
  t7392 = -1.*t7379*t7382;
  t7393 = t7391 + t7392;
  t7380 = -1.*t7378*t7379;
  t7383 = -1.*t7381*t7382;
  t7384 = t7380 + t7383;
  t7398 = Cos(var1[20]);
  t7399 = -1.*t7398;
  t7400 = 1. + t7399;
  t7403 = -1.*t7385*t7393;
  t7404 = -1.*t7384*t7387;
  t7405 = t7403 + t7404;
  t7413 = Sin(var1[20]);
  t7414 = -0.996943*t7413;
  t7408 = t7385*t7384;
  t7409 = -1.*t7393*t7387;
  t7411 = t7408 + t7409;
  t7421 = -0.0004284921280000001*t7400;
  t7412 = 0.0004284921280000001*t7400;
  t7446 = 0.996943*t7413;
  t7461 = -1.*t7378;
  t7462 = 1. + t7461;
  t7388 = -0.70544*t7387;
  t7471 = -1.*t7385;
  t7472 = 1. + t7471;
  t7401 = -0.999969365345*t7400;
  t7402 = 1. + t7401;
  t7476 = -1.*t7381*t7378;
  t7484 = t7379*t7382;
  t7485 = t7476 + t7484;
  t7415 = t7412 + t7414;
  t7515 = t7385*t7485;
  t7517 = t7515 + t7404;
  t7419 = -1.2096424700126054e-9*var1[20];
  t7420 = -0.6934128581485427*t7400;
  t7422 = t7421 + t7414;
  t7423 = -0.021877537552*t7422;
  t7424 = 0.005481192614*t7400;
  t7425 = -0.077936*t7413;
  t7426 = t7424 + t7425;
  t7427 = -0.005534467322*t7426;
  t7428 = t7419 + t7420 + t7423 + t7427;
  t7522 = t7485*t7387;
  t7523 = t7408 + t7522;
  t7430 = -0.07769774964800001*t7400;
  t7431 = -0.005498*t7413;
  t7432 = t7430 + t7431;
  t7434 = -0.005481192614*t7400;
  t7435 = 0.077936*t7413;
  t7436 = t7434 + t7435;
  t7440 = -1.7147089040178687e-8*var1[20];
  t7441 = -0.021744644052735636*t7400;
  t7442 = 0.07769774964800001*t7400;
  t7443 = 0.005498*t7413;
  t7444 = t7442 + t7443;
  t7445 = -0.005534467322*t7444;
  t7447 = t7421 + t7446;
  t7448 = -0.6934341012630001*t7447;
  t7449 = t7440 + t7441 + t7445 + t7448;
  t7451 = -0.993925573253*t7400;
  t7452 = 1. + t7451;
  t7454 = t7412 + t7446;
  t7386 = -0.01841*t7385;
  t7389 = t7386 + t7388;
  t7390 = -1.*t7384*t7389;
  t7394 = -0.70544*t7385;
  t7395 = 0.01841*t7387;
  t7396 = t7394 + t7395;
  t7397 = -1.*t7393*t7396;
  t7407 = t7402*t7405;
  t7416 = t7411*t7415;
  t7417 = t7407 + t7416;
  t7418 = 0.588518*t7417;
  t7429 = -1.*t7405*t7428;
  t7433 = t7411*t7432;
  t7437 = t7405*t7436;
  t7438 = t7433 + t7437;
  t7439 = 0.124503*t7438;
  t7450 = -1.*t7411*t7449;
  t7453 = t7452*t7411;
  t7455 = t7405*t7454;
  t7456 = t7453 + t7455;
  t7457 = -0.045407*t7456;
  t7458 = t7390 + t7397 + t7418 + t7429 + t7439 + t7450 + t7457;
  t7463 = -0.00159*t7462;
  t7464 = -0.27068*t7382;
  t7465 = t7463 + t7464;
  t7467 = -0.27068*t7462;
  t7468 = 0.00159*t7382;
  t7469 = t7467 + t7468;
  t7473 = 0.01841*t7472;
  t7474 = t7473 + t7388;
  t7488 = -0.70544*t7472;
  t7489 = -0.01841*t7387;
  t7490 = t7488 + t7489;
  t7577 = t7378*t7379;
  t7578 = t7381*t7382;
  t7579 = t7577 + t7578;
  t7587 = t7385*t7393;
  t7588 = -1.*t7579*t7387;
  t7589 = t7587 + t7588;
  t7591 = t7385*t7579;
  t7592 = t7393*t7387;
  t7595 = t7591 + t7592;
  t7665 = t7384*t7387;
  t7666 = t7587 + t7665;
  t7726 = -1.*t7385*t7579;
  t7728 = t7726 + t7409;
  t7567 = -1.*t7381;
  t7568 = 1. + t7567;
  t7632 = 0.21*t7379;
  t7636 = -1.*t7381*t7465;
  t7637 = t7379*t7469;
  t7652 = -1.*t7393*t7474;
  t7654 = -1.*t7384*t7490;
  t7656 = t7402*t7411;
  t7670 = t7666*t7415;
  t7671 = t7656 + t7670;
  t7686 = 0.588518*t7671;
  t7687 = -1.*t7411*t7428;
  t7695 = t7666*t7432;
  t7696 = t7411*t7436;
  t7699 = t7695 + t7696;
  t7701 = 0.124503*t7699;
  t7703 = -1.*t7666*t7449;
  t7704 = t7452*t7666;
  t7705 = t7411*t7454;
  t7711 = t7704 + t7705;
  t7713 = -0.045407*t7711;
  t7757 = -1.*t7385*t7384;
  t7758 = -1.*t7485*t7387;
  t7759 = t7757 + t7758;
  t7475 = -1.*t7384*t7474;
  t7491 = -1.*t7485*t7490;
  t7519 = t7402*t7517;
  t7524 = t7523*t7415;
  t7525 = t7519 + t7524;
  t7549 = 0.588518*t7525;
  t7551 = -1.*t7517*t7428;
  t7553 = t7523*t7432;
  t7554 = t7517*t7436;
  t7556 = t7553 + t7554;
  t7557 = 0.124503*t7556;
  t7558 = -1.*t7523*t7449;
  t7559 = t7452*t7523;
  t7561 = t7517*t7454;
  t7562 = t7559 + t7561;
  t7563 = -0.045407*t7562;
  t7459 = 0.21*t7381;
  t7460 = 0.049*t7379;
  t7466 = t7379*t7465;
  t7470 = t7381*t7469;
  t7564 = t7459 + t7460 + t7466 + t7470 + t7475 + t7491 + t7549 + t7551 + t7557 + t7558 + t7563;
  t7780 = 0.00159*t7378;
  t7781 = t7780 + t7464;
  t7782 = t7379*t7781;
  t7783 = -0.27068*t7378;
  t7784 = -0.00159*t7382;
  t7785 = t7783 + t7784;
  t7786 = -1.*t7381*t7785;
  t7787 = t7782 + t7786 + t7475 + t7491 + t7549 + t7551 + t7557 + t7558 + t7563;
  t7572 = 0.21*t7568;
  t7573 = -0.049*t7379;
  t7575 = -1.*t7379*t7465;
  t7576 = -1.*t7381*t7469;
  t7580 = -1.*t7579*t7474;
  t7582 = -1.*t7393*t7490;
  t7590 = t7402*t7589;
  t7596 = t7595*t7415;
  t7599 = t7590 + t7596;
  t7600 = 0.588518*t7599;
  t7602 = -1.*t7589*t7428;
  t7603 = t7595*t7432;
  t7604 = t7589*t7436;
  t7605 = t7603 + t7604;
  t7606 = 0.124503*t7605;
  t7607 = -1.*t7595*t7449;
  t7608 = t7452*t7595;
  t7609 = t7589*t7454;
  t7611 = t7608 + t7609;
  t7613 = -0.045407*t7611;
  t7621 = -0.09 + t7572 + t7573 + t7575 + t7576 + t7580 + t7582 + t7600 + t7602 + t7606 + t7607 + t7613;
  t7631 = -0.049*t7381;
  t7714 = t7631 + t7632 + t7636 + t7637 + t7652 + t7654 + t7686 + t7687 + t7701 + t7703 + t7713;
  t7753 = 0.049*t7568;
  t7754 = -0.049 + t7753 + t7632 + t7636 + t7637 + t7652 + t7654 + t7686 + t7687 + t7701 + t7703 + t7713;
  t7798 = t7591 + t7758;
  t7800 = t7579*t7387;
  t7801 = t7515 + t7800;
  t7796 = -1.*t7485*t7474;
  t7797 = -1.*t7579*t7490;
  t7799 = t7402*t7798;
  t7802 = t7801*t7415;
  t7803 = t7799 + t7802;
  t7804 = 0.588518*t7803;
  t7805 = -1.*t7798*t7428;
  t7806 = t7801*t7432;
  t7807 = t7798*t7436;
  t7808 = t7806 + t7807;
  t7809 = 0.124503*t7808;
  t7810 = -1.*t7801*t7449;
  t7811 = t7452*t7801;
  t7812 = t7798*t7454;
  t7813 = t7811 + t7812;
  t7814 = -0.045407*t7813;
  t7870 = -0.0004284921280000001*t7413;
  t7894 = 0.996943*t7398;
  t7867 = -0.996943*t7398;
  t7913 = 0.0004284921280000001*t7413;
  t7832 = -0.005498*t7398;
  t7833 = -0.07769774964800001*t7413;
  t7834 = t7832 + t7833;
  t7835 = t7666*t7834;
  t7836 = 0.077936*t7398;
  t7841 = -0.005481192614*t7413;
  t7842 = t7836 + t7841;
  t7843 = t7411*t7842;
  t7844 = t7835 + t7843;
  t7866 = 0.124503*t7844;
  t7873 = t7867 + t7870;
  t7874 = -0.021877537552*t7873;
  t7875 = -0.077936*t7398;
  t7878 = 0.005481192614*t7413;
  t7881 = t7875 + t7878;
  t7884 = -0.005534467322*t7881;
  t7887 = -0.6934128581485427*t7413;
  t7891 = -1.2096424700126054e-9 + t7874 + t7884 + t7887;
  t7892 = -1.*t7411*t7891;
  t7895 = t7894 + t7870;
  t7896 = -0.6934341012630001*t7895;
  t7897 = 0.005498*t7398;
  t7901 = 0.07769774964800001*t7413;
  t7907 = t7897 + t7901;
  t7908 = -0.005534467322*t7907;
  t7909 = -0.021744644052735636*t7413;
  t7910 = -1.7147089040178687e-8 + t7896 + t7908 + t7909;
  t7912 = -1.*t7666*t7910;
  t7919 = t7894 + t7913;
  t7920 = t7411*t7919;
  t7921 = -0.993925573253*t7666*t7413;
  t7922 = t7920 + t7921;
  t7923 = -0.045407*t7922;
  t7924 = t7867 + t7913;
  t7925 = t7666*t7924;
  t7926 = -0.999969365345*t7411*t7413;
  t7928 = t7925 + t7926;
  t7930 = 0.588518*t7928;
  t7931 = t7866 + t7892 + t7912 + t7923 + t7930;
  t7622 = 2.*t7458*t7621;
  t7790 = -1.*t7381*t7781;
  t7791 = -1.*t7379*t7785;
  t7792 = t7790 + t7791 + t7652 + t7654 + t7686 + t7687 + t7701 + t7703 + t7713;
  t7716 = -1.*t7393*t7389;
  t7717 = -1.*t7579*t7396;
  t7729 = t7402*t7728;
  t7730 = t7589*t7415;
  t7731 = t7729 + t7730;
  t7736 = 0.588518*t7731;
  t7739 = -1.*t7728*t7428;
  t7740 = t7589*t7432;
  t7741 = t7728*t7436;
  t7742 = t7740 + t7741;
  t7743 = 0.124503*t7742;
  t7744 = -1.*t7589*t7449;
  t7745 = t7452*t7589;
  t7746 = t7728*t7454;
  t7748 = t7745 + t7746;
  t7750 = -0.045407*t7748;
  t7751 = t7716 + t7717 + t7736 + t7739 + t7743 + t7744 + t7750;
  t7755 = -1.*t7485*t7389;
  t7756 = -1.*t7384*t7396;
  t7760 = t7402*t7759;
  t7761 = t7517*t7415;
  t7762 = t7760 + t7761;
  t7763 = 0.588518*t7762;
  t7764 = -1.*t7759*t7428;
  t7765 = t7517*t7432;
  t7766 = t7759*t7436;
  t7767 = t7765 + t7766;
  t7768 = 0.124503*t7767;
  t7769 = -1.*t7517*t7449;
  t7770 = t7452*t7517;
  t7771 = t7759*t7454;
  t7772 = t7770 + t7771;
  t7774 = -0.045407*t7772;
  t7775 = t7755 + t7756 + t7763 + t7764 + t7768 + t7769 + t7774;
  t7776 = 2.*t7754*t7775;
  t7788 = 2.*t7787*t7564;
  t7789 = 2.*t7787*t7621;
  t7793 = 2.*t7792*t7714;
  t7794 = t7381*t7781;
  t7795 = t7379*t7785;
  t7815 = t7794 + t7795 + t7796 + t7797 + t7804 + t7805 + t7809 + t7810 + t7814;
  t7816 = 2.*t7754*t7815;
  t7817 = t7788 + t7789 + t7793 + t7816;
  t7976 = -0.00159*t7378;
  t7977 = 0.27068*t7382;
  t7978 = t7976 + t7977;
  t7933 = 2.*t7621*t7931;
  t7934 = t7595*t7834;
  t7935 = t7589*t7842;
  t7936 = t7934 + t7935;
  t7937 = 0.124503*t7936;
  t7938 = -1.*t7589*t7891;
  t7939 = -1.*t7595*t7910;
  t7940 = t7595*t7924;
  t7941 = -0.999969365345*t7589*t7413;
  t7942 = t7940 + t7941;
  t7943 = 0.588518*t7942;
  t7944 = t7589*t7919;
  t7945 = -0.993925573253*t7595*t7413;
  t7946 = t7944 + t7945;
  t7947 = -0.045407*t7946;
  t7948 = t7937 + t7938 + t7939 + t7943 + t7947;
  t7950 = t7523*t7834;
  t7951 = t7517*t7842;
  t7952 = t7950 + t7951;
  t7953 = 0.124503*t7952;
  t7954 = -1.*t7517*t7891;
  t7955 = -1.*t7523*t7910;
  t7956 = t7523*t7924;
  t7957 = -0.999969365345*t7517*t7413;
  t7958 = t7956 + t7957;
  t7959 = 0.588518*t7958;
  t7960 = t7517*t7919;
  t7961 = -0.993925573253*t7523*t7413;
  t7962 = t7960 + t7961;
  t7963 = -0.045407*t7962;
  t7964 = t7953 + t7954 + t7955 + t7959 + t7963;
  t7965 = 2.*t7754*t7964;
  t8000 = t7403 + t7800;
  t7996 = 0.01841*t7385;
  t7997 = 0.70544*t7387;
  t7998 = t7996 + t7997;
  t8028 = t7757 + t7592;
  t7969 = 2.*t7458*t7787;
  t7970 = 2.*t7792*t7751;
  t7971 = t7969 + t7622 + t7970 + t7776;
  t7566 = 2.*t7458*t7564;
  t7752 = 2.*t7714*t7751;
  t7777 = t7566 + t7622 + t7752 + t7776;
  t8061 = 2.*t7458*t7931;
  t8062 = t7411*t7834;
  t8064 = t7405*t7842;
  t8065 = t8062 + t8064;
  t8066 = 0.124503*t8065;
  t8067 = -1.*t7405*t7891;
  t8068 = -1.*t7411*t7910;
  t8069 = t7411*t7924;
  t8070 = -0.999969365345*t7405*t7413;
  t8071 = t8069 + t8070;
  t8072 = 0.588518*t8071;
  t8073 = t7405*t7919;
  t8074 = -0.993925573253*t7411*t7413;
  t8075 = t8073 + t8074;
  t8076 = -0.045407*t8075;
  t8077 = t8066 + t8067 + t8068 + t8072 + t8076;
  t8078 = 2.*t7754*t8077;
  t8079 = t7589*t7834;
  t8080 = t7728*t7842;
  t8081 = t8079 + t8080;
  t8082 = 0.124503*t8081;
  t8083 = -1.*t7728*t7891;
  t8090 = -1.*t7589*t7910;
  t8091 = t7728*t7919;
  t8092 = -0.993925573253*t7589*t7413;
  t8093 = t8091 + t8092;
  t8094 = -0.045407*t8093;
  t8095 = t7589*t7924;
  t8097 = -0.999969365345*t7728*t7413;
  t8106 = t8095 + t8097;
  t8117 = 0.588518*t8106;
  t8118 = t8082 + t8083 + t8090 + t8094 + t8117;
  t8120 = 2.*t7621*t8118;
  t8122 = 2.*t7751*t7948;
  t8123 = t8061 + t8078 + t8120 + t8122;
  t8137 = -0.0004284921280000001*t7398;
  t8128 = 0.0004284921280000001*t7398;
  t8129 = t8128 + t7414;
  t8133 = -0.021744644052735636*t7398;
  t8138 = t8137 + t7414;
  t8139 = -0.6934341012630001*t8138;
  t8140 = 0.07769774964800001*t7398;
  t8141 = t8140 + t7431;
  t8142 = -0.005534467322*t8141;
  t8143 = t8133 + t8139 + t8142;
  t8145 = -0.005481192614*t7398;
  t8146 = t8145 + t7425;
  t8148 = -0.07769774964800001*t7398;
  t8149 = t8148 + t7443;
  t8153 = -0.6934128581485427*t7398;
  t8154 = 0.005481192614*t7398;
  t8155 = t8154 + t7435;
  t8166 = -0.005534467322*t8155;
  t8167 = t8137 + t7446;
  t8169 = -0.021877537552*t8167;
  t8171 = t8153 + t8166 + t8169;
  t8175 = t8128 + t7446;
  t7989 = 2.*t7787*t7931;
  t7990 = 2.*t7792*t7948;
  t7991 = t7989 + t7933 + t7990 + t7965;
  t7932 = 2.*t7564*t7931;
  t7949 = 2.*t7714*t7948;
  t7966 = t7932 + t7933 + t7949 + t7965;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(2.*Power(t6012,2) + 2.*t6012*t6292 + 2.*Power(t6372,2) + 2.*t6452*(-0.21*t233 + 0.049*t312 + t312*t5369 - 1.*t233*t5414 + t6555 + t6556 + t6573 + t6586 + t6592 + t6593 + t6602))*var2[9] + t6685*var2[10] + t6526*var2[11] + t6997*var2[12];
  p_output1[19]=0;
  p_output1[20]=t6685*var2[9] + (2.*Power(t6539,2) + 2.*Power(t6546,2) + 2.*t6292*(t5476 + t5694 + t5863 + t5886 + t5892 + t5906 + t6009 + t6538 - 1.*t233*t7015) + 2.*t6452*(t6553 + t6555 + t6556 + t6573 + t6586 + t6592 + t6593 + t6602 - 1.*t312*t7015))*var2[10] + t7002*var2[11] + t7032*var2[12];
  p_output1[21]=0;
  p_output1[22]=t6526*var2[9] + t7002*var2[10] + (2.*Power(t5312,2) + 2.*Power(t6434,2) + 2.*t6292*(t1803 - 1.*t5240*t6383 - 1.*t6084*t7050 - 1.*t4830*t7052 + 0.588518*(t3794*t6383 + t2397*t7052) - 0.124503*(t4299*t6383 + t4107*t7052) - 0.045407*(t5270*t6383 + t5287*t7052)) + 2.*t6452*(-1.*t2532*t5240 + t6466 - 1.*t1541*t7050 - 1.*t4830*t7116 + 0.588518*(t2532*t3794 + t2397*t7116) - 0.124503*(t2532*t4299 + t4107*t7116) - 0.045407*(t2532*t5270 + t5287*t7116)))*var2[11] + t7214*var2[12];
  p_output1[23]=0;
  p_output1[24]=t6997*var2[9] + t7032*var2[10] + t7214*var2[11] + (2.*Power(2.1934241414728571e-7 + 0.0007262134395594695*t3628 + 0.588518*(t6782 + t6804) + 0.6934341012630001*(t6781 + t6808) - 0.045407*(t6787 + t6855) + 0.021877537552*(t6786 + t6856),2) + 2.*Power(t6913,2) + 2.*Power(t6962,2) + 2.*t6292*(-0.045407*(-0.993925573253*t1877*t6157 + t6125*t7245) - 1.*t6157*t7274 - 0.124503*(t6157*t7283 + t6125*t7287) - 1.*t6125*t7305 + 0.588518*(-0.999969365345*t1877*t6125 + t6157*t7308)) + 2.*t6452*(-0.045407*(-0.993925573253*t1877*t6338 + t3231*t7245) - 1.*t6338*t7274 - 0.124503*(t6338*t7283 + t3231*t7287) - 1.*t3231*t7305 + 0.588518*(-0.999969365345*t1877*t3231 + t6338*t7308)) + 2.*(0.0007262134395594695*t1877 + 0.021877537552*(t5216 + t7263) - 0.045407*(t4236 + t7278) + 0.588518*(t4084 + t7286) + 0.6934341012630001*(t4744 + t7297))*(0.09 - 0.124503*(1. - 0.006104248100000001*t2281) - 0.000033783761634830594*t2281 + 0.6934341012630001*(t4084 + t4725) + 0.588518*(t4046 + t4744) + 0.021877537552*(t4236 + t5188) - 0.045407*(t4195 + t5216) + 2.1934241414728571e-7*var1[12]))*var2[12];
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=(2.*Power(t7564,2) + 2.*t7564*t7621 + 2.*Power(t7714,2) + 2.*t7754*(-0.21*t7379 + 0.049*t7381 + t7381*t7465 - 1.*t7379*t7469 + t7796 + t7797 + t7804 + t7805 + t7809 + t7810 + t7814))*var2[17] + t7817*var2[18] + t7777*var2[19] + t7966*var2[20];
  p_output1[36]=0;
  p_output1[37]=t7817*var2[17] + (2.*Power(t7787,2) + 2.*Power(t7792,2) + 2.*t7621*(t7475 + t7491 + t7549 + t7551 + t7557 + t7558 + t7563 + t7786 - 1.*t7379*t7978) + 2.*t7754*(t7795 + t7796 + t7797 + t7804 + t7805 + t7809 + t7810 + t7814 - 1.*t7381*t7978))*var2[18] + t7971*var2[19] + t7991*var2[20];
  p_output1[38]=0;
  p_output1[39]=t7777*var2[17] + t7971*var2[18] + (2.*Power(t7458,2) + 2.*Power(t7751,2) + 2.*t7621*(t7397 - 1.*t7449*t7728 - 1.*t7579*t7998 - 1.*t7428*t8000 + 0.588518*(t7415*t7728 + t7402*t8000) + 0.124503*(t7432*t7728 + t7436*t8000) - 0.045407*(t7452*t7728 + t7454*t8000)) + 2.*t7754*(-1.*t7405*t7449 + t7756 - 1.*t7393*t7998 - 1.*t7428*t8028 + 0.588518*(t7405*t7415 + t7402*t8028) + 0.124503*(t7405*t7432 + t7436*t8028) - 0.045407*(t7405*t7452 + t7454*t8028)))*var2[19] + t8123*var2[20];
  p_output1[40]=0;
  p_output1[41]=t7966*var2[17] + t7991*var2[18] + t8123*var2[19] + (2.*Power(-2.1934241414728571e-7 - 0.0007262134395594695*t7413 + 0.588518*(t7841 + t7875) + 0.6934341012630001*(t7836 + t7878) - 0.045407*(t7833 + t7897) + 0.021877537552*(t7832 + t7901),2) + 2.*Power(t7931,2) + 2.*Power(t7948,2) + 2.*t7621*(-0.045407*(-0.993925573253*t7398*t7595 + t7589*t8129) - 1.*t7595*t8143 + 0.124503*(t7589*t8146 + t7595*t8149) - 1.*t7589*t8171 + 0.588518*(-0.999969365345*t7398*t7589 + t7595*t8175)) + 2.*t7754*(-0.045407*(-0.993925573253*t7398*t7666 + t7411*t8129) - 1.*t7666*t8143 + 0.124503*(t7411*t8146 + t7666*t8149) - 1.*t7411*t8171 + 0.588518*(-0.999969365345*t7398*t7411 + t7666*t8175)) + 2.*(-0.0007262134395594695*t7398 + 0.021877537552*(t7443 + t8140) + 0.588518*(t7435 + t8145) - 0.045407*(t7431 + t8148) + 0.6934341012630001*(t7425 + t8154))*(-0.09 + 0.124503*(1. - 0.006104248100000001*t7400) + 0.000033783761634830594*t7400 + 0.588518*(t7425 + t7434) + 0.6934341012630001*(t7424 + t7435) + 0.021877537552*(t7431 + t7442) - 0.045407*(t7430 + t7443) - 2.1934241414728571e-7*var1[20]))*var2[20];
  p_output1[42]=0;
  p_output1[43]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 2, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void Jdot_achilles_constraint_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




