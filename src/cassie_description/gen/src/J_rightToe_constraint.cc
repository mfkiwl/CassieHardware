/*
 * Automatically Generated from Mathematica.
 * Thu 26 Aug 2021 14:19:28 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightToe_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t19;
  double t96;
  double t103;
  double t100;
  double t104;
  double t69;
  double t77;
  double t81;
  double t86;
  double t29;
  double t32;
  double t122;
  double t138;
  double t140;
  double t141;
  double t101;
  double t106;
  double t110;
  double t160;
  double t164;
  double t176;
  double t184;
  double t188;
  double t192;
  double t197;
  double t205;
  double t207;
  double t209;
  double t229;
  double t230;
  double t231;
  double t235;
  double t236;
  double t237;
  double t239;
  double t247;
  double t249;
  double t250;
  double t257;
  double t258;
  double t262;
  double t267;
  double t269;
  double t270;
  double t273;
  double t277;
  double t278;
  double t281;
  double t291;
  double t294;
  double t297;
  double t302;
  double t303;
  double t304;
  double t306;
  double t310;
  double t311;
  double t312;
  double t320;
  double t321;
  double t322;
  double t324;
  double t326;
  double t327;
  double t330;
  double t334;
  double t336;
  double t338;
  double t344;
  double t345;
  double t346;
  double t39;
  double t45;
  double t83;
  double t88;
  double t91;
  double t126;
  double t130;
  double t134;
  double t137;
  double t149;
  double t152;
  double t156;
  double t370;
  double t371;
  double t372;
  double t196;
  double t202;
  double t204;
  double t364;
  double t365;
  double t367;
  double t374;
  double t375;
  double t376;
  double t215;
  double t223;
  double t227;
  double t238;
  double t241;
  double t242;
  double t379;
  double t380;
  double t381;
  double t390;
  double t391;
  double t392;
  double t254;
  double t255;
  double t256;
  double t271;
  double t274;
  double t275;
  double t395;
  double t396;
  double t399;
  double t405;
  double t407;
  double t408;
  double t284;
  double t286;
  double t287;
  double t305;
  double t307;
  double t308;
  double t413;
  double t417;
  double t418;
  double t421;
  double t422;
  double t423;
  double t315;
  double t317;
  double t318;
  double t328;
  double t331;
  double t333;
  double t425;
  double t426;
  double t428;
  double t430;
  double t435;
  double t436;
  double t340;
  double t342;
  double t343;
  double t444;
  double t446;
  double t447;
  double t450;
  double t451;
  double t452;
  double t471;
  double t472;
  double t474;
  double t476;
  double t480;
  double t481;
  double t491;
  double t492;
  double t493;
  double t495;
  double t496;
  double t497;
  double t499;
  double t500;
  double t501;
  double t504;
  double t505;
  double t506;
  double t508;
  double t509;
  double t510;
  double t512;
  double t513;
  double t515;
  double t517;
  double t519;
  double t520;
  double t524;
  double t525;
  double t526;
  double t528;
  double t529;
  double t530;
  double t547;
  double t549;
  double t550;
  double t553;
  double t554;
  double t555;
  double t570;
  double t579;
  double t580;
  double t582;
  double t583;
  double t597;
  double t599;
  double t600;
  double t602;
  double t604;
  double t605;
  double t606;
  double t608;
  double t610;
  double t611;
  double t613;
  double t614;
  double t615;
  double t617;
  double t618;
  double t619;
  double t621;
  double t622;
  double t623;
  double t625;
  double t626;
  double t627;
  double t644;
  double t645;
  double t646;
  double t650;
  double t652;
  double t653;
  double t661;
  double t662;
  double t664;
  double t666;
  double t668;
  double t669;
  double t672;
  double t673;
  double t674;
  double t677;
  double t678;
  double t679;
  double t681;
  double t682;
  double t685;
  double t687;
  double t688;
  double t689;
  double t691;
  double t692;
  double t693;
  double t696;
  double t697;
  double t698;
  double t700;
  double t701;
  double t702;
  double t718;
  double t720;
  double t721;
  double t735;
  double t736;
  double t737;
  double t739;
  double t740;
  double t743;
  double t746;
  double t747;
  double t750;
  double t754;
  double t755;
  double t756;
  double t759;
  double t760;
  double t762;
  double t766;
  double t767;
  double t768;
  double t770;
  double t772;
  double t773;
  double t776;
  double t777;
  double t778;
  double t791;
  double t792;
  double t793;
  double t799;
  double t800;
  double t802;
  double t808;
  double t809;
  double t810;
  double t813;
  double t814;
  double t815;
  double t817;
  double t818;
  double t819;
  double t822;
  double t823;
  double t824;
  double t826;
  double t827;
  double t828;
  double t831;
  double t832;
  double t833;
  double t837;
  double t838;
  double t839;
  double t842;
  double t843;
  double t845;
  double t863;
  double t864;
  double t866;
  double t868;
  double t870;
  double t871;
  double t877;
  double t880;
  double t881;
  double t883;
  double t884;
  double t885;
  double t887;
  double t888;
  double t889;
  double t892;
  double t893;
  double t894;
  double t896;
  double t897;
  double t898;
  double t900;
  double t901;
  double t902;
  double t904;
  double t905;
  double t906;
  double t908;
  double t910;
  double t911;
  double t940;
  double t941;
  double t944;
  double t924;
  double t925;
  double t927;
  double t951;
  double t952;
  double t953;
  double t956;
  double t957;
  double t959;
  double t961;
  double t962;
  double t963;
  double t965;
  double t966;
  double t969;
  double t972;
  double t973;
  double t974;
  double t976;
  double t977;
  double t979;
  double t981;
  double t983;
  double t984;
  double t987;
  double t988;
  double t990;
  double t1014;
  double t1015;
  double t1017;
  double t1028;
  double t1029;
  double t1036;
  double t1045;
  double t1046;
  double t1047;
  double t1049;
  double t1050;
  double t1051;
  double t1053;
  double t1054;
  double t1059;
  double t1061;
  double t1064;
  double t1065;
  double t1068;
  double t1072;
  double t1073;
  double t1077;
  double t1078;
  double t1081;
  double t1083;
  double t1087;
  double t1091;
  double t1157;
  double t1159;
  double t1161;
  double t1153;
  double t1154;
  double t1169;
  double t1170;
  double t1172;
  double t1174;
  double t1176;
  double t1178;
  double t1185;
  double t1186;
  double t1187;
  double t1191;
  double t1192;
  double t1193;
  double t1197;
  double t1202;
  double t1204;
  double t1207;
  double t1210;
  double t1212;
  double t1217;
  double t1221;
  double t1222;
  double t1226;
  double t1227;
  double t1228;
  double t1272;
  double t1274;
  double t1275;
  double t1284;
  double t1285;
  double t1289;
  double t1324;
  double t1327;
  double t1331;
  double t1337;
  double t1344;
  double t1346;
  double t1349;
  double t1355;
  double t1358;
  double t1362;
  double t1368;
  double t1373;
  double t1391;
  double t1399;
  double t1401;
  double t1415;
  double t1416;
  double t1436;
  double t1262;
  double t1267;
  double t1268;
  double t1270;
  double t1271;
  double t384;
  double t386;
  double t387;
  double t1507;
  double t1513;
  double t1515;
  double t1537;
  double t1540;
  double t1545;
  double t1552;
  double t1560;
  double t1566;
  double t1570;
  double t1571;
  double t1575;
  double t1579;
  double t1582;
  double t1586;
  double t1589;
  double t1591;
  double t1608;
  double t1672;
  double t1677;
  double t1678;
  double t1694;
  double t1695;
  double t1700;
  double t1708;
  double t1714;
  double t1717;
  double t1771;
  double t1777;
  double t1778;
  double t1788;
  double t1797;
  double t1820;
  double t1825;
  double t1828;
  double t1837;
  double t1842;
  double t1844;
  double t1854;
  double t1874;
  double t1884;
  double t1888;
  double t1891;
  double t1894;
  double t1903;
  double t2094;
  double t2099;
  double t2118;
  double t2131;
  double t2135;
  double t2142;
  double t2147;
  double t2150;
  double t2151;
  double t2166;
  double t2167;
  double t2174;
  double t2183;
  double t2187;
  double t2189;
  double t2201;
  double t2211;
  double t2212;
  double t2220;
  double t2223;
  double t2224;
  double t2236;
  double t2239;
  double t2243;
  double t2251;
  double t2253;
  double t2257;
  double t2020;
  double t2030;
  double t2060;
  double t2074;
  double t2085;
  double t2322;
  double t2325;
  double t2328;
  double t2336;
  double t2343;
  double t2353;
  double t2354;
  double t2359;
  double t2375;
  double t2379;
  double t2380;
  double t2382;
  double t2383;
  double t2384;
  double t2387;
  double t2390;
  double t2391;
  double t2394;
  double t2395;
  double t2398;
  double t2485;
  double t2499;
  double t2510;
  double t2525;
  double t2528;
  double t2536;
  double t2554;
  double t2559;
  double t2567;
  double t2570;
  double t2572;
  double t2586;
  double t2610;
  double t2611;
  double t2617;
  double t2627;
  double t2628;
  double t2629;
  double t2645;
  double t2646;
  double t2652;
  double t2663;
  double t2670;
  double t2671;
  double t2686;
  double t2687;
  double t2697;
  double t2768;
  double t2769;
  double t2773;
  double t2787;
  double t2788;
  double t2795;
  double t2798;
  double t2802;
  double t2803;
  double t2804;
  double t2806;
  double t2808;
  double t2811;
  double t2824;
  double t2832;
  double t2834;
  double t2836;
  double t2837;
  double t2841;
  double t2760;
  double t2763;
  double t2766;
  double t2777;
  double t2782;
  double t2883;
  double t2886;
  double t2890;
  double t2893;
  double t2900;
  double t2906;
  double t2908;
  double t2913;
  double t2925;
  double t2937;
  double t2944;
  double t2956;
  double t2958;
  double t2988;
  double t2990;
  double t2991;
  double t3000;
  double t3004;
  double t3008;
  double t3009;
  double t3017;
  double t3018;
  double t3023;
  double t3030;
  double t3037;
  double t3045;
  double t3054;
  double t3061;
  double t3066;
  double t3071;
  double t3083;
  double t3091;
  double t3156;
  double t3157;
  double t3175;
  double t3188;
  double t3189;
  double t3197;
  double t3198;
  double t3200;
  double t3203;
  double t3207;
  double t3214;
  double t3216;
  double t3222;
  double t3128;
  double t3130;
  double t3134;
  double t3135;
  double t3144;
  double t3281;
  double t3282;
  double t3295;
  double t3296;
  double t3301;
  double t3307;
  double t3308;
  double t3354;
  double t3355;
  double t3356;
  double t3365;
  double t3367;
  double t3377;
  double t3380;
  double t3393;
  double t3401;
  double t3408;
  double t3412;
  double t3418;
  double t3420;
  double t3465;
  double t3468;
  double t3471;
  double t3482;
  double t3493;
  double t3498;
  double t3501;
  double t3458;
  double t3459;
  double t3464;
  double t3474;
  double t3475;
  double t3550;
  double t3558;
  double t460;
  double t3580;
  double t3583;
  double t3587;
  double t3593;
  double t3594;
  double t3603;
  double t3604;
  double t3503;
  double t3660;
  double t3664;
  double t3673;
  double t3522;
  double t3644;
  double t3648;
  double t3652;
  double t3656;
  double t3658;
  double t3562;
  double t462;
  double t463;
  double t3614;
  double t3725;
  double t3728;
  double t3735;
  double t3626;
  t19 = Cos(var1[3]);
  t96 = Cos(var1[5]);
  t103 = Sin(var1[3]);
  t100 = Sin(var1[4]);
  t104 = Sin(var1[5]);
  t69 = Cos(var1[15]);
  t77 = -1.*t69;
  t81 = 1. + t77;
  t86 = Sin(var1[15]);
  t29 = Cos(var1[4]);
  t32 = Sin(var1[14]);
  t122 = Cos(var1[14]);
  t138 = -1.*t96*t103;
  t140 = -1.*t19*t100*t104;
  t141 = t138 + t140;
  t101 = t19*t96*t100;
  t106 = -1.*t103*t104;
  t110 = t101 + t106;
  t160 = -1.*t19*t29*t32;
  t164 = t122*t141;
  t176 = t160 + t164;
  t184 = Cos(var1[16]);
  t188 = -1.*t184;
  t192 = 1. + t188;
  t197 = Sin(var1[16]);
  t205 = -1.*t122*t19*t29;
  t207 = -1.*t32*t141;
  t209 = t205 + t207;
  t229 = t69*t110;
  t230 = t86*t176;
  t231 = t229 + t230;
  t235 = Cos(var1[17]);
  t236 = -1.*t235;
  t237 = 1. + t236;
  t239 = Sin(var1[17]);
  t247 = t197*t209;
  t249 = t184*t231;
  t250 = t247 + t249;
  t257 = t184*t209;
  t258 = -1.*t197*t231;
  t262 = t257 + t258;
  t267 = Cos(var1[18]);
  t269 = -1.*t267;
  t270 = 1. + t269;
  t273 = Sin(var1[18]);
  t277 = -1.*t239*t250;
  t278 = t235*t262;
  t281 = t277 + t278;
  t291 = t235*t250;
  t294 = t239*t262;
  t297 = t291 + t294;
  t302 = Cos(var1[19]);
  t303 = -1.*t302;
  t304 = 1. + t303;
  t306 = Sin(var1[19]);
  t310 = t273*t281;
  t311 = t267*t297;
  t312 = t310 + t311;
  t320 = t267*t281;
  t321 = -1.*t273*t297;
  t322 = t320 + t321;
  t324 = Cos(var1[21]);
  t326 = -1.*t324;
  t327 = 1. + t326;
  t330 = Sin(var1[21]);
  t334 = -1.*t306*t312;
  t336 = t302*t322;
  t338 = t334 + t336;
  t344 = t302*t312;
  t345 = t306*t322;
  t346 = t344 + t345;
  t39 = 0.135*t32;
  t45 = 0. + t39;
  t83 = -0.049*t81;
  t88 = -0.135*t86;
  t91 = 0. + t83 + t88;
  t126 = -1.*t122;
  t130 = 1. + t126;
  t134 = -0.135*t130;
  t137 = 0. + t134;
  t149 = -0.135*t81;
  t152 = 0.049*t86;
  t156 = 0. + t149 + t152;
  t370 = t19*t96;
  t371 = -1.*t103*t100*t104;
  t372 = t370 + t371;
  t196 = -0.09*t192;
  t202 = 0.049*t197;
  t204 = 0. + t196 + t202;
  t364 = t96*t103*t100;
  t365 = t19*t104;
  t367 = t364 + t365;
  t374 = -1.*t29*t32*t103;
  t375 = t122*t372;
  t376 = t374 + t375;
  t215 = -0.049*t192;
  t223 = -0.09*t197;
  t227 = 0. + t215 + t223;
  t238 = -0.049*t237;
  t241 = -0.21*t239;
  t242 = 0. + t238 + t241;
  t379 = -1.*t122*t29*t103;
  t380 = -1.*t32*t372;
  t381 = t379 + t380;
  t390 = t69*t367;
  t391 = t86*t376;
  t392 = t390 + t391;
  t254 = -0.21*t237;
  t255 = 0.049*t239;
  t256 = 0. + t254 + t255;
  t271 = -0.27068*t270;
  t274 = 0.00159*t273;
  t275 = 0. + t271 + t274;
  t395 = t197*t381;
  t396 = t184*t392;
  t399 = t395 + t396;
  t405 = t184*t381;
  t407 = -1.*t197*t392;
  t408 = t405 + t407;
  t284 = -0.00159*t270;
  t286 = -0.27068*t273;
  t287 = 0. + t284 + t286;
  t305 = 0.01841*t304;
  t307 = -0.70544*t306;
  t308 = 0. + t305 + t307;
  t413 = -1.*t239*t399;
  t417 = t235*t408;
  t418 = t413 + t417;
  t421 = t235*t399;
  t422 = t239*t408;
  t423 = t421 + t422;
  t315 = -0.70544*t304;
  t317 = -0.01841*t306;
  t318 = 0. + t315 + t317;
  t328 = -1.11344*t327;
  t331 = 0.02159*t330;
  t333 = 0. + t328 + t331;
  t425 = t273*t418;
  t426 = t267*t423;
  t428 = t425 + t426;
  t430 = t267*t418;
  t435 = -1.*t273*t423;
  t436 = t430 + t435;
  t340 = -0.02159*t327;
  t342 = -1.11344*t330;
  t343 = 0. + t340 + t342;
  t444 = -1.*t306*t428;
  t446 = t302*t436;
  t447 = t444 + t446;
  t450 = t302*t428;
  t451 = t306*t436;
  t452 = t450 + t451;
  t471 = t29*t32;
  t472 = t122*t100*t104;
  t474 = t471 + t472;
  t476 = t122*t29;
  t480 = -1.*t32*t100*t104;
  t481 = t476 + t480;
  t491 = -1.*t69*t96*t100;
  t492 = t86*t474;
  t493 = t491 + t492;
  t495 = t197*t481;
  t496 = t184*t493;
  t497 = t495 + t496;
  t499 = t184*t481;
  t500 = -1.*t197*t493;
  t501 = t499 + t500;
  t504 = -1.*t239*t497;
  t505 = t235*t501;
  t506 = t504 + t505;
  t508 = t235*t497;
  t509 = t239*t501;
  t510 = t508 + t509;
  t512 = t273*t506;
  t513 = t267*t510;
  t515 = t512 + t513;
  t517 = t267*t506;
  t519 = -1.*t273*t510;
  t520 = t517 + t519;
  t524 = -1.*t306*t515;
  t525 = t302*t520;
  t526 = t524 + t525;
  t528 = t302*t515;
  t529 = t306*t520;
  t530 = t528 + t529;
  t547 = t32*t103*t100;
  t549 = -1.*t122*t29*t103*t104;
  t550 = t547 + t549;
  t553 = t122*t103*t100;
  t554 = t29*t32*t103*t104;
  t555 = t553 + t554;
  t570 = t69*t29*t96*t103;
  t579 = t86*t550;
  t580 = t570 + t579;
  t582 = t197*t555;
  t583 = t184*t580;
  t597 = t582 + t583;
  t599 = t184*t555;
  t600 = -1.*t197*t580;
  t602 = t599 + t600;
  t604 = -1.*t239*t597;
  t605 = t235*t602;
  t606 = t604 + t605;
  t608 = t235*t597;
  t610 = t239*t602;
  t611 = t608 + t610;
  t613 = t273*t606;
  t614 = t267*t611;
  t615 = t613 + t614;
  t617 = t267*t606;
  t618 = -1.*t273*t611;
  t619 = t617 + t618;
  t621 = -1.*t306*t615;
  t622 = t302*t619;
  t623 = t621 + t622;
  t625 = t302*t615;
  t626 = t306*t619;
  t627 = t625 + t626;
  t644 = -1.*t19*t32*t100;
  t645 = t122*t19*t29*t104;
  t646 = t644 + t645;
  t650 = -1.*t122*t19*t100;
  t652 = -1.*t19*t29*t32*t104;
  t653 = t650 + t652;
  t661 = -1.*t69*t19*t29*t96;
  t662 = t86*t646;
  t664 = t661 + t662;
  t666 = t197*t653;
  t668 = t184*t664;
  t669 = t666 + t668;
  t672 = t184*t653;
  t673 = -1.*t197*t664;
  t674 = t672 + t673;
  t677 = -1.*t239*t669;
  t678 = t235*t674;
  t679 = t677 + t678;
  t681 = t235*t669;
  t682 = t239*t674;
  t685 = t681 + t682;
  t687 = t273*t679;
  t688 = t267*t685;
  t689 = t687 + t688;
  t691 = t267*t679;
  t692 = -1.*t273*t685;
  t693 = t691 + t692;
  t696 = -1.*t306*t689;
  t697 = t302*t693;
  t698 = t696 + t697;
  t700 = t302*t689;
  t701 = t306*t693;
  t702 = t700 + t701;
  t718 = -1.*t122*t29*t96*t86;
  t720 = -1.*t69*t29*t104;
  t721 = t718 + t720;
  t735 = t29*t96*t32*t197;
  t736 = t184*t721;
  t737 = t735 + t736;
  t739 = t184*t29*t96*t32;
  t740 = -1.*t197*t721;
  t743 = t739 + t740;
  t746 = -1.*t239*t737;
  t747 = t235*t743;
  t750 = t746 + t747;
  t754 = t235*t737;
  t755 = t239*t743;
  t756 = t754 + t755;
  t759 = t273*t750;
  t760 = t267*t756;
  t762 = t759 + t760;
  t766 = t267*t750;
  t767 = -1.*t273*t756;
  t768 = t766 + t767;
  t770 = -1.*t306*t762;
  t772 = t302*t768;
  t773 = t770 + t772;
  t776 = t302*t762;
  t777 = t306*t768;
  t778 = t776 + t777;
  t791 = -1.*t96*t103*t100;
  t792 = -1.*t19*t104;
  t793 = t791 + t792;
  t799 = t122*t86*t793;
  t800 = t69*t372;
  t802 = t799 + t800;
  t808 = -1.*t32*t197*t793;
  t809 = t184*t802;
  t810 = t808 + t809;
  t813 = -1.*t184*t32*t793;
  t814 = -1.*t197*t802;
  t815 = t813 + t814;
  t817 = -1.*t239*t810;
  t818 = t235*t815;
  t819 = t817 + t818;
  t822 = t235*t810;
  t823 = t239*t815;
  t824 = t822 + t823;
  t826 = t273*t819;
  t827 = t267*t824;
  t828 = t826 + t827;
  t831 = t267*t819;
  t832 = -1.*t273*t824;
  t833 = t831 + t832;
  t837 = -1.*t306*t828;
  t838 = t302*t833;
  t839 = t837 + t838;
  t842 = t302*t828;
  t843 = t306*t833;
  t845 = t842 + t843;
  t863 = t96*t103;
  t864 = t19*t100*t104;
  t866 = t863 + t864;
  t868 = t122*t86*t110;
  t870 = t69*t866;
  t871 = t868 + t870;
  t877 = -1.*t32*t197*t110;
  t880 = t184*t871;
  t881 = t877 + t880;
  t883 = -1.*t184*t32*t110;
  t884 = -1.*t197*t871;
  t885 = t883 + t884;
  t887 = -1.*t239*t881;
  t888 = t235*t885;
  t889 = t887 + t888;
  t892 = t235*t881;
  t893 = t239*t885;
  t894 = t892 + t893;
  t896 = t273*t889;
  t897 = t267*t894;
  t898 = t896 + t897;
  t900 = t267*t889;
  t901 = -1.*t273*t894;
  t902 = t900 + t901;
  t904 = -1.*t306*t898;
  t905 = t302*t902;
  t906 = t904 + t905;
  t908 = t302*t898;
  t910 = t306*t902;
  t911 = t908 + t910;
  t940 = t122*t100;
  t941 = t29*t32*t104;
  t944 = t940 + t941;
  t924 = -1.*t32*t100;
  t925 = t122*t29*t104;
  t927 = t924 + t925;
  t951 = t197*t927;
  t952 = t184*t86*t944;
  t953 = t951 + t952;
  t956 = t184*t927;
  t957 = -1.*t86*t197*t944;
  t959 = t956 + t957;
  t961 = -1.*t239*t953;
  t962 = t235*t959;
  t963 = t961 + t962;
  t965 = t235*t953;
  t966 = t239*t959;
  t969 = t965 + t966;
  t972 = t273*t963;
  t973 = t267*t969;
  t974 = t972 + t973;
  t976 = t267*t963;
  t977 = -1.*t273*t969;
  t979 = t976 + t977;
  t981 = -1.*t306*t974;
  t983 = t302*t979;
  t984 = t981 + t983;
  t987 = t302*t974;
  t988 = t306*t979;
  t990 = t987 + t988;
  t1014 = t29*t32*t103;
  t1015 = -1.*t122*t372;
  t1017 = t1014 + t1015;
  t1028 = t197*t1017;
  t1029 = t184*t86*t381;
  t1036 = t1028 + t1029;
  t1045 = t184*t1017;
  t1046 = -1.*t86*t197*t381;
  t1047 = t1045 + t1046;
  t1049 = -1.*t239*t1036;
  t1050 = t235*t1047;
  t1051 = t1049 + t1050;
  t1053 = t235*t1036;
  t1054 = t239*t1047;
  t1059 = t1053 + t1054;
  t1061 = t273*t1051;
  t1064 = t267*t1059;
  t1065 = t1061 + t1064;
  t1068 = t267*t1051;
  t1072 = -1.*t273*t1059;
  t1073 = t1068 + t1072;
  t1077 = -1.*t306*t1065;
  t1078 = t302*t1073;
  t1081 = t1077 + t1078;
  t1083 = t302*t1065;
  t1087 = t306*t1073;
  t1091 = t1083 + t1087;
  t1157 = t122*t19*t29;
  t1159 = -1.*t32*t866;
  t1161 = t1157 + t1159;
  t1153 = -1.*t122*t866;
  t1154 = t160 + t1153;
  t1169 = t197*t1154;
  t1170 = t184*t86*t1161;
  t1172 = t1169 + t1170;
  t1174 = t184*t1154;
  t1176 = -1.*t86*t197*t1161;
  t1178 = t1174 + t1176;
  t1185 = -1.*t239*t1172;
  t1186 = t235*t1178;
  t1187 = t1185 + t1186;
  t1191 = t235*t1172;
  t1192 = t239*t1178;
  t1193 = t1191 + t1192;
  t1197 = t273*t1187;
  t1202 = t267*t1193;
  t1204 = t1197 + t1202;
  t1207 = t267*t1187;
  t1210 = -1.*t273*t1193;
  t1212 = t1207 + t1210;
  t1217 = -1.*t306*t1204;
  t1221 = t302*t1212;
  t1222 = t1217 + t1221;
  t1226 = t302*t1204;
  t1227 = t306*t1212;
  t1228 = t1226 + t1227;
  t1272 = t32*t100;
  t1274 = -1.*t122*t29*t104;
  t1275 = t1272 + t1274;
  t1284 = -1.*t29*t96*t86;
  t1285 = t69*t1275;
  t1289 = t1284 + t1285;
  t1324 = -1.*t235*t197*t1289;
  t1327 = -1.*t184*t239*t1289;
  t1331 = t1324 + t1327;
  t1337 = t184*t235*t1289;
  t1344 = -1.*t197*t239*t1289;
  t1346 = t1337 + t1344;
  t1349 = t273*t1331;
  t1355 = t267*t1346;
  t1358 = t1349 + t1355;
  t1362 = t267*t1331;
  t1368 = -1.*t273*t1346;
  t1373 = t1362 + t1368;
  t1391 = -1.*t306*t1358;
  t1399 = t302*t1373;
  t1401 = t1391 + t1399;
  t1415 = t302*t1358;
  t1416 = t306*t1373;
  t1436 = t1415 + t1416;
  t1262 = -0.135*t69;
  t1267 = -0.049*t86;
  t1268 = t1262 + t1267;
  t1270 = 0.049*t69;
  t1271 = t1270 + t88;
  t384 = -1.*t86*t367;
  t386 = t69*t376;
  t387 = t384 + t386;
  t1507 = -1.*t235*t197*t387;
  t1513 = -1.*t184*t239*t387;
  t1515 = t1507 + t1513;
  t1537 = t184*t235*t387;
  t1540 = -1.*t197*t239*t387;
  t1545 = t1537 + t1540;
  t1552 = t273*t1515;
  t1560 = t267*t1545;
  t1566 = t1552 + t1560;
  t1570 = t267*t1515;
  t1571 = -1.*t273*t1545;
  t1575 = t1570 + t1571;
  t1579 = -1.*t306*t1566;
  t1582 = t302*t1575;
  t1586 = t1579 + t1582;
  t1589 = t302*t1566;
  t1591 = t306*t1575;
  t1608 = t1589 + t1591;
  t1672 = -1.*t19*t96*t100;
  t1677 = t103*t104;
  t1678 = t1672 + t1677;
  t1694 = t19*t29*t32;
  t1695 = t122*t866;
  t1700 = t1694 + t1695;
  t1708 = -1.*t86*t1678;
  t1714 = t69*t1700;
  t1717 = t1708 + t1714;
  t1771 = -1.*t235*t197*t1717;
  t1777 = -1.*t184*t239*t1717;
  t1778 = t1771 + t1777;
  t1788 = t184*t235*t1717;
  t1797 = -1.*t197*t239*t1717;
  t1820 = t1788 + t1797;
  t1825 = t273*t1778;
  t1828 = t267*t1820;
  t1837 = t1825 + t1828;
  t1842 = t267*t1778;
  t1844 = -1.*t273*t1820;
  t1854 = t1842 + t1844;
  t1874 = -1.*t306*t1837;
  t1884 = t302*t1854;
  t1888 = t1874 + t1884;
  t1891 = t302*t1837;
  t1894 = t306*t1854;
  t1903 = t1891 + t1894;
  t2094 = t69*t29*t96;
  t2099 = t86*t1275;
  t2118 = t2094 + t2099;
  t2131 = -1.*t197*t944;
  t2135 = -1.*t184*t2118;
  t2142 = t2131 + t2135;
  t2147 = t184*t944;
  t2150 = -1.*t197*t2118;
  t2151 = t2147 + t2150;
  t2166 = t239*t2142;
  t2167 = t235*t2151;
  t2174 = t2166 + t2167;
  t2183 = t235*t2142;
  t2187 = -1.*t239*t2151;
  t2189 = t2183 + t2187;
  t2201 = -1.*t273*t2174;
  t2211 = t267*t2189;
  t2212 = t2201 + t2211;
  t2220 = t267*t2174;
  t2223 = t273*t2189;
  t2224 = t2220 + t2223;
  t2236 = t306*t2212;
  t2239 = t302*t2224;
  t2243 = t2236 + t2239;
  t2251 = t302*t2212;
  t2253 = -1.*t306*t2224;
  t2257 = t2251 + t2253;
  t2020 = 0.049*t184;
  t2030 = t2020 + t223;
  t2060 = -0.09*t184;
  t2074 = -0.049*t197;
  t2085 = t2060 + t2074;
  t2322 = -1.*t197*t381;
  t2325 = -1.*t184*t392;
  t2328 = t2322 + t2325;
  t2336 = t239*t2328;
  t2343 = t2336 + t417;
  t2353 = t235*t2328;
  t2354 = -1.*t239*t408;
  t2359 = t2353 + t2354;
  t2375 = -1.*t273*t2343;
  t2379 = t267*t2359;
  t2380 = t2375 + t2379;
  t2382 = t267*t2343;
  t2383 = t273*t2359;
  t2384 = t2382 + t2383;
  t2387 = t306*t2380;
  t2390 = t302*t2384;
  t2391 = t2387 + t2390;
  t2394 = t302*t2380;
  t2395 = -1.*t306*t2384;
  t2398 = t2394 + t2395;
  t2485 = t69*t1678;
  t2499 = t86*t1700;
  t2510 = t2485 + t2499;
  t2525 = -1.*t197*t1161;
  t2528 = -1.*t184*t2510;
  t2536 = t2525 + t2528;
  t2554 = t184*t1161;
  t2559 = -1.*t197*t2510;
  t2567 = t2554 + t2559;
  t2570 = t239*t2536;
  t2572 = t235*t2567;
  t2586 = t2570 + t2572;
  t2610 = t235*t2536;
  t2611 = -1.*t239*t2567;
  t2617 = t2610 + t2611;
  t2627 = -1.*t273*t2586;
  t2628 = t267*t2617;
  t2629 = t2627 + t2628;
  t2645 = t267*t2586;
  t2646 = t273*t2617;
  t2652 = t2645 + t2646;
  t2663 = t306*t2629;
  t2670 = t302*t2652;
  t2671 = t2663 + t2670;
  t2686 = t302*t2629;
  t2687 = -1.*t306*t2652;
  t2697 = t2686 + t2687;
  t2768 = t197*t944;
  t2769 = t184*t2118;
  t2773 = t2768 + t2769;
  t2787 = -1.*t239*t2773;
  t2788 = t2787 + t2167;
  t2795 = -1.*t235*t2773;
  t2798 = t2795 + t2187;
  t2802 = -1.*t273*t2788;
  t2803 = t267*t2798;
  t2804 = t2802 + t2803;
  t2806 = t267*t2788;
  t2808 = t273*t2798;
  t2811 = t2806 + t2808;
  t2824 = t306*t2804;
  t2832 = t302*t2811;
  t2834 = t2824 + t2832;
  t2836 = t302*t2804;
  t2837 = -1.*t306*t2811;
  t2841 = t2836 + t2837;
  t2760 = -0.21*t235;
  t2763 = -0.049*t239;
  t2766 = t2760 + t2763;
  t2777 = 0.049*t235;
  t2782 = t2777 + t241;
  t2883 = -1.*t235*t399;
  t2886 = t2883 + t2354;
  t2890 = -1.*t273*t418;
  t2893 = t267*t2886;
  t2900 = t2890 + t2893;
  t2906 = t273*t2886;
  t2908 = t430 + t2906;
  t2913 = t306*t2900;
  t2925 = t302*t2908;
  t2937 = t2913 + t2925;
  t2944 = t302*t2900;
  t2956 = -1.*t306*t2908;
  t2958 = t2944 + t2956;
  t2988 = t197*t1161;
  t2990 = t184*t2510;
  t2991 = t2988 + t2990;
  t3000 = -1.*t239*t2991;
  t3004 = t3000 + t2572;
  t3008 = -1.*t235*t2991;
  t3009 = t3008 + t2611;
  t3017 = -1.*t273*t3004;
  t3018 = t267*t3009;
  t3023 = t3017 + t3018;
  t3030 = t267*t3004;
  t3037 = t273*t3009;
  t3045 = t3030 + t3037;
  t3054 = t306*t3023;
  t3061 = t302*t3045;
  t3066 = t3054 + t3061;
  t3071 = t302*t3023;
  t3083 = -1.*t306*t3045;
  t3091 = t3071 + t3083;
  t3156 = t235*t2773;
  t3157 = t239*t2151;
  t3175 = t3156 + t3157;
  t3188 = -1.*t267*t3175;
  t3189 = t2802 + t3188;
  t3197 = -1.*t273*t3175;
  t3198 = t2806 + t3197;
  t3200 = t306*t3189;
  t3203 = t302*t3198;
  t3207 = t3200 + t3203;
  t3214 = t302*t3189;
  t3216 = -1.*t306*t3198;
  t3222 = t3214 + t3216;
  t3128 = 0.00159*t267;
  t3130 = t3128 + t286;
  t3134 = -0.27068*t267;
  t3135 = -0.00159*t273;
  t3144 = t3134 + t3135;
  t3281 = -1.*t267*t423;
  t3282 = t2890 + t3281;
  t3295 = t306*t3282;
  t3296 = t3295 + t446;
  t3301 = t302*t3282;
  t3307 = -1.*t306*t436;
  t3308 = t3301 + t3307;
  t3354 = t235*t2991;
  t3355 = t239*t2567;
  t3356 = t3354 + t3355;
  t3365 = -1.*t267*t3356;
  t3367 = t3017 + t3365;
  t3377 = -1.*t273*t3356;
  t3380 = t3030 + t3377;
  t3393 = t306*t3367;
  t3401 = t302*t3380;
  t3408 = t3393 + t3401;
  t3412 = t302*t3367;
  t3418 = -1.*t306*t3380;
  t3420 = t3412 + t3418;
  t3465 = t273*t2788;
  t3468 = t267*t3175;
  t3471 = t3465 + t3468;
  t3482 = -1.*t306*t3471;
  t3493 = t3482 + t3203;
  t3498 = -1.*t302*t3471;
  t3501 = t3498 + t3216;
  t3458 = -0.70544*t302;
  t3459 = 0.01841*t306;
  t3464 = t3458 + t3459;
  t3474 = -0.01841*t302;
  t3475 = t3474 + t307;
  t3550 = -1.*t302*t428;
  t3558 = t3550 + t3307;
  t460 = t324*t447;
  t3580 = t273*t3004;
  t3583 = t267*t3356;
  t3587 = t3580 + t3583;
  t3593 = -1.*t306*t3587;
  t3594 = t3593 + t3401;
  t3603 = -1.*t302*t3587;
  t3604 = t3603 + t3418;
  t3503 = -1.*t330*t3493;
  t3660 = t302*t3471;
  t3664 = t306*t3198;
  t3673 = t3660 + t3664;
  t3522 = t324*t3493;
  t3644 = 0.02159*t324;
  t3648 = t3644 + t342;
  t3652 = -1.11344*t324;
  t3656 = -0.02159*t330;
  t3658 = t3652 + t3656;
  t3562 = -1.*t330*t447;
  t462 = -1.*t330*t452;
  t463 = t460 + t462;
  t3614 = -1.*t330*t3594;
  t3725 = t302*t3587;
  t3728 = t306*t3380;
  t3735 = t3725 + t3728;
  t3626 = t324*t3594;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t137*t141 + t156*t176 + t204*t209 + t227*t231 + t242*t250 + t256*t262 + t275*t281 + t287*t297 + t308*t312 + t318*t322 + t333*t338 + t343*t346 + 0.075595*(t330*t338 + t324*t346) - 1.077437*(t324*t338 - 1.*t330*t346) - 1.*t19*t29*t45 - 0.1305*(t176*t69 - 1.*t110*t86) + t110*t91;
  p_output1[11]=t137*t372 + t156*t376 + t204*t381 - 0.1305*t387 + t227*t392 + t242*t399 + t256*t408 + t275*t418 + t287*t423 + t308*t428 + t318*t436 + t333*t447 - 1.*t103*t29*t45 + t343*t452 + 0.075595*(t330*t447 + t324*t452) - 1.077437*t463 + t367*t91;
  p_output1[12]=t100*t104*t137 + t29*t45 + t156*t474 + t204*t481 + t227*t493 + t242*t497 + t256*t501 + t275*t506 + t287*t510 + t308*t515 + t318*t520 + t333*t526 + t343*t530 + 0.075595*(t330*t526 + t324*t530) - 1.077437*(t324*t526 - 1.*t330*t530) - 1.*t100*t91*t96 - 0.1305*(t474*t69 + t100*t86*t96);
  p_output1[13]=-1.*t103*t104*t137*t29 + t100*t103*t45 + t156*t550 + t204*t555 + t227*t580 + t242*t597 + t256*t602 + t275*t606 + t287*t611 + t308*t615 + t318*t619 + t333*t623 + t343*t627 + 0.075595*(t330*t623 + t324*t627) - 1.077437*(t324*t623 - 1.*t330*t627) + t103*t29*t91*t96 - 0.1305*(t550*t69 - 1.*t103*t29*t86*t96);
  p_output1[14]=t104*t137*t19*t29 - 1.*t100*t19*t45 + t156*t646 + t204*t653 + t227*t664 + t242*t669 + t256*t674 + t275*t679 + t287*t685 + t308*t689 + t318*t693 + t333*t698 + t343*t702 + 0.075595*(t330*t698 + t324*t702) - 1.077437*(t324*t698 - 1.*t330*t702) - 1.*t19*t29*t91*t96 - 0.1305*(t646*t69 + t19*t29*t86*t96);
  p_output1[15]=t227*t721 + t242*t737 + t256*t743 + t275*t750 + t287*t756 + t308*t762 + t318*t768 + t333*t773 + t343*t778 + 0.075595*(t330*t773 + t324*t778) - 1.077437*(t324*t773 - 1.*t330*t778) - 1.*t104*t29*t91 - 1.*t137*t29*t96 - 1.*t122*t156*t29*t96 + t204*t29*t32*t96 - 0.1305*(t104*t29*t86 - 1.*t122*t29*t69*t96);
  p_output1[16]=t137*t793 + t122*t156*t793 - 1.*t204*t32*t793 + t227*t802 + t242*t810 + t256*t815 + t275*t819 + t287*t824 + t308*t828 + t318*t833 + t333*t839 + t343*t845 + 0.075595*(t330*t839 + t324*t845) - 1.077437*(t324*t839 - 1.*t330*t845) - 0.1305*(t122*t69*t793 - 1.*t372*t86) + t372*t91;
  p_output1[17]=t110*t137 + t110*t122*t156 - 1.*t110*t204*t32 - 0.1305*(t110*t122*t69 - 1.*t86*t866) + t227*t871 + t242*t881 + t256*t885 + t275*t889 + t287*t894 + t308*t898 + t318*t902 + t333*t906 + t866*t91 + t343*t911 + 0.075595*(t330*t906 + t324*t911) - 1.077437*(t324*t906 - 1.*t330*t911);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0.135*t100*t122 + 0.135*t104*t29*t32 + t204*t927 + t156*t944 - 0.1305*t69*t944 + t227*t86*t944 + t242*t953 + t256*t959 + t275*t963 + t287*t969 + t308*t974 + t318*t979 + t333*t984 + t343*t990 + 0.075595*(t330*t984 + t324*t990) - 1.077437*(t324*t984 - 1.*t330*t990);
  p_output1[43]=t1017*t204 + t1036*t242 + t1047*t256 + t1051*t275 + t1059*t287 - 0.135*t103*t122*t29 + t1065*t308 + t1073*t318 + 0.075595*(t1091*t324 + t1081*t330) - 1.077437*(t1081*t324 - 1.*t1091*t330) + t1081*t333 + t1091*t343 - 0.135*t32*t372 + t156*t381 - 0.1305*t381*t69 + t227*t381*t86;
  p_output1[44]=t1161*t156 + t1154*t204 + t1172*t242 + t1178*t256 + t1187*t275 + t1193*t287 + 0.135*t122*t19*t29 + t1204*t308 + t1212*t318 + 0.075595*(t1228*t324 + t1222*t330) - 1.077437*(t1222*t324 - 1.*t1228*t330) + t1222*t333 + t1228*t343 - 0.1305*t1161*t69 + t1161*t227*t86 - 0.135*t32*t866;
  p_output1[45]=t1271*t1275 + t1289*t227 + t1289*t184*t242 - 1.*t1289*t197*t256 + t1331*t275 + t1346*t287 + t1358*t308 + t1373*t318 + 0.075595*(t1436*t324 + t1401*t330) - 1.077437*(t1401*t324 - 1.*t1436*t330) + t1401*t333 + t1436*t343 + t1268*t29*t96 - 0.1305*(-1.*t1275*t86 - 1.*t29*t69*t96);
  p_output1[46]=t1515*t275 + t1545*t287 + t1566*t308 + t1575*t318 + 0.075595*(t1608*t324 + t1586*t330) - 1.077437*(t1586*t324 - 1.*t1608*t330) + t1586*t333 + t1608*t343 + t1268*t367 + t1271*t376 + t227*t387 + t184*t242*t387 - 1.*t197*t256*t387 - 0.1305*(-1.*t367*t69 - 1.*t376*t86);
  p_output1[47]=t1268*t1678 + t1271*t1700 + t1717*t227 + t1717*t184*t242 - 1.*t1717*t197*t256 + t1778*t275 + t1820*t287 + t1837*t308 + t1854*t318 + 0.075595*(t1903*t324 + t1888*t330) - 1.077437*(t1888*t324 - 1.*t1903*t330) + t1888*t333 + t1903*t343 - 0.1305*(-1.*t1678*t69 - 1.*t1700*t86);
  p_output1[48]=t2085*t2118 + t2151*t242 + t2142*t256 + t2189*t275 + t2174*t287 + t2224*t308 + t2212*t318 - 1.077437*(t2257*t324 - 1.*t2243*t330) + 0.075595*(t2243*t324 + t2257*t330) + t2257*t333 + t2243*t343 + t2030*t944;
  p_output1[49]=t2328*t256 + t2359*t275 + t2343*t287 + t2384*t308 + t2380*t318 - 1.077437*(t2398*t324 - 1.*t2391*t330) + 0.075595*(t2391*t324 + t2398*t330) + t2398*t333 + t2391*t343 + t2030*t381 + t2085*t392 + t242*t408;
  p_output1[50]=t1161*t2030 + t2085*t2510 + t2536*t256 + t242*t2567 + t2617*t275 + t2586*t287 + t2652*t308 + t2629*t318 - 1.077437*(t2697*t324 - 1.*t2671*t330) + 0.075595*(t2671*t324 + t2697*t330) + t2697*t333 + t2671*t343;
  p_output1[51]=t2766*t2773 + t2151*t2782 + t275*t2798 + t2788*t287 + t2811*t308 + t2804*t318 - 1.077437*(t2841*t324 - 1.*t2834*t330) + 0.075595*(t2834*t324 + t2841*t330) + t2841*t333 + t2834*t343;
  p_output1[52]=t275*t2886 + t2908*t308 + t2900*t318 - 1.077437*(t2958*t324 - 1.*t2937*t330) + 0.075595*(t2937*t324 + t2958*t330) + t2958*t333 + t2937*t343 + t2766*t399 + t2782*t408 + t287*t418;
  p_output1[53]=t2567*t2782 + t2766*t2991 + t287*t3004 + t275*t3009 + t3045*t308 + t3023*t318 - 1.077437*(t3091*t324 - 1.*t3066*t330) + 0.075595*(t3066*t324 + t3091*t330) + t3091*t333 + t3066*t343;
  p_output1[54]=t2788*t3130 + t3144*t3175 + t318*t3189 + t308*t3198 - 1.077437*(t3222*t324 - 1.*t3207*t330) + 0.075595*(t3207*t324 + t3222*t330) + t3222*t333 + t3207*t343;
  p_output1[55]=t318*t3282 - 1.077437*(-1.*t3296*t330 + t324*t3308) + 0.075595*(t324*t3296 + t330*t3308) + t3308*t333 + t3296*t343 + t3130*t418 + t3144*t423 + t308*t436;
  p_output1[56]=t3004*t3130 + t3144*t3356 + t318*t3367 + t308*t3380 + t333*t3420 - 1.077437*(-1.*t330*t3408 + t324*t3420) + 0.075595*(t324*t3408 + t330*t3420) + t3408*t343;
  p_output1[57]=t3464*t3471 + t3198*t3475 + t343*t3493 + t333*t3501 - 1.077437*(t324*t3501 + t3503) + 0.075595*(t330*t3501 + t3522);
  p_output1[58]=t333*t3558 - 1.077437*(t324*t3558 + t3562) + t3464*t428 + t3475*t436 + t343*t447 + 0.075595*(t330*t3558 + t460);
  p_output1[59]=t3380*t3475 + t3464*t3587 + t343*t3594 + t333*t3604 - 1.077437*(t324*t3604 + t3614) + 0.075595*(t330*t3604 + t3626);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t3493*t3648 + t3658*t3673 - 1.077437*(t3503 - 1.*t324*t3673) + 0.075595*(t3522 - 1.*t330*t3673);
  p_output1[64]=t3648*t447 + t3658*t452 - 1.077437*(t3562 - 1.*t324*t452) + 0.075595*t463;
  p_output1[65]=t3594*t3648 + t3658*t3735 - 1.077437*(t3614 - 1.*t324*t3735) + 0.075595*(t3626 - 1.*t330*t3735);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightToe_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




