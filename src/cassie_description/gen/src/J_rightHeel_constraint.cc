/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:50 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightHeel_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t151;
  double t480;
  double t503;
  double t487;
  double t533;
  double t345;
  double t383;
  double t395;
  double t425;
  double t185;
  double t195;
  double t560;
  double t590;
  double t607;
  double t612;
  double t490;
  double t536;
  double t540;
  double t682;
  double t687;
  double t699;
  double t722;
  double t730;
  double t734;
  double t764;
  double t834;
  double t847;
  double t848;
  double t894;
  double t895;
  double t896;
  double t907;
  double t908;
  double t910;
  double t919;
  double t974;
  double t991;
  double t994;
  double t1024;
  double t1030;
  double t1031;
  double t1037;
  double t1043;
  double t1044;
  double t1049;
  double t1057;
  double t1060;
  double t1070;
  double t1105;
  double t1112;
  double t1119;
  double t1144;
  double t1151;
  double t1163;
  double t1165;
  double t1178;
  double t1180;
  double t1182;
  double t1216;
  double t1219;
  double t1224;
  double t1226;
  double t1232;
  double t1235;
  double t1239;
  double t1254;
  double t1261;
  double t1263;
  double t1287;
  double t1289;
  double t1296;
  double t225;
  double t260;
  double t423;
  double t430;
  double t465;
  double t571;
  double t572;
  double t573;
  double t586;
  double t673;
  double t676;
  double t680;
  double t1360;
  double t1365;
  double t1369;
  double t747;
  double t788;
  double t807;
  double t1334;
  double t1343;
  double t1347;
  double t1373;
  double t1375;
  double t1379;
  double t865;
  double t870;
  double t891;
  double t914;
  double t934;
  double t943;
  double t1389;
  double t1390;
  double t1394;
  double t1419;
  double t1420;
  double t1426;
  double t1011;
  double t1017;
  double t1018;
  double t1048;
  double t1050;
  double t1053;
  double t1432;
  double t1434;
  double t1444;
  double t1448;
  double t1460;
  double t1462;
  double t1075;
  double t1080;
  double t1089;
  double t1164;
  double t1170;
  double t1175;
  double t1471;
  double t1475;
  double t1489;
  double t1493;
  double t1498;
  double t1504;
  double t1191;
  double t1195;
  double t1208;
  double t1237;
  double t1242;
  double t1249;
  double t1511;
  double t1512;
  double t1514;
  double t1519;
  double t1521;
  double t1523;
  double t1270;
  double t1282;
  double t1285;
  double t1525;
  double t1528;
  double t1529;
  double t1532;
  double t1533;
  double t1535;
  double t1597;
  double t1600;
  double t1605;
  double t1615;
  double t1616;
  double t1617;
  double t1626;
  double t1627;
  double t1628;
  double t1631;
  double t1632;
  double t1633;
  double t1637;
  double t1638;
  double t1639;
  double t1644;
  double t1645;
  double t1647;
  double t1659;
  double t1660;
  double t1662;
  double t1666;
  double t1667;
  double t1670;
  double t1675;
  double t1677;
  double t1679;
  double t1682;
  double t1683;
  double t1685;
  double t1688;
  double t1690;
  double t1692;
  double t1715;
  double t1718;
  double t1722;
  double t1725;
  double t1726;
  double t1727;
  double t1744;
  double t1747;
  double t1748;
  double t1754;
  double t1758;
  double t1760;
  double t1770;
  double t1772;
  double t1774;
  double t1779;
  double t1784;
  double t1786;
  double t1790;
  double t1791;
  double t1792;
  double t1795;
  double t1806;
  double t1807;
  double t1812;
  double t1815;
  double t1816;
  double t1823;
  double t1828;
  double t1831;
  double t1835;
  double t1838;
  double t1840;
  double t1871;
  double t1873;
  double t1874;
  double t1886;
  double t1889;
  double t1892;
  double t1908;
  double t1912;
  double t1913;
  double t1915;
  double t1917;
  double t1918;
  double t1920;
  double t1927;
  double t1935;
  double t1944;
  double t1946;
  double t1949;
  double t1958;
  double t1964;
  double t1967;
  double t1972;
  double t1975;
  double t1979;
  double t1986;
  double t1988;
  double t1991;
  double t2003;
  double t2011;
  double t2016;
  double t2022;
  double t2023;
  double t2033;
  double t2061;
  double t2065;
  double t2066;
  double t2093;
  double t2095;
  double t2103;
  double t2133;
  double t2137;
  double t2146;
  double t2150;
  double t2153;
  double t2155;
  double t2163;
  double t2169;
  double t2172;
  double t2177;
  double t2180;
  double t2181;
  double t2185;
  double t2187;
  double t2189;
  double t2195;
  double t2197;
  double t2203;
  double t2205;
  double t2208;
  double t2209;
  double t2251;
  double t2258;
  double t2260;
  double t2270;
  double t2276;
  double t2280;
  double t2298;
  double t2299;
  double t2302;
  double t2306;
  double t2307;
  double t2313;
  double t2317;
  double t2318;
  double t2322;
  double t2329;
  double t2337;
  double t2338;
  double t2340;
  double t2343;
  double t2344;
  double t2348;
  double t2349;
  double t2358;
  double t2365;
  double t2366;
  double t2369;
  double t2373;
  double t2375;
  double t2379;
  double t2425;
  double t2428;
  double t2430;
  double t2438;
  double t2439;
  double t2445;
  double t2464;
  double t2468;
  double t2469;
  double t2471;
  double t2473;
  double t2474;
  double t2478;
  double t2480;
  double t2481;
  double t2486;
  double t2488;
  double t2490;
  double t2497;
  double t2499;
  double t2500;
  double t2510;
  double t2516;
  double t2518;
  double t2525;
  double t2528;
  double t2531;
  double t2540;
  double t2546;
  double t2549;
  double t2591;
  double t2592;
  double t2594;
  double t2587;
  double t2588;
  double t2589;
  double t2606;
  double t2609;
  double t2611;
  double t2616;
  double t2621;
  double t2622;
  double t2631;
  double t2634;
  double t2638;
  double t2641;
  double t2642;
  double t2643;
  double t2645;
  double t2647;
  double t2649;
  double t2653;
  double t2654;
  double t2656;
  double t2664;
  double t2670;
  double t2671;
  double t2676;
  double t2677;
  double t2683;
  double t2719;
  double t2724;
  double t2730;
  double t2742;
  double t2744;
  double t2748;
  double t2752;
  double t2753;
  double t2755;
  double t2768;
  double t2774;
  double t2776;
  double t2782;
  double t2783;
  double t2784;
  double t2788;
  double t2795;
  double t2796;
  double t2803;
  double t2804;
  double t2809;
  double t2813;
  double t2818;
  double t2825;
  double t2843;
  double t2844;
  double t2851;
  double t2879;
  double t2882;
  double t2886;
  double t2876;
  double t2877;
  double t2894;
  double t2897;
  double t2900;
  double t2907;
  double t2910;
  double t2912;
  double t2918;
  double t2919;
  double t2921;
  double t2930;
  double t2931;
  double t2932;
  double t2936;
  double t2937;
  double t2938;
  double t2941;
  double t2942;
  double t2943;
  double t2948;
  double t2950;
  double t2951;
  double t2959;
  double t2964;
  double t2965;
  double t2993;
  double t2996;
  double t2997;
  double t3000;
  double t3001;
  double t3005;
  double t3019;
  double t3025;
  double t3027;
  double t3031;
  double t3032;
  double t3035;
  double t3039;
  double t3040;
  double t3041;
  double t3044;
  double t3047;
  double t3052;
  double t3056;
  double t3058;
  double t3059;
  double t3064;
  double t3066;
  double t3067;
  double t2984;
  double t2985;
  double t2986;
  double t2990;
  double t2991;
  double t1404;
  double t1406;
  double t1410;
  double t3110;
  double t3111;
  double t3114;
  double t3116;
  double t3119;
  double t3120;
  double t3129;
  double t3130;
  double t3132;
  double t3137;
  double t3139;
  double t3140;
  double t3145;
  double t3146;
  double t3149;
  double t3151;
  double t3152;
  double t3153;
  double t3173;
  double t3178;
  double t3179;
  double t3183;
  double t3184;
  double t3185;
  double t3189;
  double t3192;
  double t3195;
  double t3208;
  double t3212;
  double t3213;
  double t3216;
  double t3217;
  double t3218;
  double t3221;
  double t3224;
  double t3225;
  double t3227;
  double t3229;
  double t3233;
  double t3237;
  double t3239;
  double t3241;
  double t3244;
  double t3245;
  double t3246;
  double t3280;
  double t3282;
  double t3283;
  double t3287;
  double t3296;
  double t3297;
  double t3311;
  double t3312;
  double t3314;
  double t3325;
  double t3327;
  double t3331;
  double t3334;
  double t3335;
  double t3337;
  double t3339;
  double t3340;
  double t3341;
  double t3344;
  double t3347;
  double t3349;
  double t3355;
  double t3358;
  double t3359;
  double t3363;
  double t3365;
  double t3366;
  double t3273;
  double t3274;
  double t3277;
  double t3278;
  double t3279;
  double t3387;
  double t3388;
  double t3390;
  double t3393;
  double t3394;
  double t3399;
  double t3401;
  double t3402;
  double t3413;
  double t3418;
  double t3419;
  double t3427;
  double t3428;
  double t3429;
  double t3434;
  double t3438;
  double t3441;
  double t3448;
  double t3452;
  double t3453;
  double t3473;
  double t3476;
  double t3485;
  double t3489;
  double t3492;
  double t3493;
  double t3497;
  double t3499;
  double t3500;
  double t3506;
  double t3508;
  double t3509;
  double t3511;
  double t3513;
  double t3515;
  double t3519;
  double t3520;
  double t3525;
  double t3528;
  double t3529;
  double t3533;
  double t3536;
  double t3539;
  double t3542;
  double t3545;
  double t3549;
  double t3550;
  double t3576;
  double t3577;
  double t3579;
  double t3589;
  double t3592;
  double t3596;
  double t3597;
  double t3603;
  double t3604;
  double t3607;
  double t3610;
  double t3612;
  double t3613;
  double t3617;
  double t3619;
  double t3620;
  double t3623;
  double t3625;
  double t3627;
  double t3570;
  double t3571;
  double t3575;
  double t3582;
  double t3586;
  double t3651;
  double t3654;
  double t3657;
  double t3660;
  double t3662;
  double t3664;
  double t3667;
  double t3672;
  double t3673;
  double t3679;
  double t3685;
  double t3686;
  double t3688;
  double t3715;
  double t3717;
  double t3718;
  double t3725;
  double t3727;
  double t3731;
  double t3732;
  double t3738;
  double t3739;
  double t3743;
  double t3746;
  double t3749;
  double t3752;
  double t3755;
  double t3758;
  double t3759;
  double t3762;
  double t3764;
  double t3765;
  double t3800;
  double t3803;
  double t3804;
  double t3809;
  double t3812;
  double t3818;
  double t3824;
  double t3826;
  double t3827;
  double t3828;
  double t3831;
  double t3832;
  double t3837;
  double t3788;
  double t3789;
  double t3795;
  double t3797;
  double t3799;
  double t3867;
  double t3872;
  double t3880;
  double t3881;
  double t3887;
  double t3888;
  double t3890;
  double t3917;
  double t3921;
  double t3924;
  double t3929;
  double t3932;
  double t3935;
  double t3937;
  double t3941;
  double t3944;
  double t3945;
  double t3948;
  double t3951;
  double t3952;
  double t3986;
  double t3988;
  double t3989;
  double t3997;
  double t3999;
  double t4005;
  double t4007;
  double t3983;
  double t3984;
  double t3985;
  double t3994;
  double t3995;
  double t4045;
  double t4047;
  double t1569;
  double t4069;
  double t4071;
  double t4073;
  double t4078;
  double t4081;
  double t4091;
  double t4092;
  double t4011;
  double t4138;
  double t4140;
  double t4144;
  double t4021;
  double t4123;
  double t4125;
  double t4132;
  double t4135;
  double t4136;
  double t4050;
  double t1571;
  double t1575;
  double t4097;
  double t4190;
  double t4194;
  double t4197;
  double t4105;
  t151 = Cos(var1[3]);
  t480 = Cos(var1[5]);
  t503 = Sin(var1[3]);
  t487 = Sin(var1[4]);
  t533 = Sin(var1[5]);
  t345 = Cos(var1[15]);
  t383 = -1.*t345;
  t395 = 1. + t383;
  t425 = Sin(var1[15]);
  t185 = Cos(var1[4]);
  t195 = Sin(var1[14]);
  t560 = Cos(var1[14]);
  t590 = -1.*t480*t503;
  t607 = -1.*t151*t487*t533;
  t612 = t590 + t607;
  t490 = t151*t480*t487;
  t536 = -1.*t503*t533;
  t540 = t490 + t536;
  t682 = -1.*t151*t185*t195;
  t687 = t560*t612;
  t699 = t682 + t687;
  t722 = Cos(var1[16]);
  t730 = -1.*t722;
  t734 = 1. + t730;
  t764 = Sin(var1[16]);
  t834 = -1.*t560*t151*t185;
  t847 = -1.*t195*t612;
  t848 = t834 + t847;
  t894 = t345*t540;
  t895 = t425*t699;
  t896 = t894 + t895;
  t907 = Cos(var1[17]);
  t908 = -1.*t907;
  t910 = 1. + t908;
  t919 = Sin(var1[17]);
  t974 = t764*t848;
  t991 = t722*t896;
  t994 = t974 + t991;
  t1024 = t722*t848;
  t1030 = -1.*t764*t896;
  t1031 = t1024 + t1030;
  t1037 = Cos(var1[18]);
  t1043 = -1.*t1037;
  t1044 = 1. + t1043;
  t1049 = Sin(var1[18]);
  t1057 = -1.*t919*t994;
  t1060 = t907*t1031;
  t1070 = t1057 + t1060;
  t1105 = t907*t994;
  t1112 = t919*t1031;
  t1119 = t1105 + t1112;
  t1144 = Cos(var1[19]);
  t1151 = -1.*t1144;
  t1163 = 1. + t1151;
  t1165 = Sin(var1[19]);
  t1178 = t1049*t1070;
  t1180 = t1037*t1119;
  t1182 = t1178 + t1180;
  t1216 = t1037*t1070;
  t1219 = -1.*t1049*t1119;
  t1224 = t1216 + t1219;
  t1226 = Cos(var1[21]);
  t1232 = -1.*t1226;
  t1235 = 1. + t1232;
  t1239 = Sin(var1[21]);
  t1254 = -1.*t1165*t1182;
  t1261 = t1144*t1224;
  t1263 = t1254 + t1261;
  t1287 = t1144*t1182;
  t1289 = t1165*t1224;
  t1296 = t1287 + t1289;
  t225 = 0.135*t195;
  t260 = 0. + t225;
  t423 = -0.049*t395;
  t430 = -0.135*t425;
  t465 = 0. + t423 + t430;
  t571 = -1.*t560;
  t572 = 1. + t571;
  t573 = -0.135*t572;
  t586 = 0. + t573;
  t673 = -0.135*t395;
  t676 = 0.049*t425;
  t680 = 0. + t673 + t676;
  t1360 = t151*t480;
  t1365 = -1.*t503*t487*t533;
  t1369 = t1360 + t1365;
  t747 = -0.09*t734;
  t788 = 0.049*t764;
  t807 = 0. + t747 + t788;
  t1334 = t480*t503*t487;
  t1343 = t151*t533;
  t1347 = t1334 + t1343;
  t1373 = -1.*t185*t195*t503;
  t1375 = t560*t1369;
  t1379 = t1373 + t1375;
  t865 = -0.049*t734;
  t870 = -0.09*t764;
  t891 = 0. + t865 + t870;
  t914 = -0.049*t910;
  t934 = -0.21*t919;
  t943 = 0. + t914 + t934;
  t1389 = -1.*t560*t185*t503;
  t1390 = -1.*t195*t1369;
  t1394 = t1389 + t1390;
  t1419 = t345*t1347;
  t1420 = t425*t1379;
  t1426 = t1419 + t1420;
  t1011 = -0.21*t910;
  t1017 = 0.049*t919;
  t1018 = 0. + t1011 + t1017;
  t1048 = -0.27068*t1044;
  t1050 = 0.00159*t1049;
  t1053 = 0. + t1048 + t1050;
  t1432 = t764*t1394;
  t1434 = t722*t1426;
  t1444 = t1432 + t1434;
  t1448 = t722*t1394;
  t1460 = -1.*t764*t1426;
  t1462 = t1448 + t1460;
  t1075 = -0.00159*t1044;
  t1080 = -0.27068*t1049;
  t1089 = 0. + t1075 + t1080;
  t1164 = 0.01841*t1163;
  t1170 = -0.70544*t1165;
  t1175 = 0. + t1164 + t1170;
  t1471 = -1.*t919*t1444;
  t1475 = t907*t1462;
  t1489 = t1471 + t1475;
  t1493 = t907*t1444;
  t1498 = t919*t1462;
  t1504 = t1493 + t1498;
  t1191 = -0.70544*t1163;
  t1195 = -0.01841*t1165;
  t1208 = 0. + t1191 + t1195;
  t1237 = -1.11344*t1235;
  t1242 = 0.02159*t1239;
  t1249 = 0. + t1237 + t1242;
  t1511 = t1049*t1489;
  t1512 = t1037*t1504;
  t1514 = t1511 + t1512;
  t1519 = t1037*t1489;
  t1521 = -1.*t1049*t1504;
  t1523 = t1519 + t1521;
  t1270 = -0.02159*t1235;
  t1282 = -1.11344*t1239;
  t1285 = 0. + t1270 + t1282;
  t1525 = -1.*t1165*t1514;
  t1528 = t1144*t1523;
  t1529 = t1525 + t1528;
  t1532 = t1144*t1514;
  t1533 = t1165*t1523;
  t1535 = t1532 + t1533;
  t1597 = t185*t195;
  t1600 = t560*t487*t533;
  t1605 = t1597 + t1600;
  t1615 = t560*t185;
  t1616 = -1.*t195*t487*t533;
  t1617 = t1615 + t1616;
  t1626 = -1.*t345*t480*t487;
  t1627 = t425*t1605;
  t1628 = t1626 + t1627;
  t1631 = t764*t1617;
  t1632 = t722*t1628;
  t1633 = t1631 + t1632;
  t1637 = t722*t1617;
  t1638 = -1.*t764*t1628;
  t1639 = t1637 + t1638;
  t1644 = -1.*t919*t1633;
  t1645 = t907*t1639;
  t1647 = t1644 + t1645;
  t1659 = t907*t1633;
  t1660 = t919*t1639;
  t1662 = t1659 + t1660;
  t1666 = t1049*t1647;
  t1667 = t1037*t1662;
  t1670 = t1666 + t1667;
  t1675 = t1037*t1647;
  t1677 = -1.*t1049*t1662;
  t1679 = t1675 + t1677;
  t1682 = -1.*t1165*t1670;
  t1683 = t1144*t1679;
  t1685 = t1682 + t1683;
  t1688 = t1144*t1670;
  t1690 = t1165*t1679;
  t1692 = t1688 + t1690;
  t1715 = t195*t503*t487;
  t1718 = -1.*t560*t185*t503*t533;
  t1722 = t1715 + t1718;
  t1725 = t560*t503*t487;
  t1726 = t185*t195*t503*t533;
  t1727 = t1725 + t1726;
  t1744 = t345*t185*t480*t503;
  t1747 = t425*t1722;
  t1748 = t1744 + t1747;
  t1754 = t764*t1727;
  t1758 = t722*t1748;
  t1760 = t1754 + t1758;
  t1770 = t722*t1727;
  t1772 = -1.*t764*t1748;
  t1774 = t1770 + t1772;
  t1779 = -1.*t919*t1760;
  t1784 = t907*t1774;
  t1786 = t1779 + t1784;
  t1790 = t907*t1760;
  t1791 = t919*t1774;
  t1792 = t1790 + t1791;
  t1795 = t1049*t1786;
  t1806 = t1037*t1792;
  t1807 = t1795 + t1806;
  t1812 = t1037*t1786;
  t1815 = -1.*t1049*t1792;
  t1816 = t1812 + t1815;
  t1823 = -1.*t1165*t1807;
  t1828 = t1144*t1816;
  t1831 = t1823 + t1828;
  t1835 = t1144*t1807;
  t1838 = t1165*t1816;
  t1840 = t1835 + t1838;
  t1871 = -1.*t151*t195*t487;
  t1873 = t560*t151*t185*t533;
  t1874 = t1871 + t1873;
  t1886 = -1.*t560*t151*t487;
  t1889 = -1.*t151*t185*t195*t533;
  t1892 = t1886 + t1889;
  t1908 = -1.*t345*t151*t185*t480;
  t1912 = t425*t1874;
  t1913 = t1908 + t1912;
  t1915 = t764*t1892;
  t1917 = t722*t1913;
  t1918 = t1915 + t1917;
  t1920 = t722*t1892;
  t1927 = -1.*t764*t1913;
  t1935 = t1920 + t1927;
  t1944 = -1.*t919*t1918;
  t1946 = t907*t1935;
  t1949 = t1944 + t1946;
  t1958 = t907*t1918;
  t1964 = t919*t1935;
  t1967 = t1958 + t1964;
  t1972 = t1049*t1949;
  t1975 = t1037*t1967;
  t1979 = t1972 + t1975;
  t1986 = t1037*t1949;
  t1988 = -1.*t1049*t1967;
  t1991 = t1986 + t1988;
  t2003 = -1.*t1165*t1979;
  t2011 = t1144*t1991;
  t2016 = t2003 + t2011;
  t2022 = t1144*t1979;
  t2023 = t1165*t1991;
  t2033 = t2022 + t2023;
  t2061 = -1.*t560*t185*t480*t425;
  t2065 = -1.*t345*t185*t533;
  t2066 = t2061 + t2065;
  t2093 = t185*t480*t195*t764;
  t2095 = t722*t2066;
  t2103 = t2093 + t2095;
  t2133 = t722*t185*t480*t195;
  t2137 = -1.*t764*t2066;
  t2146 = t2133 + t2137;
  t2150 = -1.*t919*t2103;
  t2153 = t907*t2146;
  t2155 = t2150 + t2153;
  t2163 = t907*t2103;
  t2169 = t919*t2146;
  t2172 = t2163 + t2169;
  t2177 = t1049*t2155;
  t2180 = t1037*t2172;
  t2181 = t2177 + t2180;
  t2185 = t1037*t2155;
  t2187 = -1.*t1049*t2172;
  t2189 = t2185 + t2187;
  t2195 = -1.*t1165*t2181;
  t2197 = t1144*t2189;
  t2203 = t2195 + t2197;
  t2205 = t1144*t2181;
  t2208 = t1165*t2189;
  t2209 = t2205 + t2208;
  t2251 = -1.*t480*t503*t487;
  t2258 = -1.*t151*t533;
  t2260 = t2251 + t2258;
  t2270 = t560*t425*t2260;
  t2276 = t345*t1369;
  t2280 = t2270 + t2276;
  t2298 = -1.*t195*t764*t2260;
  t2299 = t722*t2280;
  t2302 = t2298 + t2299;
  t2306 = -1.*t722*t195*t2260;
  t2307 = -1.*t764*t2280;
  t2313 = t2306 + t2307;
  t2317 = -1.*t919*t2302;
  t2318 = t907*t2313;
  t2322 = t2317 + t2318;
  t2329 = t907*t2302;
  t2337 = t919*t2313;
  t2338 = t2329 + t2337;
  t2340 = t1049*t2322;
  t2343 = t1037*t2338;
  t2344 = t2340 + t2343;
  t2348 = t1037*t2322;
  t2349 = -1.*t1049*t2338;
  t2358 = t2348 + t2349;
  t2365 = -1.*t1165*t2344;
  t2366 = t1144*t2358;
  t2369 = t2365 + t2366;
  t2373 = t1144*t2344;
  t2375 = t1165*t2358;
  t2379 = t2373 + t2375;
  t2425 = t480*t503;
  t2428 = t151*t487*t533;
  t2430 = t2425 + t2428;
  t2438 = t560*t425*t540;
  t2439 = t345*t2430;
  t2445 = t2438 + t2439;
  t2464 = -1.*t195*t764*t540;
  t2468 = t722*t2445;
  t2469 = t2464 + t2468;
  t2471 = -1.*t722*t195*t540;
  t2473 = -1.*t764*t2445;
  t2474 = t2471 + t2473;
  t2478 = -1.*t919*t2469;
  t2480 = t907*t2474;
  t2481 = t2478 + t2480;
  t2486 = t907*t2469;
  t2488 = t919*t2474;
  t2490 = t2486 + t2488;
  t2497 = t1049*t2481;
  t2499 = t1037*t2490;
  t2500 = t2497 + t2499;
  t2510 = t1037*t2481;
  t2516 = -1.*t1049*t2490;
  t2518 = t2510 + t2516;
  t2525 = -1.*t1165*t2500;
  t2528 = t1144*t2518;
  t2531 = t2525 + t2528;
  t2540 = t1144*t2500;
  t2546 = t1165*t2518;
  t2549 = t2540 + t2546;
  t2591 = t560*t487;
  t2592 = t185*t195*t533;
  t2594 = t2591 + t2592;
  t2587 = -1.*t195*t487;
  t2588 = t560*t185*t533;
  t2589 = t2587 + t2588;
  t2606 = t764*t2589;
  t2609 = t722*t425*t2594;
  t2611 = t2606 + t2609;
  t2616 = t722*t2589;
  t2621 = -1.*t425*t764*t2594;
  t2622 = t2616 + t2621;
  t2631 = -1.*t919*t2611;
  t2634 = t907*t2622;
  t2638 = t2631 + t2634;
  t2641 = t907*t2611;
  t2642 = t919*t2622;
  t2643 = t2641 + t2642;
  t2645 = t1049*t2638;
  t2647 = t1037*t2643;
  t2649 = t2645 + t2647;
  t2653 = t1037*t2638;
  t2654 = -1.*t1049*t2643;
  t2656 = t2653 + t2654;
  t2664 = -1.*t1165*t2649;
  t2670 = t1144*t2656;
  t2671 = t2664 + t2670;
  t2676 = t1144*t2649;
  t2677 = t1165*t2656;
  t2683 = t2676 + t2677;
  t2719 = t185*t195*t503;
  t2724 = -1.*t560*t1369;
  t2730 = t2719 + t2724;
  t2742 = t764*t2730;
  t2744 = t722*t425*t1394;
  t2748 = t2742 + t2744;
  t2752 = t722*t2730;
  t2753 = -1.*t425*t764*t1394;
  t2755 = t2752 + t2753;
  t2768 = -1.*t919*t2748;
  t2774 = t907*t2755;
  t2776 = t2768 + t2774;
  t2782 = t907*t2748;
  t2783 = t919*t2755;
  t2784 = t2782 + t2783;
  t2788 = t1049*t2776;
  t2795 = t1037*t2784;
  t2796 = t2788 + t2795;
  t2803 = t1037*t2776;
  t2804 = -1.*t1049*t2784;
  t2809 = t2803 + t2804;
  t2813 = -1.*t1165*t2796;
  t2818 = t1144*t2809;
  t2825 = t2813 + t2818;
  t2843 = t1144*t2796;
  t2844 = t1165*t2809;
  t2851 = t2843 + t2844;
  t2879 = t560*t151*t185;
  t2882 = -1.*t195*t2430;
  t2886 = t2879 + t2882;
  t2876 = -1.*t560*t2430;
  t2877 = t682 + t2876;
  t2894 = t764*t2877;
  t2897 = t722*t425*t2886;
  t2900 = t2894 + t2897;
  t2907 = t722*t2877;
  t2910 = -1.*t425*t764*t2886;
  t2912 = t2907 + t2910;
  t2918 = -1.*t919*t2900;
  t2919 = t907*t2912;
  t2921 = t2918 + t2919;
  t2930 = t907*t2900;
  t2931 = t919*t2912;
  t2932 = t2930 + t2931;
  t2936 = t1049*t2921;
  t2937 = t1037*t2932;
  t2938 = t2936 + t2937;
  t2941 = t1037*t2921;
  t2942 = -1.*t1049*t2932;
  t2943 = t2941 + t2942;
  t2948 = -1.*t1165*t2938;
  t2950 = t1144*t2943;
  t2951 = t2948 + t2950;
  t2959 = t1144*t2938;
  t2964 = t1165*t2943;
  t2965 = t2959 + t2964;
  t2993 = t195*t487;
  t2996 = -1.*t560*t185*t533;
  t2997 = t2993 + t2996;
  t3000 = -1.*t185*t480*t425;
  t3001 = t345*t2997;
  t3005 = t3000 + t3001;
  t3019 = -1.*t907*t764*t3005;
  t3025 = -1.*t722*t919*t3005;
  t3027 = t3019 + t3025;
  t3031 = t722*t907*t3005;
  t3032 = -1.*t764*t919*t3005;
  t3035 = t3031 + t3032;
  t3039 = t1049*t3027;
  t3040 = t1037*t3035;
  t3041 = t3039 + t3040;
  t3044 = t1037*t3027;
  t3047 = -1.*t1049*t3035;
  t3052 = t3044 + t3047;
  t3056 = -1.*t1165*t3041;
  t3058 = t1144*t3052;
  t3059 = t3056 + t3058;
  t3064 = t1144*t3041;
  t3066 = t1165*t3052;
  t3067 = t3064 + t3066;
  t2984 = -0.135*t345;
  t2985 = -0.049*t425;
  t2986 = t2984 + t2985;
  t2990 = 0.049*t345;
  t2991 = t2990 + t430;
  t1404 = -1.*t425*t1347;
  t1406 = t345*t1379;
  t1410 = t1404 + t1406;
  t3110 = -1.*t907*t764*t1410;
  t3111 = -1.*t722*t919*t1410;
  t3114 = t3110 + t3111;
  t3116 = t722*t907*t1410;
  t3119 = -1.*t764*t919*t1410;
  t3120 = t3116 + t3119;
  t3129 = t1049*t3114;
  t3130 = t1037*t3120;
  t3132 = t3129 + t3130;
  t3137 = t1037*t3114;
  t3139 = -1.*t1049*t3120;
  t3140 = t3137 + t3139;
  t3145 = -1.*t1165*t3132;
  t3146 = t1144*t3140;
  t3149 = t3145 + t3146;
  t3151 = t1144*t3132;
  t3152 = t1165*t3140;
  t3153 = t3151 + t3152;
  t3173 = -1.*t151*t480*t487;
  t3178 = t503*t533;
  t3179 = t3173 + t3178;
  t3183 = t151*t185*t195;
  t3184 = t560*t2430;
  t3185 = t3183 + t3184;
  t3189 = -1.*t425*t3179;
  t3192 = t345*t3185;
  t3195 = t3189 + t3192;
  t3208 = -1.*t907*t764*t3195;
  t3212 = -1.*t722*t919*t3195;
  t3213 = t3208 + t3212;
  t3216 = t722*t907*t3195;
  t3217 = -1.*t764*t919*t3195;
  t3218 = t3216 + t3217;
  t3221 = t1049*t3213;
  t3224 = t1037*t3218;
  t3225 = t3221 + t3224;
  t3227 = t1037*t3213;
  t3229 = -1.*t1049*t3218;
  t3233 = t3227 + t3229;
  t3237 = -1.*t1165*t3225;
  t3239 = t1144*t3233;
  t3241 = t3237 + t3239;
  t3244 = t1144*t3225;
  t3245 = t1165*t3233;
  t3246 = t3244 + t3245;
  t3280 = t345*t185*t480;
  t3282 = t425*t2997;
  t3283 = t3280 + t3282;
  t3287 = -1.*t764*t2594;
  t3296 = -1.*t722*t3283;
  t3297 = t3287 + t3296;
  t3311 = t722*t2594;
  t3312 = -1.*t764*t3283;
  t3314 = t3311 + t3312;
  t3325 = t919*t3297;
  t3327 = t907*t3314;
  t3331 = t3325 + t3327;
  t3334 = t907*t3297;
  t3335 = -1.*t919*t3314;
  t3337 = t3334 + t3335;
  t3339 = -1.*t1049*t3331;
  t3340 = t1037*t3337;
  t3341 = t3339 + t3340;
  t3344 = t1037*t3331;
  t3347 = t1049*t3337;
  t3349 = t3344 + t3347;
  t3355 = t1165*t3341;
  t3358 = t1144*t3349;
  t3359 = t3355 + t3358;
  t3363 = t1144*t3341;
  t3365 = -1.*t1165*t3349;
  t3366 = t3363 + t3365;
  t3273 = 0.049*t722;
  t3274 = t3273 + t870;
  t3277 = -0.09*t722;
  t3278 = -0.049*t764;
  t3279 = t3277 + t3278;
  t3387 = -1.*t764*t1394;
  t3388 = -1.*t722*t1426;
  t3390 = t3387 + t3388;
  t3393 = t919*t3390;
  t3394 = t3393 + t1475;
  t3399 = t907*t3390;
  t3401 = -1.*t919*t1462;
  t3402 = t3399 + t3401;
  t3413 = -1.*t1049*t3394;
  t3418 = t1037*t3402;
  t3419 = t3413 + t3418;
  t3427 = t1037*t3394;
  t3428 = t1049*t3402;
  t3429 = t3427 + t3428;
  t3434 = t1165*t3419;
  t3438 = t1144*t3429;
  t3441 = t3434 + t3438;
  t3448 = t1144*t3419;
  t3452 = -1.*t1165*t3429;
  t3453 = t3448 + t3452;
  t3473 = t345*t3179;
  t3476 = t425*t3185;
  t3485 = t3473 + t3476;
  t3489 = -1.*t764*t2886;
  t3492 = -1.*t722*t3485;
  t3493 = t3489 + t3492;
  t3497 = t722*t2886;
  t3499 = -1.*t764*t3485;
  t3500 = t3497 + t3499;
  t3506 = t919*t3493;
  t3508 = t907*t3500;
  t3509 = t3506 + t3508;
  t3511 = t907*t3493;
  t3513 = -1.*t919*t3500;
  t3515 = t3511 + t3513;
  t3519 = -1.*t1049*t3509;
  t3520 = t1037*t3515;
  t3525 = t3519 + t3520;
  t3528 = t1037*t3509;
  t3529 = t1049*t3515;
  t3533 = t3528 + t3529;
  t3536 = t1165*t3525;
  t3539 = t1144*t3533;
  t3542 = t3536 + t3539;
  t3545 = t1144*t3525;
  t3549 = -1.*t1165*t3533;
  t3550 = t3545 + t3549;
  t3576 = t764*t2594;
  t3577 = t722*t3283;
  t3579 = t3576 + t3577;
  t3589 = -1.*t919*t3579;
  t3592 = t3589 + t3327;
  t3596 = -1.*t907*t3579;
  t3597 = t3596 + t3335;
  t3603 = -1.*t1049*t3592;
  t3604 = t1037*t3597;
  t3607 = t3603 + t3604;
  t3610 = t1037*t3592;
  t3612 = t1049*t3597;
  t3613 = t3610 + t3612;
  t3617 = t1165*t3607;
  t3619 = t1144*t3613;
  t3620 = t3617 + t3619;
  t3623 = t1144*t3607;
  t3625 = -1.*t1165*t3613;
  t3627 = t3623 + t3625;
  t3570 = -0.21*t907;
  t3571 = -0.049*t919;
  t3575 = t3570 + t3571;
  t3582 = 0.049*t907;
  t3586 = t3582 + t934;
  t3651 = -1.*t907*t1444;
  t3654 = t3651 + t3401;
  t3657 = -1.*t1049*t1489;
  t3660 = t1037*t3654;
  t3662 = t3657 + t3660;
  t3664 = t1049*t3654;
  t3667 = t1519 + t3664;
  t3672 = t1165*t3662;
  t3673 = t1144*t3667;
  t3679 = t3672 + t3673;
  t3685 = t1144*t3662;
  t3686 = -1.*t1165*t3667;
  t3688 = t3685 + t3686;
  t3715 = t764*t2886;
  t3717 = t722*t3485;
  t3718 = t3715 + t3717;
  t3725 = -1.*t919*t3718;
  t3727 = t3725 + t3508;
  t3731 = -1.*t907*t3718;
  t3732 = t3731 + t3513;
  t3738 = -1.*t1049*t3727;
  t3739 = t1037*t3732;
  t3743 = t3738 + t3739;
  t3746 = t1037*t3727;
  t3749 = t1049*t3732;
  t3752 = t3746 + t3749;
  t3755 = t1165*t3743;
  t3758 = t1144*t3752;
  t3759 = t3755 + t3758;
  t3762 = t1144*t3743;
  t3764 = -1.*t1165*t3752;
  t3765 = t3762 + t3764;
  t3800 = t907*t3579;
  t3803 = t919*t3314;
  t3804 = t3800 + t3803;
  t3809 = -1.*t1037*t3804;
  t3812 = t3603 + t3809;
  t3818 = -1.*t1049*t3804;
  t3824 = t3610 + t3818;
  t3826 = t1165*t3812;
  t3827 = t1144*t3824;
  t3828 = t3826 + t3827;
  t3831 = t1144*t3812;
  t3832 = -1.*t1165*t3824;
  t3837 = t3831 + t3832;
  t3788 = 0.00159*t1037;
  t3789 = t3788 + t1080;
  t3795 = -0.27068*t1037;
  t3797 = -0.00159*t1049;
  t3799 = t3795 + t3797;
  t3867 = -1.*t1037*t1504;
  t3872 = t3657 + t3867;
  t3880 = t1165*t3872;
  t3881 = t3880 + t1528;
  t3887 = t1144*t3872;
  t3888 = -1.*t1165*t1523;
  t3890 = t3887 + t3888;
  t3917 = t907*t3718;
  t3921 = t919*t3500;
  t3924 = t3917 + t3921;
  t3929 = -1.*t1037*t3924;
  t3932 = t3738 + t3929;
  t3935 = -1.*t1049*t3924;
  t3937 = t3746 + t3935;
  t3941 = t1165*t3932;
  t3944 = t1144*t3937;
  t3945 = t3941 + t3944;
  t3948 = t1144*t3932;
  t3951 = -1.*t1165*t3937;
  t3952 = t3948 + t3951;
  t3986 = t1049*t3592;
  t3988 = t1037*t3804;
  t3989 = t3986 + t3988;
  t3997 = -1.*t1165*t3989;
  t3999 = t3997 + t3827;
  t4005 = -1.*t1144*t3989;
  t4007 = t4005 + t3832;
  t3983 = -0.70544*t1144;
  t3984 = 0.01841*t1165;
  t3985 = t3983 + t3984;
  t3994 = -0.01841*t1144;
  t3995 = t3994 + t1170;
  t4045 = -1.*t1144*t1514;
  t4047 = t4045 + t3888;
  t1569 = t1226*t1529;
  t4069 = t1049*t3727;
  t4071 = t1037*t3924;
  t4073 = t4069 + t4071;
  t4078 = -1.*t1165*t4073;
  t4081 = t4078 + t3944;
  t4091 = -1.*t1144*t4073;
  t4092 = t4091 + t3951;
  t4011 = -1.*t1239*t3999;
  t4138 = t1144*t3989;
  t4140 = t1165*t3824;
  t4144 = t4138 + t4140;
  t4021 = t1226*t3999;
  t4123 = 0.02159*t1226;
  t4125 = t4123 + t1282;
  t4132 = -1.11344*t1226;
  t4135 = -0.02159*t1239;
  t4136 = t4132 + t4135;
  t4050 = -1.*t1239*t1529;
  t1571 = -1.*t1239*t1535;
  t1575 = t1569 + t1571;
  t4097 = -1.*t1239*t4081;
  t4190 = t1144*t4073;
  t4194 = t1165*t3937;
  t4197 = t4190 + t4194;
  t4105 = t1226*t4081;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t1018*t1031 + t1053*t1070 + t1089*t1119 + t1175*t1182 + t1208*t1224 + t1249*t1263 + t1285*t1296 - 0.014395*(t1239*t1263 + t1226*t1296) - 1.184683*(t1226*t1263 - 1.*t1239*t1296) - 1.*t151*t185*t260 + t465*t540 + t586*t612 + t680*t699 - 0.1305*(-1.*t425*t540 + t345*t699) + t807*t848 + t891*t896 + t943*t994;
  p_output1[11]=-0.1305*t1410 + t1018*t1462 + t1053*t1489 + t1089*t1504 + t1175*t1514 + t1208*t1523 + t1249*t1529 + t1285*t1535 - 0.014395*(t1239*t1529 + t1226*t1535) - 1.184683*t1575 + t1347*t465 - 1.*t185*t260*t503 + t1369*t586 + t1379*t680 + t1394*t807 + t1426*t891 + t1444*t943;
  p_output1[12]=t1018*t1639 + t1053*t1647 + t1089*t1662 + t1175*t1670 + t1208*t1679 + t1249*t1685 + t1285*t1692 - 0.014395*(t1239*t1685 + t1226*t1692) - 1.184683*(t1226*t1685 - 1.*t1239*t1692) + t185*t260 - 1.*t465*t480*t487 - 0.1305*(t1605*t345 + t425*t480*t487) + t487*t533*t586 + t1605*t680 + t1617*t807 + t1628*t891 + t1633*t943;
  p_output1[13]=t1018*t1774 + t1053*t1786 + t1089*t1792 + t1175*t1807 + t1208*t1816 + t1249*t1831 + t1285*t1840 - 0.014395*(t1239*t1831 + t1226*t1840) - 1.184683*(t1226*t1831 - 1.*t1239*t1840) + t185*t465*t480*t503 + t260*t487*t503 - 0.1305*(t1722*t345 - 1.*t185*t425*t480*t503) - 1.*t185*t503*t533*t586 + t1722*t680 + t1727*t807 + t1748*t891 + t1760*t943;
  p_output1[14]=t1018*t1935 + t1053*t1949 + t1089*t1967 + t1175*t1979 + t1208*t1991 + t1249*t2016 + t1285*t2033 - 0.014395*(t1239*t2016 + t1226*t2033) - 1.184683*(t1226*t2016 - 1.*t1239*t2033) - 1.*t151*t185*t465*t480 - 0.1305*(t1874*t345 + t151*t185*t425*t480) - 1.*t151*t260*t487 + t151*t185*t533*t586 + t1874*t680 + t1892*t807 + t1913*t891 + t1918*t943;
  p_output1[15]=t1018*t2146 + t1053*t2155 + t1089*t2172 + t1175*t2181 + t1208*t2189 + t1249*t2203 + t1285*t2209 - 0.014395*(t1239*t2203 + t1226*t2209) - 1.184683*(t1226*t2203 - 1.*t1239*t2209) - 1.*t185*t465*t533 - 0.1305*(t185*t425*t533 - 1.*t185*t345*t480*t560) - 1.*t185*t480*t586 - 1.*t185*t480*t560*t680 + t185*t195*t480*t807 + t2066*t891 + t2103*t943;
  p_output1[16]=t1018*t2313 + t1053*t2322 + t1089*t2338 + t1175*t2344 + t1208*t2358 + t1249*t2369 + t1285*t2379 - 0.014395*(t1239*t2369 + t1226*t2379) - 1.184683*(t1226*t2369 - 1.*t1239*t2379) + t1369*t465 - 0.1305*(-1.*t1369*t425 + t2260*t345*t560) + t2260*t586 + t2260*t560*t680 - 1.*t195*t2260*t807 + t2280*t891 + t2302*t943;
  p_output1[17]=t1018*t2474 + t1053*t2481 + t1089*t2490 + t1175*t2500 + t1208*t2518 + t1249*t2531 + t1285*t2549 - 0.014395*(t1239*t2531 + t1226*t2549) - 1.184683*(t1226*t2531 - 1.*t1239*t2549) + t2430*t465 - 0.1305*(-1.*t2430*t425 + t345*t540*t560) + t540*t586 + t540*t560*t680 - 1.*t195*t540*t807 + t2445*t891 + t2469*t943;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=t1018*t2622 + t1053*t2638 + t1089*t2643 + t1175*t2649 + t1208*t2656 + t1249*t2671 + t1285*t2683 - 0.014395*(t1239*t2671 + t1226*t2683) - 1.184683*(t1226*t2671 - 1.*t1239*t2683) - 0.1305*t2594*t345 + 0.135*t185*t195*t533 + 0.135*t487*t560 + t2594*t680 + t2589*t807 + t2594*t425*t891 + t2611*t943;
  p_output1[43]=-0.135*t1369*t195 + t1018*t2755 + t1053*t2776 + t1089*t2784 + t1175*t2796 + t1208*t2809 + t1249*t2825 + t1285*t2851 - 0.014395*(t1239*t2825 + t1226*t2851) - 1.184683*(t1226*t2825 - 1.*t1239*t2851) - 0.1305*t1394*t345 - 0.135*t185*t503*t560 + t1394*t680 + t2730*t807 + t1394*t425*t891 + t2748*t943;
  p_output1[44]=-0.135*t195*t2430 + t1018*t2912 + t1053*t2921 + t1089*t2932 + t1175*t2938 + t1208*t2943 + t1249*t2951 + t1285*t2965 - 0.014395*(t1239*t2951 + t1226*t2965) - 1.184683*(t1226*t2951 - 1.*t1239*t2965) - 0.1305*t2886*t345 + 0.135*t151*t185*t560 + t2886*t680 + t2877*t807 + t2886*t425*t891 + t2900*t943;
  p_output1[45]=t2991*t2997 + t1053*t3027 + t1089*t3035 + t1175*t3041 + t1208*t3052 + t1249*t3059 + t1285*t3067 - 0.014395*(t1239*t3059 + t1226*t3067) - 1.184683*(t1226*t3059 - 1.*t1239*t3067) + t185*t2986*t480 - 0.1305*(-1.*t2997*t425 - 1.*t185*t345*t480) - 1.*t1018*t3005*t764 + t3005*t891 + t3005*t722*t943;
  p_output1[46]=t1347*t2986 + t1379*t2991 + t1053*t3114 + t1089*t3120 + t1175*t3132 + t1208*t3140 + t1249*t3149 + t1285*t3153 - 0.014395*(t1239*t3149 + t1226*t3153) - 1.184683*(t1226*t3149 - 1.*t1239*t3153) - 0.1305*(-1.*t1347*t345 - 1.*t1379*t425) - 1.*t1018*t1410*t764 + t1410*t891 + t1410*t722*t943;
  p_output1[47]=t2986*t3179 + t2991*t3185 + t1053*t3213 + t1089*t3218 + t1175*t3225 + t1208*t3233 + t1249*t3241 + t1285*t3246 - 0.014395*(t1239*t3241 + t1226*t3246) - 1.184683*(t1226*t3241 - 1.*t1239*t3246) - 0.1305*(-1.*t3179*t345 - 1.*t3185*t425) - 1.*t1018*t3195*t764 + t3195*t891 + t3195*t722*t943;
  p_output1[48]=t2594*t3274 + t3279*t3283 + t1018*t3297 + t1089*t3331 + t1053*t3337 + t1208*t3341 + t1175*t3349 + t1285*t3359 + t1249*t3366 - 1.184683*(-1.*t1239*t3359 + t1226*t3366) - 0.014395*(t1226*t3359 + t1239*t3366) + t3314*t943;
  p_output1[49]=t1394*t3274 + t1426*t3279 + t1018*t3390 + t1089*t3394 + t1053*t3402 + t1208*t3419 + t1175*t3429 + t1285*t3441 + t1249*t3453 - 1.184683*(-1.*t1239*t3441 + t1226*t3453) - 0.014395*(t1226*t3441 + t1239*t3453) + t1462*t943;
  p_output1[50]=t2886*t3274 + t3279*t3485 + t1018*t3493 + t1089*t3509 + t1053*t3515 + t1208*t3525 + t1175*t3533 + t1285*t3542 + t1249*t3550 - 1.184683*(-1.*t1239*t3542 + t1226*t3550) - 0.014395*(t1226*t3542 + t1239*t3550) + t3500*t943;
  p_output1[51]=t3575*t3579 + t3314*t3586 + t1089*t3592 + t1053*t3597 + t1208*t3607 + t1175*t3613 + t1285*t3620 + t1249*t3627 - 1.184683*(-1.*t1239*t3620 + t1226*t3627) - 0.014395*(t1226*t3620 + t1239*t3627);
  p_output1[52]=t1089*t1489 + t1444*t3575 + t1462*t3586 + t1053*t3654 + t1208*t3662 + t1175*t3667 + t1285*t3679 + t1249*t3688 - 1.184683*(-1.*t1239*t3679 + t1226*t3688) - 0.014395*(t1226*t3679 + t1239*t3688);
  p_output1[53]=t3500*t3586 + t3575*t3718 + t1089*t3727 + t1053*t3732 + t1208*t3743 + t1175*t3752 + t1285*t3759 + t1249*t3765 - 1.184683*(-1.*t1239*t3759 + t1226*t3765) - 0.014395*(t1226*t3759 + t1239*t3765);
  p_output1[54]=t3592*t3789 + t3799*t3804 + t1208*t3812 + t1175*t3824 + t1285*t3828 + t1249*t3837 - 1.184683*(-1.*t1239*t3828 + t1226*t3837) - 0.014395*(t1226*t3828 + t1239*t3837);
  p_output1[55]=t1175*t1523 + t1489*t3789 + t1504*t3799 + t1208*t3872 + t1285*t3881 + t1249*t3890 - 1.184683*(-1.*t1239*t3881 + t1226*t3890) - 0.014395*(t1226*t3881 + t1239*t3890);
  p_output1[56]=t3727*t3789 + t3799*t3924 + t1208*t3932 + t1175*t3937 + t1285*t3945 + t1249*t3952 - 1.184683*(-1.*t1239*t3945 + t1226*t3952) - 0.014395*(t1226*t3945 + t1239*t3952);
  p_output1[57]=t3985*t3989 + t3824*t3995 + t1285*t3999 + t1249*t4007 - 1.184683*(t1226*t4007 + t4011) - 0.014395*(t1239*t4007 + t4021);
  p_output1[58]=t1285*t1529 + t1514*t3985 + t1523*t3995 + t1249*t4047 - 0.014395*(t1569 + t1239*t4047) - 1.184683*(t1226*t4047 + t4050);
  p_output1[59]=t3937*t3995 + t3985*t4073 + t1285*t4081 + t1249*t4092 - 1.184683*(t1226*t4092 + t4097) - 0.014395*(t1239*t4092 + t4105);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t3999*t4125 + t4136*t4144 - 1.184683*(t4011 - 1.*t1226*t4144) - 0.014395*(t4021 - 1.*t1239*t4144);
  p_output1[64]=-0.014395*t1575 - 1.184683*(-1.*t1226*t1535 + t4050) + t1529*t4125 + t1535*t4136;
  p_output1[65]=t4081*t4125 + t4136*t4197 - 1.184683*(t4097 - 1.*t1226*t4197) - 0.014395*(t4105 - 1.*t1239*t4197);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightHeel_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




