/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:34 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftHeel_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t884;
  double t341;
  double t783;
  double t830;
  double t835;
  double t887;
  double t962;
  double t1037;
  double t1043;
  double t1106;
  double t1171;
  double t1441;
  double t1443;
  double t1459;
  double t1484;
  double t1287;
  double t1289;
  double t1394;
  double t1719;
  double t1721;
  double t1743;
  double t2319;
  double t2352;
  double t2386;
  double t2418;
  double t2292;
  double t2310;
  double t2311;
  double t2539;
  double t2559;
  double t2590;
  double t2960;
  double t2983;
  double t3003;
  double t3038;
  double t3132;
  double t3152;
  double t3154;
  double t3229;
  double t3268;
  double t3301;
  double t3331;
  double t3338;
  double t3341;
  double t3383;
  double t3387;
  double t3394;
  double t3406;
  double t3491;
  double t3502;
  double t3512;
  double t3572;
  double t3573;
  double t3591;
  double t3599;
  double t3619;
  double t3622;
  double t3624;
  double t3639;
  double t3671;
  double t3672;
  double t3689;
  double t3701;
  double t3710;
  double t3723;
  double t3728;
  double t3731;
  double t3732;
  double t3755;
  double t3758;
  double t3760;
  double t369;
  double t465;
  double t524;
  double t574;
  double t1186;
  double t1188;
  double t3799;
  double t3800;
  double t3801;
  double t1468;
  double t1595;
  double t1650;
  double t1876;
  double t1919;
  double t2026;
  double t3817;
  double t3819;
  double t3821;
  double t3835;
  double t3842;
  double t3846;
  double t2396;
  double t2463;
  double t2476;
  double t2652;
  double t2732;
  double t2763;
  double t3024;
  double t3103;
  double t3109;
  double t3858;
  double t3860;
  double t3862;
  double t3864;
  double t3865;
  double t3869;
  double t3177;
  double t3216;
  double t3228;
  double t3364;
  double t3385;
  double t3386;
  double t3877;
  double t3878;
  double t3882;
  double t3890;
  double t3891;
  double t3892;
  double t3463;
  double t3485;
  double t3490;
  double t3594;
  double t3609;
  double t3615;
  double t3897;
  double t3914;
  double t3918;
  double t3921;
  double t3925;
  double t3928;
  double t3626;
  double t3630;
  double t3633;
  double t3721;
  double t3724;
  double t3725;
  double t3931;
  double t3940;
  double t3942;
  double t3944;
  double t3945;
  double t3946;
  double t3737;
  double t3738;
  double t3751;
  double t3948;
  double t3951;
  double t3952;
  double t3954;
  double t3955;
  double t3956;
  double t3976;
  double t3977;
  double t3978;
  double t3995;
  double t3996;
  double t3997;
  double t3999;
  double t4006;
  double t4010;
  double t4012;
  double t4013;
  double t4015;
  double t4017;
  double t4018;
  double t4019;
  double t4022;
  double t4023;
  double t4024;
  double t4048;
  double t4050;
  double t4051;
  double t4057;
  double t4058;
  double t4060;
  double t4064;
  double t4067;
  double t4068;
  double t4075;
  double t4078;
  double t4079;
  double t4086;
  double t4090;
  double t4093;
  double t4127;
  double t4128;
  double t4130;
  double t4142;
  double t4143;
  double t4146;
  double t4154;
  double t4160;
  double t4161;
  double t4168;
  double t4169;
  double t4171;
  double t4187;
  double t4189;
  double t4192;
  double t4196;
  double t4199;
  double t4200;
  double t4205;
  double t4208;
  double t4211;
  double t4219;
  double t4220;
  double t4221;
  double t4223;
  double t4225;
  double t4227;
  double t4229;
  double t4232;
  double t4233;
  double t4244;
  double t4247;
  double t4248;
  double t4302;
  double t4304;
  double t4306;
  double t4345;
  double t4348;
  double t4350;
  double t4352;
  double t4353;
  double t4354;
  double t4360;
  double t4361;
  double t4362;
  double t4364;
  double t4365;
  double t4370;
  double t4372;
  double t4373;
  double t4374;
  double t4380;
  double t4385;
  double t4386;
  double t4388;
  double t4390;
  double t4391;
  double t4393;
  double t4395;
  double t4396;
  double t4403;
  double t4404;
  double t4406;
  double t4409;
  double t4414;
  double t4415;
  double t4452;
  double t4459;
  double t4462;
  double t4468;
  double t4470;
  double t4471;
  double t4476;
  double t4478;
  double t4479;
  double t4484;
  double t4485;
  double t4488;
  double t4490;
  double t4491;
  double t4492;
  double t4494;
  double t4495;
  double t4496;
  double t4501;
  double t4502;
  double t4505;
  double t4507;
  double t4512;
  double t4513;
  double t4517;
  double t4519;
  double t4526;
  double t4562;
  double t4564;
  double t4565;
  double t4583;
  double t4584;
  double t4585;
  double t4588;
  double t4590;
  double t4592;
  double t4595;
  double t4597;
  double t4598;
  double t4600;
  double t4601;
  double t4603;
  double t4608;
  double t4610;
  double t4613;
  double t4622;
  double t4623;
  double t4627;
  double t4631;
  double t4632;
  double t4633;
  double t4638;
  double t4641;
  double t4646;
  double t4649;
  double t4654;
  double t4655;
  double t4706;
  double t4707;
  double t4708;
  double t4753;
  double t4755;
  double t4760;
  double t4767;
  double t4770;
  double t4772;
  double t4774;
  double t4780;
  double t4784;
  double t4798;
  double t4801;
  double t4802;
  double t4804;
  double t4807;
  double t4808;
  double t4810;
  double t4812;
  double t4815;
  double t4821;
  double t4822;
  double t4825;
  double t4827;
  double t4828;
  double t4834;
  double t4842;
  double t4846;
  double t4848;
  double t4878;
  double t4879;
  double t4882;
  double t4947;
  double t4954;
  double t4958;
  double t4966;
  double t4970;
  double t4971;
  double t4978;
  double t4983;
  double t4989;
  double t4992;
  double t4993;
  double t4997;
  double t5003;
  double t5006;
  double t5009;
  double t5011;
  double t5014;
  double t5015;
  double t5019;
  double t5030;
  double t5033;
  double t5036;
  double t5037;
  double t5039;
  double t5043;
  double t5044;
  double t5045;
  double t5143;
  double t5254;
  double t5263;
  double t5293;
  double t5338;
  double t5408;
  double t5465;
  double t5480;
  double t5486;
  double t5530;
  double t5554;
  double t5585;
  double t5665;
  double t5784;
  double t5786;
  double t5849;
  double t5857;
  double t5864;
  double t5895;
  double t5936;
  double t5941;
  double t5972;
  double t5982;
  double t5997;
  double t6115;
  double t6246;
  double t6303;
  double t6549;
  double t6551;
  double t6558;
  double t6691;
  double t6718;
  double t6779;
  double t6809;
  double t6812;
  double t6856;
  double t6858;
  double t6863;
  double t6865;
  double t6869;
  double t6887;
  double t6932;
  double t6940;
  double t6959;
  double t6999;
  double t7017;
  double t7018;
  double t7041;
  double t7059;
  double t7076;
  double t7107;
  double t7108;
  double t7114;
  double t7129;
  double t7130;
  double t7139;
  double t7301;
  double t7313;
  double t7327;
  double t7343;
  double t7352;
  double t7360;
  double t7438;
  double t7439;
  double t7441;
  double t7446;
  double t7447;
  double t7448;
  double t7464;
  double t7515;
  double t7561;
  double t7605;
  double t7619;
  double t7627;
  double t7690;
  double t7695;
  double t7722;
  double t7759;
  double t7760;
  double t7769;
  double t7263;
  double t7272;
  double t7282;
  double t7336;
  double t7338;
  double t3850;
  double t3851;
  double t3852;
  double t7961;
  double t7973;
  double t7974;
  double t7980;
  double t7985;
  double t7986;
  double t8002;
  double t8006;
  double t8007;
  double t8013;
  double t8026;
  double t8049;
  double t8056;
  double t8058;
  double t8062;
  double t8069;
  double t8091;
  double t8101;
  double t8207;
  double t8211;
  double t8212;
  double t8189;
  double t8190;
  double t8204;
  double t8216;
  double t8224;
  double t8228;
  double t8254;
  double t8255;
  double t8256;
  double t8274;
  double t8283;
  double t8287;
  double t8289;
  double t8294;
  double t8309;
  double t8316;
  double t8318;
  double t8320;
  double t8330;
  double t8335;
  double t8350;
  double t8361;
  double t8363;
  double t8373;
  double t8458;
  double t8460;
  double t8463;
  double t8487;
  double t8493;
  double t8503;
  double t8526;
  double t8529;
  double t8531;
  double t8539;
  double t8544;
  double t8547;
  double t8552;
  double t8553;
  double t8558;
  double t8562;
  double t8566;
  double t8569;
  double t8573;
  double t8600;
  double t8601;
  double t8610;
  double t8611;
  double t8615;
  double t8622;
  double t8624;
  double t8625;
  double t8450;
  double t8454;
  double t8468;
  double t8471;
  double t8472;
  double t8678;
  double t8681;
  double t8682;
  double t8691;
  double t8696;
  double t8703;
  double t8704;
  double t8708;
  double t8716;
  double t8720;
  double t8722;
  double t8724;
  double t8725;
  double t8727;
  double t8730;
  double t8731;
  double t8733;
  double t8736;
  double t8738;
  double t8739;
  double t8767;
  double t8768;
  double t8773;
  double t8778;
  double t8783;
  double t8785;
  double t8788;
  double t8791;
  double t8792;
  double t8797;
  double t8799;
  double t8802;
  double t8805;
  double t8806;
  double t8808;
  double t8811;
  double t8818;
  double t8819;
  double t8821;
  double t8822;
  double t8823;
  double t8826;
  double t8827;
  double t8829;
  double t8833;
  double t8834;
  double t8835;
  double t8881;
  double t8886;
  double t8887;
  double t8909;
  double t8910;
  double t8921;
  double t8922;
  double t8925;
  double t8930;
  double t8932;
  double t8937;
  double t8939;
  double t8940;
  double t8946;
  double t8950;
  double t8951;
  double t8954;
  double t8958;
  double t8960;
  double t8861;
  double t8863;
  double t8865;
  double t8889;
  double t8892;
  double t9000;
  double t9003;
  double t9005;
  double t9006;
  double t9007;
  double t9012;
  double t9015;
  double t9023;
  double t9030;
  double t9032;
  double t9038;
  double t9041;
  double t9043;
  double t9083;
  double t9087;
  double t9090;
  double t9095;
  double t9096;
  double t9104;
  double t9107;
  double t9113;
  double t9114;
  double t9118;
  double t9120;
  double t9124;
  double t9125;
  double t9133;
  double t9138;
  double t9139;
  double t9143;
  double t9147;
  double t9153;
  double t9204;
  double t9205;
  double t9206;
  double t9210;
  double t9212;
  double t9214;
  double t9216;
  double t9219;
  double t9221;
  double t9222;
  double t9226;
  double t9228;
  double t9230;
  double t9188;
  double t9191;
  double t9197;
  double t9200;
  double t9201;
  double t9256;
  double t9260;
  double t9267;
  double t9268;
  double t9273;
  double t9276;
  double t9278;
  double t9315;
  double t9317;
  double t9319;
  double t9324;
  double t9326;
  double t9333;
  double t9339;
  double t9344;
  double t9346;
  double t9347;
  double t9353;
  double t9360;
  double t9363;
  double t9386;
  double t9395;
  double t9408;
  double t9443;
  double t9445;
  double t9451;
  double t9452;
  double t9381;
  double t9382;
  double t9385;
  double t9436;
  double t9437;
  double t9488;
  double t9489;
  double t3966;
  double t9516;
  double t9518;
  double t9519;
  double t9526;
  double t9527;
  double t9536;
  double t9538;
  double t9457;
  double t9590;
  double t9594;
  double t9595;
  double t9468;
  double t9565;
  double t9571;
  double t9584;
  double t9587;
  double t9588;
  double t9491;
  double t3967;
  double t3968;
  double t9544;
  double t9632;
  double t9634;
  double t9635;
  double t9550;
  t884 = Cos(var1[3]);
  t341 = Cos(var1[6]);
  t783 = Cos(var1[5]);
  t830 = Sin(var1[3]);
  t835 = -1.*t783*t830;
  t887 = Sin(var1[4]);
  t962 = Sin(var1[5]);
  t1037 = -1.*t884*t887*t962;
  t1043 = t835 + t1037;
  t1106 = Cos(var1[4]);
  t1171 = Sin(var1[6]);
  t1441 = Cos(var1[7]);
  t1443 = -1.*t1441;
  t1459 = 1. + t1443;
  t1484 = Sin(var1[7]);
  t1287 = t341*t1043;
  t1289 = -1.*t884*t1106*t1171;
  t1394 = t1287 + t1289;
  t1719 = t884*t783*t887;
  t1721 = -1.*t830*t962;
  t1743 = t1719 + t1721;
  t2319 = Cos(var1[8]);
  t2352 = -1.*t2319;
  t2386 = 1. + t2352;
  t2418 = Sin(var1[8]);
  t2292 = t1441*t1743;
  t2310 = t1394*t1484;
  t2311 = t2292 + t2310;
  t2539 = -1.*t884*t1106*t341;
  t2559 = -1.*t1043*t1171;
  t2590 = t2539 + t2559;
  t2960 = Cos(var1[9]);
  t2983 = -1.*t2960;
  t3003 = 1. + t2983;
  t3038 = Sin(var1[9]);
  t3132 = t2319*t2311;
  t3152 = t2590*t2418;
  t3154 = t3132 + t3152;
  t3229 = t2319*t2590;
  t3268 = -1.*t2311*t2418;
  t3301 = t3229 + t3268;
  t3331 = Cos(var1[10]);
  t3338 = -1.*t3331;
  t3341 = 1. + t3338;
  t3383 = Sin(var1[10]);
  t3387 = -1.*t3038*t3154;
  t3394 = t2960*t3301;
  t3406 = t3387 + t3394;
  t3491 = t2960*t3154;
  t3502 = t3038*t3301;
  t3512 = t3491 + t3502;
  t3572 = Cos(var1[11]);
  t3573 = -1.*t3572;
  t3591 = 1. + t3573;
  t3599 = Sin(var1[11]);
  t3619 = t3383*t3406;
  t3622 = t3331*t3512;
  t3624 = t3619 + t3622;
  t3639 = t3331*t3406;
  t3671 = -1.*t3383*t3512;
  t3672 = t3639 + t3671;
  t3689 = Cos(var1[13]);
  t3701 = -1.*t3689;
  t3710 = 1. + t3701;
  t3723 = Sin(var1[13]);
  t3728 = -1.*t3599*t3624;
  t3731 = t3572*t3672;
  t3732 = t3728 + t3731;
  t3755 = t3572*t3624;
  t3758 = t3599*t3672;
  t3760 = t3755 + t3758;
  t369 = -1.*t341;
  t465 = 1. + t369;
  t524 = 0.135*t465;
  t574 = 0. + t524;
  t1186 = -0.135*t1171;
  t1188 = 0. + t1186;
  t3799 = t884*t783;
  t3800 = -1.*t830*t887*t962;
  t3801 = t3799 + t3800;
  t1468 = 0.135*t1459;
  t1595 = 0.049*t1484;
  t1650 = 0. + t1468 + t1595;
  t1876 = -0.049*t1459;
  t1919 = 0.135*t1484;
  t2026 = 0. + t1876 + t1919;
  t3817 = t341*t3801;
  t3819 = -1.*t1106*t830*t1171;
  t3821 = t3817 + t3819;
  t3835 = t783*t830*t887;
  t3842 = t884*t962;
  t3846 = t3835 + t3842;
  t2396 = -0.049*t2386;
  t2463 = -0.09*t2418;
  t2476 = 0. + t2396 + t2463;
  t2652 = -0.09*t2386;
  t2732 = 0.049*t2418;
  t2763 = 0. + t2652 + t2732;
  t3024 = -0.049*t3003;
  t3103 = -0.21*t3038;
  t3109 = 0. + t3024 + t3103;
  t3858 = t1441*t3846;
  t3860 = t3821*t1484;
  t3862 = t3858 + t3860;
  t3864 = -1.*t1106*t341*t830;
  t3865 = -1.*t3801*t1171;
  t3869 = t3864 + t3865;
  t3177 = -0.21*t3003;
  t3216 = 0.049*t3038;
  t3228 = 0. + t3177 + t3216;
  t3364 = -0.27068*t3341;
  t3385 = 0.00159*t3383;
  t3386 = 0. + t3364 + t3385;
  t3877 = t2319*t3862;
  t3878 = t3869*t2418;
  t3882 = t3877 + t3878;
  t3890 = t2319*t3869;
  t3891 = -1.*t3862*t2418;
  t3892 = t3890 + t3891;
  t3463 = -0.00159*t3341;
  t3485 = -0.27068*t3383;
  t3490 = 0. + t3463 + t3485;
  t3594 = 0.01841*t3591;
  t3609 = -0.70544*t3599;
  t3615 = 0. + t3594 + t3609;
  t3897 = -1.*t3038*t3882;
  t3914 = t2960*t3892;
  t3918 = t3897 + t3914;
  t3921 = t2960*t3882;
  t3925 = t3038*t3892;
  t3928 = t3921 + t3925;
  t3626 = -0.70544*t3591;
  t3630 = -0.01841*t3599;
  t3633 = 0. + t3626 + t3630;
  t3721 = -1.11344*t3710;
  t3724 = 0.02159*t3723;
  t3725 = 0. + t3721 + t3724;
  t3931 = t3383*t3918;
  t3940 = t3331*t3928;
  t3942 = t3931 + t3940;
  t3944 = t3331*t3918;
  t3945 = -1.*t3383*t3928;
  t3946 = t3944 + t3945;
  t3737 = -0.02159*t3710;
  t3738 = -1.11344*t3723;
  t3751 = 0. + t3737 + t3738;
  t3948 = -1.*t3599*t3942;
  t3951 = t3572*t3946;
  t3952 = t3948 + t3951;
  t3954 = t3572*t3942;
  t3955 = t3599*t3946;
  t3956 = t3954 + t3955;
  t3976 = t341*t887*t962;
  t3977 = t1106*t1171;
  t3978 = t3976 + t3977;
  t3995 = -1.*t783*t1441*t887;
  t3996 = t3978*t1484;
  t3997 = t3995 + t3996;
  t3999 = t1106*t341;
  t4006 = -1.*t887*t962*t1171;
  t4010 = t3999 + t4006;
  t4012 = t2319*t3997;
  t4013 = t4010*t2418;
  t4015 = t4012 + t4013;
  t4017 = t2319*t4010;
  t4018 = -1.*t3997*t2418;
  t4019 = t4017 + t4018;
  t4022 = -1.*t3038*t4015;
  t4023 = t2960*t4019;
  t4024 = t4022 + t4023;
  t4048 = t2960*t4015;
  t4050 = t3038*t4019;
  t4051 = t4048 + t4050;
  t4057 = t3383*t4024;
  t4058 = t3331*t4051;
  t4060 = t4057 + t4058;
  t4064 = t3331*t4024;
  t4067 = -1.*t3383*t4051;
  t4068 = t4064 + t4067;
  t4075 = -1.*t3599*t4060;
  t4078 = t3572*t4068;
  t4079 = t4075 + t4078;
  t4086 = t3572*t4060;
  t4090 = t3599*t4068;
  t4093 = t4086 + t4090;
  t4127 = -1.*t1106*t341*t830*t962;
  t4128 = t830*t887*t1171;
  t4130 = t4127 + t4128;
  t4142 = t1106*t783*t1441*t830;
  t4143 = t4130*t1484;
  t4146 = t4142 + t4143;
  t4154 = t341*t830*t887;
  t4160 = t1106*t830*t962*t1171;
  t4161 = t4154 + t4160;
  t4168 = t2319*t4146;
  t4169 = t4161*t2418;
  t4171 = t4168 + t4169;
  t4187 = t2319*t4161;
  t4189 = -1.*t4146*t2418;
  t4192 = t4187 + t4189;
  t4196 = -1.*t3038*t4171;
  t4199 = t2960*t4192;
  t4200 = t4196 + t4199;
  t4205 = t2960*t4171;
  t4208 = t3038*t4192;
  t4211 = t4205 + t4208;
  t4219 = t3383*t4200;
  t4220 = t3331*t4211;
  t4221 = t4219 + t4220;
  t4223 = t3331*t4200;
  t4225 = -1.*t3383*t4211;
  t4227 = t4223 + t4225;
  t4229 = -1.*t3599*t4221;
  t4232 = t3572*t4227;
  t4233 = t4229 + t4232;
  t4244 = t3572*t4221;
  t4247 = t3599*t4227;
  t4248 = t4244 + t4247;
  t4302 = t884*t1106*t341*t962;
  t4304 = -1.*t884*t887*t1171;
  t4306 = t4302 + t4304;
  t4345 = -1.*t884*t1106*t783*t1441;
  t4348 = t4306*t1484;
  t4350 = t4345 + t4348;
  t4352 = -1.*t884*t341*t887;
  t4353 = -1.*t884*t1106*t962*t1171;
  t4354 = t4352 + t4353;
  t4360 = t2319*t4350;
  t4361 = t4354*t2418;
  t4362 = t4360 + t4361;
  t4364 = t2319*t4354;
  t4365 = -1.*t4350*t2418;
  t4370 = t4364 + t4365;
  t4372 = -1.*t3038*t4362;
  t4373 = t2960*t4370;
  t4374 = t4372 + t4373;
  t4380 = t2960*t4362;
  t4385 = t3038*t4370;
  t4386 = t4380 + t4385;
  t4388 = t3383*t4374;
  t4390 = t3331*t4386;
  t4391 = t4388 + t4390;
  t4393 = t3331*t4374;
  t4395 = -1.*t3383*t4386;
  t4396 = t4393 + t4395;
  t4403 = -1.*t3599*t4391;
  t4404 = t3572*t4396;
  t4406 = t4403 + t4404;
  t4409 = t3572*t4391;
  t4414 = t3599*t4396;
  t4415 = t4409 + t4414;
  t4452 = -1.*t1106*t1441*t962;
  t4459 = -1.*t1106*t783*t341*t1484;
  t4462 = t4452 + t4459;
  t4468 = t2319*t4462;
  t4470 = t1106*t783*t1171*t2418;
  t4471 = t4468 + t4470;
  t4476 = t1106*t783*t2319*t1171;
  t4478 = -1.*t4462*t2418;
  t4479 = t4476 + t4478;
  t4484 = -1.*t3038*t4471;
  t4485 = t2960*t4479;
  t4488 = t4484 + t4485;
  t4490 = t2960*t4471;
  t4491 = t3038*t4479;
  t4492 = t4490 + t4491;
  t4494 = t3383*t4488;
  t4495 = t3331*t4492;
  t4496 = t4494 + t4495;
  t4501 = t3331*t4488;
  t4502 = -1.*t3383*t4492;
  t4505 = t4501 + t4502;
  t4507 = -1.*t3599*t4496;
  t4512 = t3572*t4505;
  t4513 = t4507 + t4512;
  t4517 = t3572*t4496;
  t4519 = t3599*t4505;
  t4526 = t4517 + t4519;
  t4562 = -1.*t783*t830*t887;
  t4564 = -1.*t884*t962;
  t4565 = t4562 + t4564;
  t4583 = t1441*t3801;
  t4584 = t341*t4565*t1484;
  t4585 = t4583 + t4584;
  t4588 = t2319*t4585;
  t4590 = -1.*t4565*t1171*t2418;
  t4592 = t4588 + t4590;
  t4595 = -1.*t2319*t4565*t1171;
  t4597 = -1.*t4585*t2418;
  t4598 = t4595 + t4597;
  t4600 = -1.*t3038*t4592;
  t4601 = t2960*t4598;
  t4603 = t4600 + t4601;
  t4608 = t2960*t4592;
  t4610 = t3038*t4598;
  t4613 = t4608 + t4610;
  t4622 = t3383*t4603;
  t4623 = t3331*t4613;
  t4627 = t4622 + t4623;
  t4631 = t3331*t4603;
  t4632 = -1.*t3383*t4613;
  t4633 = t4631 + t4632;
  t4638 = -1.*t3599*t4627;
  t4641 = t3572*t4633;
  t4646 = t4638 + t4641;
  t4649 = t3572*t4627;
  t4654 = t3599*t4633;
  t4655 = t4649 + t4654;
  t4706 = t783*t830;
  t4707 = t884*t887*t962;
  t4708 = t4706 + t4707;
  t4753 = t1441*t4708;
  t4755 = t341*t1743*t1484;
  t4760 = t4753 + t4755;
  t4767 = t2319*t4760;
  t4770 = -1.*t1743*t1171*t2418;
  t4772 = t4767 + t4770;
  t4774 = -1.*t2319*t1743*t1171;
  t4780 = -1.*t4760*t2418;
  t4784 = t4774 + t4780;
  t4798 = -1.*t3038*t4772;
  t4801 = t2960*t4784;
  t4802 = t4798 + t4801;
  t4804 = t2960*t4772;
  t4807 = t3038*t4784;
  t4808 = t4804 + t4807;
  t4810 = t3383*t4802;
  t4812 = t3331*t4808;
  t4815 = t4810 + t4812;
  t4821 = t3331*t4802;
  t4822 = -1.*t3383*t4808;
  t4825 = t4821 + t4822;
  t4827 = -1.*t3599*t4815;
  t4828 = t3572*t4825;
  t4834 = t4827 + t4828;
  t4842 = t3572*t4815;
  t4846 = t3599*t4825;
  t4848 = t4842 + t4846;
  t4878 = t341*t887;
  t4879 = t1106*t962*t1171;
  t4882 = t4878 + t4879;
  t4947 = t1106*t341*t962;
  t4954 = -1.*t887*t1171;
  t4958 = t4947 + t4954;
  t4966 = t2319*t4882*t1484;
  t4970 = t4958*t2418;
  t4971 = t4966 + t4970;
  t4978 = t2319*t4958;
  t4983 = -1.*t4882*t1484*t2418;
  t4989 = t4978 + t4983;
  t4992 = -1.*t3038*t4971;
  t4993 = t2960*t4989;
  t4997 = t4992 + t4993;
  t5003 = t2960*t4971;
  t5006 = t3038*t4989;
  t5009 = t5003 + t5006;
  t5011 = t3383*t4997;
  t5014 = t3331*t5009;
  t5015 = t5011 + t5014;
  t5019 = t3331*t4997;
  t5030 = -1.*t3383*t5009;
  t5033 = t5019 + t5030;
  t5036 = -1.*t3599*t5015;
  t5037 = t3572*t5033;
  t5039 = t5036 + t5037;
  t5043 = t3572*t5015;
  t5044 = t3599*t5033;
  t5045 = t5043 + t5044;
  t5143 = -1.*t341*t3801;
  t5254 = t1106*t830*t1171;
  t5263 = t5143 + t5254;
  t5293 = t2319*t3869*t1484;
  t5338 = t5263*t2418;
  t5408 = t5293 + t5338;
  t5465 = t2319*t5263;
  t5480 = -1.*t3869*t1484*t2418;
  t5486 = t5465 + t5480;
  t5530 = -1.*t3038*t5408;
  t5554 = t2960*t5486;
  t5585 = t5530 + t5554;
  t5665 = t2960*t5408;
  t5784 = t3038*t5486;
  t5786 = t5665 + t5784;
  t5849 = t3383*t5585;
  t5857 = t3331*t5786;
  t5864 = t5849 + t5857;
  t5895 = t3331*t5585;
  t5936 = -1.*t3383*t5786;
  t5941 = t5895 + t5936;
  t5972 = -1.*t3599*t5864;
  t5982 = t3572*t5941;
  t5997 = t5972 + t5982;
  t6115 = t3572*t5864;
  t6246 = t3599*t5941;
  t6303 = t6115 + t6246;
  t6549 = t884*t1106*t341;
  t6551 = -1.*t4708*t1171;
  t6558 = t6549 + t6551;
  t6691 = -1.*t341*t4708;
  t6718 = t6691 + t1289;
  t6779 = t2319*t6558*t1484;
  t6809 = t6718*t2418;
  t6812 = t6779 + t6809;
  t6856 = t2319*t6718;
  t6858 = -1.*t6558*t1484*t2418;
  t6863 = t6856 + t6858;
  t6865 = -1.*t3038*t6812;
  t6869 = t2960*t6863;
  t6887 = t6865 + t6869;
  t6932 = t2960*t6812;
  t6940 = t3038*t6863;
  t6959 = t6932 + t6940;
  t6999 = t3383*t6887;
  t7017 = t3331*t6959;
  t7018 = t6999 + t7017;
  t7041 = t3331*t6887;
  t7059 = -1.*t3383*t6959;
  t7076 = t7041 + t7059;
  t7107 = -1.*t3599*t7018;
  t7108 = t3572*t7076;
  t7114 = t7107 + t7108;
  t7129 = t3572*t7018;
  t7130 = t3599*t7076;
  t7139 = t7129 + t7130;
  t7301 = -1.*t1106*t341*t962;
  t7313 = t887*t1171;
  t7327 = t7301 + t7313;
  t7343 = t1441*t7327;
  t7352 = -1.*t1106*t783*t1484;
  t7360 = t7343 + t7352;
  t7438 = -1.*t2319*t3038*t7360;
  t7439 = -1.*t2960*t7360*t2418;
  t7441 = t7438 + t7439;
  t7446 = t2960*t2319*t7360;
  t7447 = -1.*t3038*t7360*t2418;
  t7448 = t7446 + t7447;
  t7464 = t3383*t7441;
  t7515 = t3331*t7448;
  t7561 = t7464 + t7515;
  t7605 = t3331*t7441;
  t7619 = -1.*t3383*t7448;
  t7627 = t7605 + t7619;
  t7690 = -1.*t3599*t7561;
  t7695 = t3572*t7627;
  t7722 = t7690 + t7695;
  t7759 = t3572*t7561;
  t7760 = t3599*t7627;
  t7769 = t7759 + t7760;
  t7263 = 0.135*t1441;
  t7272 = -0.049*t1484;
  t7282 = t7263 + t7272;
  t7336 = 0.049*t1441;
  t7338 = t7336 + t1919;
  t3850 = t1441*t3821;
  t3851 = -1.*t3846*t1484;
  t3852 = t3850 + t3851;
  t7961 = -1.*t2319*t3038*t3852;
  t7973 = -1.*t2960*t3852*t2418;
  t7974 = t7961 + t7973;
  t7980 = t2960*t2319*t3852;
  t7985 = -1.*t3038*t3852*t2418;
  t7986 = t7980 + t7985;
  t8002 = t3383*t7974;
  t8006 = t3331*t7986;
  t8007 = t8002 + t8006;
  t8013 = t3331*t7974;
  t8026 = -1.*t3383*t7986;
  t8049 = t8013 + t8026;
  t8056 = -1.*t3599*t8007;
  t8058 = t3572*t8049;
  t8062 = t8056 + t8058;
  t8069 = t3572*t8007;
  t8091 = t3599*t8049;
  t8101 = t8069 + t8091;
  t8207 = t341*t4708;
  t8211 = t884*t1106*t1171;
  t8212 = t8207 + t8211;
  t8189 = -1.*t884*t783*t887;
  t8190 = t830*t962;
  t8204 = t8189 + t8190;
  t8216 = t1441*t8212;
  t8224 = -1.*t8204*t1484;
  t8228 = t8216 + t8224;
  t8254 = -1.*t2319*t3038*t8228;
  t8255 = -1.*t2960*t8228*t2418;
  t8256 = t8254 + t8255;
  t8274 = t2960*t2319*t8228;
  t8283 = -1.*t3038*t8228*t2418;
  t8287 = t8274 + t8283;
  t8289 = t3383*t8256;
  t8294 = t3331*t8287;
  t8309 = t8289 + t8294;
  t8316 = t3331*t8256;
  t8318 = -1.*t3383*t8287;
  t8320 = t8316 + t8318;
  t8330 = -1.*t3599*t8309;
  t8335 = t3572*t8320;
  t8350 = t8330 + t8335;
  t8361 = t3572*t8309;
  t8363 = t3599*t8320;
  t8373 = t8361 + t8363;
  t8458 = t1106*t783*t1441;
  t8460 = t7327*t1484;
  t8463 = t8458 + t8460;
  t8487 = -1.*t2319*t8463;
  t8493 = -1.*t4882*t2418;
  t8503 = t8487 + t8493;
  t8526 = t2319*t4882;
  t8529 = -1.*t8463*t2418;
  t8531 = t8526 + t8529;
  t8539 = t3038*t8503;
  t8544 = t2960*t8531;
  t8547 = t8539 + t8544;
  t8552 = t2960*t8503;
  t8553 = -1.*t3038*t8531;
  t8558 = t8552 + t8553;
  t8562 = -1.*t3383*t8547;
  t8566 = t3331*t8558;
  t8569 = t8562 + t8566;
  t8573 = t3331*t8547;
  t8600 = t3383*t8558;
  t8601 = t8573 + t8600;
  t8610 = t3599*t8569;
  t8611 = t3572*t8601;
  t8615 = t8610 + t8611;
  t8622 = t3572*t8569;
  t8624 = -1.*t3599*t8601;
  t8625 = t8622 + t8624;
  t8450 = 0.049*t2319;
  t8454 = t8450 + t2463;
  t8468 = -0.09*t2319;
  t8471 = -0.049*t2418;
  t8472 = t8468 + t8471;
  t8678 = -1.*t2319*t3862;
  t8681 = -1.*t3869*t2418;
  t8682 = t8678 + t8681;
  t8691 = t3038*t8682;
  t8696 = t8691 + t3914;
  t8703 = t2960*t8682;
  t8704 = -1.*t3038*t3892;
  t8708 = t8703 + t8704;
  t8716 = -1.*t3383*t8696;
  t8720 = t3331*t8708;
  t8722 = t8716 + t8720;
  t8724 = t3331*t8696;
  t8725 = t3383*t8708;
  t8727 = t8724 + t8725;
  t8730 = t3599*t8722;
  t8731 = t3572*t8727;
  t8733 = t8730 + t8731;
  t8736 = t3572*t8722;
  t8738 = -1.*t3599*t8727;
  t8739 = t8736 + t8738;
  t8767 = t1441*t8204;
  t8768 = t8212*t1484;
  t8773 = t8767 + t8768;
  t8778 = -1.*t2319*t8773;
  t8783 = -1.*t6558*t2418;
  t8785 = t8778 + t8783;
  t8788 = t2319*t6558;
  t8791 = -1.*t8773*t2418;
  t8792 = t8788 + t8791;
  t8797 = t3038*t8785;
  t8799 = t2960*t8792;
  t8802 = t8797 + t8799;
  t8805 = t2960*t8785;
  t8806 = -1.*t3038*t8792;
  t8808 = t8805 + t8806;
  t8811 = -1.*t3383*t8802;
  t8818 = t3331*t8808;
  t8819 = t8811 + t8818;
  t8821 = t3331*t8802;
  t8822 = t3383*t8808;
  t8823 = t8821 + t8822;
  t8826 = t3599*t8819;
  t8827 = t3572*t8823;
  t8829 = t8826 + t8827;
  t8833 = t3572*t8819;
  t8834 = -1.*t3599*t8823;
  t8835 = t8833 + t8834;
  t8881 = t2319*t8463;
  t8886 = t4882*t2418;
  t8887 = t8881 + t8886;
  t8909 = -1.*t3038*t8887;
  t8910 = t8909 + t8544;
  t8921 = -1.*t2960*t8887;
  t8922 = t8921 + t8553;
  t8925 = -1.*t3383*t8910;
  t8930 = t3331*t8922;
  t8932 = t8925 + t8930;
  t8937 = t3331*t8910;
  t8939 = t3383*t8922;
  t8940 = t8937 + t8939;
  t8946 = t3599*t8932;
  t8950 = t3572*t8940;
  t8951 = t8946 + t8950;
  t8954 = t3572*t8932;
  t8958 = -1.*t3599*t8940;
  t8960 = t8954 + t8958;
  t8861 = -0.21*t2960;
  t8863 = -0.049*t3038;
  t8865 = t8861 + t8863;
  t8889 = 0.049*t2960;
  t8892 = t8889 + t3103;
  t9000 = -1.*t2960*t3882;
  t9003 = t9000 + t8704;
  t9005 = -1.*t3383*t3918;
  t9006 = t3331*t9003;
  t9007 = t9005 + t9006;
  t9012 = t3383*t9003;
  t9015 = t3944 + t9012;
  t9023 = t3599*t9007;
  t9030 = t3572*t9015;
  t9032 = t9023 + t9030;
  t9038 = t3572*t9007;
  t9041 = -1.*t3599*t9015;
  t9043 = t9038 + t9041;
  t9083 = t2319*t8773;
  t9087 = t6558*t2418;
  t9090 = t9083 + t9087;
  t9095 = -1.*t3038*t9090;
  t9096 = t9095 + t8799;
  t9104 = -1.*t2960*t9090;
  t9107 = t9104 + t8806;
  t9113 = -1.*t3383*t9096;
  t9114 = t3331*t9107;
  t9118 = t9113 + t9114;
  t9120 = t3331*t9096;
  t9124 = t3383*t9107;
  t9125 = t9120 + t9124;
  t9133 = t3599*t9118;
  t9138 = t3572*t9125;
  t9139 = t9133 + t9138;
  t9143 = t3572*t9118;
  t9147 = -1.*t3599*t9125;
  t9153 = t9143 + t9147;
  t9204 = t2960*t8887;
  t9205 = t3038*t8531;
  t9206 = t9204 + t9205;
  t9210 = -1.*t3331*t9206;
  t9212 = t8925 + t9210;
  t9214 = -1.*t3383*t9206;
  t9216 = t8937 + t9214;
  t9219 = t3599*t9212;
  t9221 = t3572*t9216;
  t9222 = t9219 + t9221;
  t9226 = t3572*t9212;
  t9228 = -1.*t3599*t9216;
  t9230 = t9226 + t9228;
  t9188 = 0.00159*t3331;
  t9191 = t9188 + t3485;
  t9197 = -0.27068*t3331;
  t9200 = -0.00159*t3383;
  t9201 = t9197 + t9200;
  t9256 = -1.*t3331*t3928;
  t9260 = t9005 + t9256;
  t9267 = t3599*t9260;
  t9268 = t9267 + t3951;
  t9273 = t3572*t9260;
  t9276 = -1.*t3599*t3946;
  t9278 = t9273 + t9276;
  t9315 = t2960*t9090;
  t9317 = t3038*t8792;
  t9319 = t9315 + t9317;
  t9324 = -1.*t3331*t9319;
  t9326 = t9113 + t9324;
  t9333 = -1.*t3383*t9319;
  t9339 = t9120 + t9333;
  t9344 = t3599*t9326;
  t9346 = t3572*t9339;
  t9347 = t9344 + t9346;
  t9353 = t3572*t9326;
  t9360 = -1.*t3599*t9339;
  t9363 = t9353 + t9360;
  t9386 = t3383*t8910;
  t9395 = t3331*t9206;
  t9408 = t9386 + t9395;
  t9443 = -1.*t3599*t9408;
  t9445 = t9443 + t9221;
  t9451 = -1.*t3572*t9408;
  t9452 = t9451 + t9228;
  t9381 = -0.70544*t3572;
  t9382 = 0.01841*t3599;
  t9385 = t9381 + t9382;
  t9436 = -0.01841*t3572;
  t9437 = t9436 + t3609;
  t9488 = -1.*t3572*t3942;
  t9489 = t9488 + t9276;
  t3966 = t3689*t3952;
  t9516 = t3383*t9096;
  t9518 = t3331*t9319;
  t9519 = t9516 + t9518;
  t9526 = -1.*t3599*t9519;
  t9527 = t9526 + t9346;
  t9536 = -1.*t3572*t9519;
  t9538 = t9536 + t9360;
  t9457 = -1.*t3723*t9445;
  t9590 = t3572*t9408;
  t9594 = t3599*t9216;
  t9595 = t9590 + t9594;
  t9468 = t3689*t9445;
  t9565 = 0.02159*t3689;
  t9571 = t9565 + t3738;
  t9584 = -1.11344*t3689;
  t9587 = -0.02159*t3723;
  t9588 = t9584 + t9587;
  t9491 = -1.*t3723*t3952;
  t3967 = -1.*t3723*t3956;
  t3968 = t3966 + t3967;
  t9544 = -1.*t3723*t9527;
  t9632 = t3572*t9519;
  t9634 = t3599*t9339;
  t9635 = t9632 + t9634;
  t9550 = t3689*t9527;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t1394*t1650 + 0.1305*(t1394*t1441 - 1.*t1484*t1743) + t1743*t2026 + t2311*t2476 + t2590*t2763 + t3109*t3154 + t3228*t3301 + t3386*t3406 + t3490*t3512 + t3615*t3624 + t3633*t3672 + t3725*t3732 + t3751*t3760 - 0.014395*(t3723*t3732 + t3689*t3760) - 1.184683*(t3689*t3732 - 1.*t3723*t3760) + t1043*t574 - 1.*t1106*t1188*t884;
  p_output1[11]=t1650*t3821 + t2026*t3846 + 0.1305*t3852 + t2476*t3862 + t2763*t3869 + t3109*t3882 + t3228*t3892 + t3386*t3918 + t3490*t3928 + t3615*t3942 + t3633*t3946 + t3725*t3952 + t3751*t3956 - 0.014395*(t3723*t3952 + t3689*t3956) - 1.184683*t3968 + t3801*t574 - 1.*t1106*t1188*t830;
  p_output1[12]=t1106*t1188 + t1650*t3978 + t2476*t3997 + t2763*t4010 + t3109*t4015 + t3228*t4019 + t3386*t4024 + t3490*t4051 + t3615*t4060 + t3633*t4068 + t3725*t4079 + t3751*t4093 - 0.014395*(t3723*t4079 + t3689*t4093) - 1.184683*(t3689*t4079 - 1.*t3723*t4093) - 1.*t2026*t783*t887 + 0.1305*(t1441*t3978 + t1484*t783*t887) + t574*t887*t962;
  p_output1[13]=t1650*t4130 + t2476*t4146 + t2763*t4161 + t3109*t4171 + t3228*t4192 + t3386*t4200 + t3490*t4211 + t3615*t4221 + t3633*t4227 + t3725*t4233 + t3751*t4248 - 0.014395*(t3723*t4233 + t3689*t4248) - 1.184683*(t3689*t4233 - 1.*t3723*t4248) + t1106*t2026*t783*t830 + 0.1305*(t1441*t4130 - 1.*t1106*t1484*t783*t830) + t1188*t830*t887 - 1.*t1106*t574*t830*t962;
  p_output1[14]=t1650*t4306 + t2476*t4350 + t2763*t4354 + t3109*t4362 + t3228*t4370 + t3386*t4374 + t3490*t4386 + t3615*t4391 + t3633*t4396 + t3725*t4406 + t3751*t4415 - 0.014395*(t3723*t4406 + t3689*t4415) - 1.184683*(t3689*t4406 - 1.*t3723*t4415) - 1.*t1106*t2026*t783*t884 + 0.1305*(t1441*t4306 + t1106*t1484*t783*t884) - 1.*t1188*t884*t887 + t1106*t574*t884*t962;
  p_output1[15]=t2476*t4462 + t3109*t4471 + t3228*t4479 + t3386*t4488 + t3490*t4492 + t3615*t4496 + t3633*t4505 + t3725*t4513 + t3751*t4526 - 0.014395*(t3723*t4513 + t3689*t4526) - 1.184683*(t3689*t4513 - 1.*t3723*t4526) + t1106*t1171*t2763*t783 - 1.*t1106*t1650*t341*t783 - 1.*t1106*t574*t783 - 1.*t1106*t2026*t962 + 0.1305*(-1.*t1106*t1441*t341*t783 + t1106*t1484*t962);
  p_output1[16]=t2026*t3801 - 1.*t1171*t2763*t4565 + t1650*t341*t4565 + 0.1305*(-1.*t1484*t3801 + t1441*t341*t4565) + t2476*t4585 + t3109*t4592 + t3228*t4598 + t3386*t4603 + t3490*t4613 + t3615*t4627 + t3633*t4633 + t3725*t4646 + t3751*t4655 - 0.014395*(t3723*t4646 + t3689*t4655) - 1.184683*(t3689*t4646 - 1.*t3723*t4655) + t4565*t574;
  p_output1[17]=-1.*t1171*t1743*t2763 + t1650*t1743*t341 + t2026*t4708 + 0.1305*(t1441*t1743*t341 - 1.*t1484*t4708) + t2476*t4760 + t3109*t4772 + t3228*t4784 + t3386*t4802 + t3490*t4808 + t3615*t4815 + t3633*t4825 + t3725*t4834 + t3751*t4848 - 0.014395*(t3723*t4834 + t3689*t4848) - 1.184683*(t3689*t4834 - 1.*t3723*t4848) + t1743*t574;
  p_output1[18]=0.1305*t1441*t4882 + t1650*t4882 + t1484*t2476*t4882 + t2763*t4958 + t3109*t4971 + t3228*t4989 + t3386*t4997 + t3490*t5009 + t3615*t5015 + t3633*t5033 + t3725*t5039 + t3751*t5045 - 0.014395*(t3723*t5039 + t3689*t5045) - 1.184683*(t3689*t5039 - 1.*t3723*t5045) - 0.135*t341*t887 - 0.135*t1106*t1171*t962;
  p_output1[19]=0.135*t1171*t3801 + 0.1305*t1441*t3869 + t1650*t3869 + t1484*t2476*t3869 + t2763*t5263 + t3109*t5408 + t3228*t5486 + t3386*t5585 + t3490*t5786 + t3615*t5864 + t3633*t5941 + t3725*t5997 + t3751*t6303 - 0.014395*(t3723*t5997 + t3689*t6303) - 1.184683*(t3689*t5997 - 1.*t3723*t6303) + 0.135*t1106*t341*t830;
  p_output1[20]=0.135*t1171*t4708 + 0.1305*t1441*t6558 + t1650*t6558 + t1484*t2476*t6558 + t2763*t6718 + t3109*t6812 + t3228*t6863 + t3386*t6887 + t3490*t6959 + t3615*t7018 + t3633*t7076 + t3725*t7114 + t3751*t7139 - 0.014395*(t3723*t7114 + t3689*t7139) - 1.184683*(t3689*t7114 - 1.*t3723*t7139) - 0.135*t1106*t341*t884;
  p_output1[21]=t7327*t7338 + t2476*t7360 + t2319*t3109*t7360 - 1.*t2418*t3228*t7360 + t3386*t7441 + t3490*t7448 + t3615*t7561 + t3633*t7627 + t3725*t7722 + t3751*t7769 - 0.014395*(t3723*t7722 + t3689*t7769) - 1.184683*(t3689*t7722 - 1.*t3723*t7769) + t1106*t7282*t783 + 0.1305*(-1.*t1484*t7327 - 1.*t1106*t1441*t783);
  p_output1[22]=0.1305*(-1.*t1484*t3821 - 1.*t1441*t3846) + t2476*t3852 + t2319*t3109*t3852 - 1.*t2418*t3228*t3852 + t3846*t7282 + t3821*t7338 + t3386*t7974 + t3490*t7986 + t3615*t8007 + t3633*t8049 + t3725*t8062 + t3751*t8101 - 0.014395*(t3723*t8062 + t3689*t8101) - 1.184683*(t3689*t8062 - 1.*t3723*t8101);
  p_output1[23]=t7282*t8204 + t7338*t8212 + 0.1305*(-1.*t1441*t8204 - 1.*t1484*t8212) + t2476*t8228 + t2319*t3109*t8228 - 1.*t2418*t3228*t8228 + t3386*t8256 + t3490*t8287 + t3615*t8309 + t3633*t8320 + t3725*t8350 + t3751*t8373 - 0.014395*(t3723*t8350 + t3689*t8373) - 1.184683*(t3689*t8350 - 1.*t3723*t8373);
  p_output1[24]=t4882*t8454 + t8463*t8472 + t3228*t8503 + t3109*t8531 + t3490*t8547 + t3386*t8558 + t3633*t8569 + t3615*t8601 + t3751*t8615 + t3725*t8625 - 1.184683*(-1.*t3723*t8615 + t3689*t8625) - 0.014395*(t3689*t8615 + t3723*t8625);
  p_output1[25]=t3109*t3892 + t3869*t8454 + t3862*t8472 + t3228*t8682 + t3490*t8696 + t3386*t8708 + t3633*t8722 + t3615*t8727 + t3751*t8733 + t3725*t8739 - 1.184683*(-1.*t3723*t8733 + t3689*t8739) - 0.014395*(t3689*t8733 + t3723*t8739);
  p_output1[26]=t6558*t8454 + t8472*t8773 + t3228*t8785 + t3109*t8792 + t3490*t8802 + t3386*t8808 + t3633*t8819 + t3615*t8823 + t3751*t8829 + t3725*t8835 - 1.184683*(-1.*t3723*t8829 + t3689*t8835) - 0.014395*(t3689*t8829 + t3723*t8835);
  p_output1[27]=t8865*t8887 + t8531*t8892 + t3490*t8910 + t3386*t8922 + t3633*t8932 + t3615*t8940 + t3751*t8951 + t3725*t8960 - 1.184683*(-1.*t3723*t8951 + t3689*t8960) - 0.014395*(t3689*t8951 + t3723*t8960);
  p_output1[28]=t3490*t3918 + t3882*t8865 + t3892*t8892 + t3386*t9003 + t3633*t9007 + t3615*t9015 + t3751*t9032 + t3725*t9043 - 1.184683*(-1.*t3723*t9032 + t3689*t9043) - 0.014395*(t3689*t9032 + t3723*t9043);
  p_output1[29]=t8792*t8892 + t8865*t9090 + t3490*t9096 + t3386*t9107 + t3633*t9118 + t3615*t9125 + t3751*t9139 + t3725*t9153 - 1.184683*(-1.*t3723*t9139 + t3689*t9153) - 0.014395*(t3689*t9139 + t3723*t9153);
  p_output1[30]=t8910*t9191 + t9201*t9206 + t3633*t9212 + t3615*t9216 + t3751*t9222 + t3725*t9230 - 1.184683*(-1.*t3723*t9222 + t3689*t9230) - 0.014395*(t3689*t9222 + t3723*t9230);
  p_output1[31]=t3615*t3946 + t3918*t9191 + t3928*t9201 + t3633*t9260 + t3751*t9268 + t3725*t9278 - 1.184683*(-1.*t3723*t9268 + t3689*t9278) - 0.014395*(t3689*t9268 + t3723*t9278);
  p_output1[32]=t9096*t9191 + t9201*t9319 + t3633*t9326 + t3615*t9339 + t3751*t9347 + t3725*t9363 - 1.184683*(-1.*t3723*t9347 + t3689*t9363) - 0.014395*(t3689*t9347 + t3723*t9363);
  p_output1[33]=t9385*t9408 + t9216*t9437 + t3751*t9445 + t3725*t9452 - 1.184683*(t3689*t9452 + t9457) - 0.014395*(t3723*t9452 + t9468);
  p_output1[34]=t3751*t3952 + t3942*t9385 + t3946*t9437 + t3725*t9489 - 0.014395*(t3966 + t3723*t9489) - 1.184683*(t3689*t9489 + t9491);
  p_output1[35]=t9339*t9437 + t9385*t9519 + t3751*t9527 + t3725*t9538 - 1.184683*(t3689*t9538 + t9544) - 0.014395*(t3723*t9538 + t9550);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t9445*t9571 + t9588*t9595 - 1.184683*(t9457 - 1.*t3689*t9595) - 0.014395*(t9468 - 1.*t3723*t9595);
  p_output1[40]=-0.014395*t3968 - 1.184683*(-1.*t3689*t3956 + t9491) + t3952*t9571 + t3956*t9588;
  p_output1[41]=t9527*t9571 + t9588*t9635 - 1.184683*(t9544 - 1.*t3689*t9635) - 0.014395*(t9550 - 1.*t3723*t9635);
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftHeel_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




