/*
 * Automatically Generated from Mathematica.
 * Fri 15 Oct 2021 13:09:09 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "dyaRightStance_new.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t39;
  double t47;
  double t131;
  double t219;
  double t176;
  double t42;
  double t433;
  double t488;
  double t495;
  double t517;
  double t548;
  double t594;
  double t595;
  double t606;
  double t611;
  double t620;
  double t635;
  double t636;
  double t645;
  double t668;
  double t698;
  double t700;
  double t703;
  double t737;
  double t478;
  double t491;
  double t492;
  double t572;
  double t578;
  double t585;
  double t591;
  double t649;
  double t796;
  double t813;
  double t829;
  double t719;
  double t722;
  double t729;
  double t747;
  double t748;
  double t783;
  double t994;
  double t1018;
  double t1021;
  double t1026;
  double t1022;
  double t1033;
  double t1055;
  double t1061;
  double t1067;
  double t1073;
  double t1077;
  double t1089;
  double t1108;
  double t1111;
  double t1128;
  double t1177;
  double t1201;
  double t1207;
  double t1224;
  double t1146;
  double t1149;
  double t1151;
  double t1211;
  double t1232;
  double t1250;
  double t1253;
  double t1258;
  double t1272;
  double t1281;
  double t1294;
  double t1298;
  double t1303;
  double t1322;
  double t1379;
  double t1398;
  double t1399;
  double t1402;
  double t1344;
  double t1348;
  double t1364;
  double t1545;
  double t1546;
  double t1548;
  double t1573;
  double t1400;
  double t1409;
  double t1412;
  double t1415;
  double t1420;
  double t1426;
  double t1432;
  double t1478;
  double t1598;
  double t1480;
  double t1488;
  double t1495;
  double t1571;
  double t1626;
  double t1513;
  double t1518;
  double t1522;
  double t1660;
  double t1667;
  double t1634;
  double t1685;
  double t1628;
  double t1753;
  double t1599;
  double t1676;
  double t1576;
  double t2013;
  double t2023;
  double t2024;
  double t2044;
  double t2212;
  double t2294;
  double t2295;
  double t2298;
  double t2309;
  double t2310;
  double t2311;
  double t2304;
  double t2317;
  double t2327;
  double t2337;
  double t2338;
  double t2349;
  double t2332;
  double t2354;
  double t2356;
  double t2363;
  double t2371;
  double t2372;
  double t2260;
  double t2222;
  double t2358;
  double t2373;
  double t2379;
  double t2384;
  double t2390;
  double t2402;
  double t2200;
  double t2381;
  double t2408;
  double t2412;
  double t2220;
  double t2457;
  double t2460;
  double t2463;
  double t2270;
  double t2469;
  double t2256;
  double t2438;
  double t2473;
  double t2425;
  double t2523;
  double t2059;
  double t2720;
  double t2721;
  double t2724;
  double t2726;
  double t2730;
  double t2755;
  double t2763;
  double t2765;
  double t2768;
  double t2769;
  double t2773;
  double t2785;
  double t2787;
  double t2788;
  double t2791;
  double t2798;
  double t2801;
  double t2805;
  double t2806;
  double t2811;
  double t2813;
  double t2814;
  double t2826;
  double t2827;
  double t2829;
  double t2832;
  double t2833;
  double t2837;
  double t2839;
  double t2840;
  double t2857;
  double t2858;
  double t2862;
  double t2869;
  double t2872;
  double t2889;
  double t2892;
  double t2895;
  double t1544;
  double t1558;
  double t1581;
  double t1587;
  double t1601;
  double t1602;
  double t1608;
  double t2916;
  double t2919;
  double t1611;
  double t1621;
  double t1631;
  double t1632;
  double t1643;
  double t1651;
  double t1652;
  double t2928;
  double t2939;
  double t2945;
  double t1658;
  double t1659;
  double t1661;
  double t1662;
  double t1668;
  double t1670;
  double t1671;
  double t2950;
  double t2952;
  double t2953;
  double t1677;
  double t1692;
  double t1715;
  double t1717;
  double t1759;
  double t1771;
  double t1777;
  double t1795;
  double t1856;
  double t1859;
  double t1870;
  double t1883;
  double t2040;
  double t2047;
  double t2054;
  double t2057;
  double t2061;
  double t3134;
  double t3139;
  double t3140;
  double t3142;
  double t3143;
  double t3144;
  double t3151;
  double t3155;
  double t3162;
  double t3168;
  double t3184;
  double t3186;
  double t3189;
  double t3192;
  double t3199;
  double t3201;
  double t3204;
  double t3268;
  double t3269;
  double t3275;
  double t3278;
  double t3286;
  double t3290;
  double t3293;
  double t3317;
  double t3327;
  double t3331;
  double t3336;
  double t3337;
  double t3339;
  double t3345;
  double t3349;
  double t3362;
  double t3479;
  double t3481;
  double t3482;
  double t3484;
  double t3485;
  double t3491;
  double t3494;
  double t3497;
  double t3498;
  double t3514;
  double t3533;
  double t3534;
  double t3538;
  double t3540;
  double t3542;
  double t3555;
  double t3571;
  double t3573;
  double t3587;
  double t3591;
  double t3592;
  double t3594;
  double t3596;
  double t3600;
  double t3740;
  double t3744;
  double t3745;
  double t3749;
  double t3751;
  double t3752;
  double t3757;
  double t3759;
  double t3761;
  double t3772;
  double t3773;
  double t3776;
  double t3778;
  double t3784;
  double t3789;
  double t3797;
  double t3949;
  double t3950;
  double t3951;
  double t3952;
  double t3962;
  double t3968;
  double t3969;
  double t3976;
  double t3980;
  double t2676;
  double t2692;
  double t4078;
  double t4102;
  double t4124;
  double t4127;
  double t4132;
  double t4135;
  double t4136;
  double t4098;
  double t4105;
  double t4112;
  double t4118;
  double t4140;
  double t4142;
  double t4145;
  double t4151;
  double t4153;
  double t4159;
  double t4164;
  double t4171;
  double t4177;
  double t4178;
  double t4188;
  double t4198;
  double t4194;
  double t4195;
  double t4197;
  double t4201;
  double t4204;
  double t4205;
  double t4215;
  double t4217;
  double t4218;
  double t4226;
  double t4221;
  double t4232;
  double t4233;
  double t4235;
  double t4242;
  double t4243;
  double t4246;
  double t4247;
  double t4248;
  double t4249;
  double t4251;
  double t4256;
  double t4257;
  double t4261;
  double t4288;
  double t4289;
  double t4293;
  double t4294;
  double t4297;
  double t4299;
  double t4357;
  double t4358;
  double t4359;
  double t4373;
  double t4298;
  double t4302;
  double t4310;
  double t4311;
  double t4313;
  double t4314;
  double t4316;
  double t4317;
  double t4384;
  double t4319;
  double t4321;
  double t4324;
  double t4422;
  double t4372;
  double t4336;
  double t4341;
  double t4342;
  double t4473;
  double t4457;
  double t4385;
  double t4492;
  double t4374;
  double t4526;
  double t4410;
  double t4505;
  double t4423;
  double t4573;
  double t4575;
  double t4576;
  double t4578;
  double t4666;
  double t4770;
  double t4774;
  double t4781;
  double t4746;
  double t4752;
  double t4758;
  double t4759;
  double t4786;
  double t4805;
  double t4817;
  double t4818;
  double t4821;
  double t4688;
  double t4729;
  double t4808;
  double t4822;
  double t4825;
  double t4835;
  double t4838;
  double t4839;
  double t4712;
  double t4828;
  double t4845;
  double t4846;
  double t4727;
  double t4885;
  double t4886;
  double t4895;
  double t4657;
  double t4901;
  double t4684;
  double t4854;
  double t4929;
  double t4874;
  double t4909;
  double t4584;
  double t5031;
  double t5032;
  double t5039;
  double t5042;
  double t5045;
  double t5064;
  double t5065;
  double t5067;
  double t5068;
  double t5073;
  double t5074;
  double t5097;
  double t5103;
  double t5105;
  double t5108;
  double t5125;
  double t5147;
  double t5149;
  double t5152;
  double t5164;
  double t5167;
  double t5168;
  double t5185;
  double t5188;
  double t5192;
  double t5194;
  double t5203;
  double t5207;
  double t5209;
  double t5210;
  double t4356;
  double t4366;
  double t4376;
  double t4381;
  double t4387;
  double t4395;
  double t4400;
  double t5233;
  double t5241;
  double t4407;
  double t4409;
  double t4414;
  double t4415;
  double t4425;
  double t4427;
  double t4439;
  double t5244;
  double t5245;
  double t5252;
  double t4447;
  double t4449;
  double t4470;
  double t4472;
  double t4483;
  double t4487;
  double t4488;
  double t5255;
  double t5257;
  double t5258;
  double t4503;
  double t4506;
  double t4510;
  double t4511;
  double t4519;
  double t4524;
  double t4531;
  double t4534;
  double t4544;
  double t4550;
  double t4554;
  double t4560;
  double t4577;
  double t4586;
  double t4589;
  double t4590;
  double t4600;
  double t203;
  double t234;
  double t241;
  double t5383;
  double t5384;
  double t5385;
  double t5410;
  double t5412;
  double t5414;
  double t5415;
  double t5417;
  double t5420;
  double t5421;
  double t5427;
  double t5428;
  double t5429;
  double t5437;
  double t5439;
  double t5441;
  double t5445;
  double t5448;
  double t5460;
  double t5462;
  double t5465;
  double t5483;
  double t5487;
  double t5491;
  double t5492;
  double t5496;
  double t5500;
  double t5502;
  double t5504;
  double t5518;
  double t5523;
  double t5527;
  double t5530;
  double t5531;
  double t5535;
  double t5536;
  double t5537;
  double t5550;
  double t5551;
  double t5553;
  double t5554;
  double t5556;
  double t5558;
  double t5560;
  double t5561;
  double t5398;
  double t5658;
  double t5659;
  double t5661;
  double t5671;
  double t5674;
  double t5687;
  double t5688;
  double t5696;
  double t5699;
  double t5701;
  double t5689;
  double t5690;
  double t5691;
  double t5714;
  double t5715;
  double t5716;
  double t5719;
  double t5726;
  double t5730;
  double t5731;
  double t5737;
  double t5752;
  double t5753;
  double t5754;
  double t5756;
  double t5759;
  double t5761;
  double t5762;
  double t5763;
  double t5781;
  double t5782;
  double t5783;
  double t5785;
  double t5786;
  double t5788;
  double t5791;
  double t5793;
  double t5910;
  double t5914;
  double t5915;
  double t5923;
  double t5924;
  double t5926;
  double t5927;
  double t5930;
  double t5931;
  double t5934;
  double t5945;
  double t5950;
  double t5952;
  double t5953;
  double t5964;
  double t5966;
  double t5967;
  double t5984;
  double t5985;
  double t5986;
  double t5987;
  double t5989;
  double t5992;
  double t5995;
  double t5997;
  double t6136;
  double t6137;
  double t6144;
  double t6148;
  double t6150;
  double t6151;
  double t6155;
  double t6163;
  double t6165;
  double t6211;
  double t6212;
  double t6220;
  double t6223;
  double t6225;
  double t6227;
  double t6231;
  double t6242;
  double t6246;
  double t6248;
  double t6250;
  double t6266;
  double t6268;
  double t6272;
  double t276;
  double t280;
  double t333;
  double t6354;
  double t6355;
  double t6358;
  double t6365;
  double t6374;
  double t6376;
  double t6384;
  double t6385;
  double t6392;
  double t6393;
  double t6394;
  double t6405;
  double t6406;
  double t6416;
  double t6417;
  double t6424;
  double t6433;
  double t6436;
  double t6437;
  double t6453;
  double t6461;
  double t6464;
  double t6467;
  double t6471;
  double t6477;
  double t6478;
  double t6480;
  double t6494;
  double t6496;
  double t6498;
  double t6500;
  double t6512;
  double t6514;
  double t6517;
  double t6518;
  double t6529;
  double t6530;
  double t6532;
  double t6539;
  double t6540;
  double t6547;
  double t6548;
  double t6549;
  double t6561;
  double t6563;
  double t6566;
  double t6569;
  double t6570;
  double t6574;
  double t6575;
  double t6581;
  double t6366;
  double t6715;
  double t6722;
  double t6738;
  double t6741;
  double t6743;
  double t6723;
  double t6730;
  double t6732;
  double t6756;
  double t6757;
  double t6759;
  double t6761;
  double t6762;
  double t6766;
  double t6767;
  double t6768;
  double t6779;
  double t6780;
  double t6781;
  double t6785;
  double t6787;
  double t6791;
  double t6793;
  double t6794;
  double t6802;
  double t6803;
  double t6804;
  double t6806;
  double t6810;
  double t6815;
  double t6817;
  double t6820;
  double t6843;
  double t6853;
  double t6857;
  double t6859;
  double t6860;
  double t6862;
  double t6867;
  double t6868;
  double t6992;
  double t6993;
  double t6996;
  double t6999;
  double t7002;
  double t7009;
  double t7011;
  double t7016;
  double t7029;
  double t7031;
  double t7041;
  double t7044;
  double t7045;
  double t7055;
  double t7056;
  double t7057;
  double t7071;
  double t7076;
  double t7077;
  double t7078;
  double t7079;
  double t7083;
  double t7084;
  double t7086;
  double t7095;
  double t7101;
  double t7104;
  double t7106;
  double t7107;
  double t7111;
  double t7113;
  double t7116;
  double t7127;
  double t7128;
  double t7129;
  double t7136;
  double t7139;
  double t7145;
  double t7149;
  double t7152;
  double t7164;
  double t7165;
  double t7174;
  double t7175;
  double t7177;
  double t7184;
  double t7188;
  double t7191;
  double t6991;
  double t7275;
  double t7278;
  double t7292;
  double t7293;
  double t7294;
  double t7280;
  double t7284;
  double t7288;
  double t7309;
  double t7316;
  double t7317;
  double t7322;
  double t7324;
  double t7329;
  double t7330;
  double t7336;
  double t7344;
  double t7347;
  double t7351;
  double t7355;
  double t7357;
  double t7360;
  double t7361;
  double t7362;
  double t7381;
  double t7383;
  double t7384;
  double t7386;
  double t7391;
  double t7402;
  double t7403;
  double t7405;
  double t7434;
  double t7438;
  double t7439;
  double t7447;
  double t7448;
  double t7452;
  double t7453;
  double t7454;
  double t7567;
  double t7568;
  double t7573;
  double t7575;
  double t7576;
  double t7598;
  double t7599;
  double t7600;
  double t7608;
  double t7609;
  double t7610;
  double t7615;
  double t7620;
  double t7627;
  double t7637;
  double t7640;
  double t7641;
  double t7679;
  double t7682;
  double t7694;
  double t7696;
  double t7705;
  double t7707;
  double t7708;
  double t7713;
  double t7717;
  double t7718;
  double t7735;
  double t7745;
  double t7747;
  double t7749;
  double t7750;
  double t7754;
  double t7764;
  double t7767;
  double t7773;
  double t7787;
  double t7789;
  double t7791;
  double t7834;
  double t7838;
  double t7841;
  double t7851;
  double t7852;
  double t7853;
  double t7857;
  double t7859;
  double t7862;
  double t7864;
  double t7865;
  double t7867;
  double t7878;
  double t7880;
  double t7886;
  double t7900;
  double t7902;
  double t7903;
  double t7912;
  double t7914;
  double t7917;
  double t7940;
  double t7941;
  double t7942;
  double t7946;
  double t7947;
  double t7949;
  double t7954;
  double t7959;
  double t7963;
  double t7969;
  double t7974;
  double t7976;
  double t7991;
  double t7992;
  double t7998;
  double t8002;
  double t8004;
  double t8005;
  double t8013;
  double t8015;
  double t8021;
  double t4974;
  double t4975;
  double t4983;
  double t8041;
  double t8047;
  double t8051;
  double t4994;
  double t4995;
  double t8053;
  double t8054;
  double t8057;
  double t8060;
  double t8062;
  double t8055;
  double t8065;
  double t8067;
  double t8082;
  double t8084;
  double t8089;
  double t8123;
  double t8125;
  double t8131;
  double t8135;
  double t8141;
  double t8143;
  double t8144;
  double t8183;
  double t8188;
  double t8207;
  double t8208;
  double t8210;
  double t8222;
  double t8223;
  double t8227;
  double t8238;
  double t8240;
  double t8249;
  double t8252;
  double t8253;
  double t8261;
  double t8267;
  double t8269;
  double t8272;
  double t8275;
  double t8281;
  double t8287;
  double t8294;
  double t8300;
  double t8317;
  double t8320;
  double t8321;
  double t8355;
  double t8356;
  double t8358;
  double t8374;
  double t8378;
  double t8381;
  double t8386;
  double t8389;
  double t8390;
  double t8399;
  double t8403;
  double t8405;
  double t8415;
  double t8416;
  double t8419;
  double t8446;
  double t8447;
  double t8451;
  double t8454;
  double t8455;
  double t8457;
  double t8460;
  double t8467;
  double t8468;
  double t8475;
  double t8479;
  double t8484;
  double t8486;
  double t8488;
  double t8491;
  double t8509;
  double t8512;
  double t8517;
  double t8558;
  double t8559;
  double t8560;
  double t8564;
  double t8565;
  double t8566;
  double t8569;
  double t8572;
  double t8573;
  double t8575;
  double t8577;
  double t8578;
  double t8580;
  double t8581;
  double t8582;
  double t8585;
  double t8587;
  double t8588;
  double t8591;
  double t8592;
  double t8593;
  double t8613;
  double t8614;
  double t8617;
  double t8619;
  double t8620;
  double t8622;
  double t8625;
  double t8626;
  double t8628;
  double t8632;
  double t8633;
  double t8634;
  double t8640;
  double t8641;
  double t8642;
  double t8645;
  double t8646;
  double t8647;
  double t8651;
  double t8652;
  double t8654;
  double t8675;
  double t8676;
  double t8678;
  double t8679;
  double t8680;
  double t8682;
  double t8683;
  double t8684;
  double t8681;
  double t8690;
  double t8692;
  double t8695;
  double t8696;
  double t8697;
  double t8733;
  double t8736;
  double t8739;
  double t8743;
  double t8749;
  double t8753;
  double t8757;
  double t8195;
  double t8200;
  double t8202;
  double t8802;
  double t8804;
  double t8807;
  double t8813;
  double t8814;
  double t8815;
  double t8817;
  double t8819;
  double t8821;
  double t8823;
  double t8826;
  double t8827;
  double t8863;
  double t8864;
  double t8867;
  double t8872;
  double t8873;
  double t8876;
  double t8880;
  double t8883;
  double t8886;
  double t8888;
  double t8889;
  double t8891;
  double t8895;
  double t8897;
  double t8899;
  double t8903;
  double t8905;
  double t8908;
  double t8913;
  double t8917;
  double t8918;
  double t8950;
  double t8952;
  double t8953;
  double t8957;
  double t8960;
  double t8961;
  double t8964;
  double t8965;
  double t8966;
  double t8968;
  double t8969;
  double t8970;
  double t8977;
  double t8978;
  double t8979;
  double t8981;
  double t8983;
  double t8984;
  double t8990;
  double t8992;
  double t8993;
  double t7580;
  double t9034;
  double t9036;
  double t9039;
  double t9040;
  double t9041;
  double t9044;
  double t9050;
  double t9052;
  double t9054;
  double t9055;
  double t9057;
  double t9062;
  double t9067;
  double t9068;
  double t9082;
  double t9084;
  double t9085;
  double t9088;
  double t9091;
  double t9098;
  double t9103;
  double t9108;
  double t9111;
  double t9149;
  double t9151;
  double t9152;
  double t9168;
  double t9175;
  double t9182;
  double t9184;
  double t9186;
  double t9189;
  double t9190;
  double t9191;
  double t9193;
  double t9194;
  double t9195;
  double t8329;
  double t8330;
  double t8333;
  double t9249;
  double t9250;
  double t9255;
  double t9257;
  double t9260;
  double t9261;
  double t9262;
  double t4605;
  double t4607;
  double t4612;
  double t4632;
  double t4637;
  double t4638;
  double t5344;
  double t5352;
  double t5357;
  double t5361;
  double t5363;
  double t5364;
  double t5871;
  double t5873;
  double t5876;
  double t5881;
  double t5893;
  double t5894;
  double t6079;
  double t6098;
  double t6106;
  double t6109;
  double t6110;
  double t6115;
  double t4999;
  double t5000;
  double t5002;
  double t5008;
  double t5009;
  double t5016;
  double t6316;
  double t6321;
  double t6324;
  double t6332;
  double t6333;
  double t6338;
  double t6944;
  double t6945;
  double t6947;
  double t6950;
  double t6951;
  double t6958;
  double t7536;
  double t7540;
  double t7541;
  double t7546;
  double t7551;
  double t7554;
  t39 = Cos(var1[3]);
  t47 = Sin(var1[5]);
  t131 = Cos(var1[5]);
  t219 = Sin(var1[3]);
  t176 = Sin(var1[4]);
  t42 = Cos(var1[4]);
  t433 = Cos(var1[15]);
  t488 = Sin(var1[15]);
  t495 = -1.*t39*t131*t176;
  t517 = t219*t47;
  t548 = t495 + t517;
  t594 = Sin(var1[14]);
  t595 = t39*t42*t594;
  t606 = Cos(var1[14]);
  t611 = t131*t219;
  t620 = t39*t176*t47;
  t635 = t611 + t620;
  t636 = t606*t635;
  t645 = t595 + t636;
  t668 = Cos(var1[16]);
  t698 = -1.*t488*t548;
  t700 = t433*t645;
  t703 = t698 + t700;
  t737 = Sin(var1[16]);
  t478 = -0.135*t433;
  t491 = -0.049*t488;
  t492 = t478 + t491;
  t572 = t492*t548;
  t578 = 0.049*t433;
  t585 = -0.135*t488;
  t591 = t578 + t585;
  t649 = t591*t645;
  t796 = -1.*t433*t548;
  t813 = -1.*t488*t645;
  t829 = t796 + t813;
  t719 = -1.*t668;
  t722 = 1. + t719;
  t729 = -0.049*t722;
  t747 = -0.09*t737;
  t748 = t729 + t747;
  t783 = t748*t703;
  t994 = Cos(var1[17]);
  t1018 = -1.*t994;
  t1021 = 1. + t1018;
  t1026 = Sin(var1[17]);
  t1022 = -0.049*t1021;
  t1033 = -0.21*t1026;
  t1055 = t1022 + t1033;
  t1061 = t668*t1055*t703;
  t1067 = -0.21*t1021;
  t1073 = 0.049*t1026;
  t1077 = t1067 + t1073;
  t1089 = -1.*t737*t1077*t703;
  t1108 = -1.*t994*t737*t703;
  t1111 = -1.*t668*t1026*t703;
  t1128 = t1108 + t1111;
  t1177 = Cos(var1[18]);
  t1201 = -1.*t1177;
  t1207 = 1. + t1201;
  t1224 = Sin(var1[18]);
  t1146 = t668*t994*t703;
  t1149 = -1.*t737*t1026*t703;
  t1151 = t1146 + t1149;
  t1211 = -0.27068*t1207;
  t1232 = 0.00159*t1224;
  t1250 = t1211 + t1232;
  t1253 = t1250*t1128;
  t1258 = -0.00159*t1207;
  t1272 = -0.27068*t1224;
  t1281 = t1258 + t1272;
  t1294 = t1281*t1151;
  t1298 = t1224*t1128;
  t1303 = t1177*t1151;
  t1322 = t1298 + t1303;
  t1379 = Cos(var1[19]);
  t1398 = -1.*t1379;
  t1399 = 1. + t1398;
  t1402 = Sin(var1[19]);
  t1344 = t1177*t1128;
  t1348 = -1.*t1224*t1151;
  t1364 = t1344 + t1348;
  t1545 = Cos(var1[20]);
  t1546 = -1.*t1545;
  t1548 = 1. + t1546;
  t1573 = Sin(var1[20]);
  t1400 = 0.01841*t1399;
  t1409 = -0.70544*t1402;
  t1412 = t1400 + t1409;
  t1415 = t1412*t1322;
  t1420 = -0.70544*t1399;
  t1426 = -0.01841*t1402;
  t1432 = t1420 + t1426;
  t1478 = t1432*t1364;
  t1598 = 0.005481192614*t1548;
  t1480 = -1.*t1402*t1322;
  t1488 = t1379*t1364;
  t1495 = t1480 + t1488;
  t1571 = 0.07769774964800001*t1548;
  t1626 = -0.0004284921280000001*t1548;
  t1513 = t1379*t1322;
  t1518 = t1402*t1364;
  t1522 = t1513 + t1518;
  t1660 = 0.005498*t1573;
  t1667 = 0.996943*t1573;
  t1634 = -0.077936*t1573;
  t1685 = 0.0004284921280000001*t1548;
  t1628 = -0.996943*t1573;
  t1753 = -0.005481192614*t1548;
  t1599 = 0.077936*t1573;
  t1676 = -0.07769774964800001*t1548;
  t1576 = -0.005498*t1573;
  t2013 = Cos(var1[21]);
  t2023 = -1.*t2013;
  t2024 = 1. + t2023;
  t2044 = Sin(var1[21]);
  t2212 = 0.005481192614*t1573;
  t2294 = t606*t39*t42;
  t2295 = -1.*t594*t635;
  t2298 = t2294 + t2295;
  t2309 = t433*t548;
  t2310 = t488*t645;
  t2311 = t2309 + t2310;
  t2304 = t737*t2298;
  t2317 = t668*t2311;
  t2327 = t2304 + t2317;
  t2337 = t668*t2298;
  t2338 = -1.*t737*t2311;
  t2349 = t2337 + t2338;
  t2332 = -1.*t1026*t2327;
  t2354 = t994*t2349;
  t2356 = t2332 + t2354;
  t2363 = t994*t2327;
  t2371 = t1026*t2349;
  t2372 = t2363 + t2371;
  t2260 = -0.0004284921280000001*t1573;
  t2222 = 0.07769774964800001*t1573;
  t2358 = t1224*t2356;
  t2373 = t1177*t2372;
  t2379 = t2358 + t2373;
  t2384 = t1177*t2356;
  t2390 = -1.*t1224*t2372;
  t2402 = t2384 + t2390;
  t2200 = 0.077936*t1545;
  t2381 = -1.*t1402*t2379;
  t2408 = t1379*t2402;
  t2412 = t2381 + t2408;
  t2220 = -0.005498*t1545;
  t2457 = t1379*t2379;
  t2460 = t1402*t2402;
  t2463 = t2457 + t2460;
  t2270 = -0.077936*t1545;
  t2469 = -0.005481192614*t1573;
  t2256 = -0.996943*t1545;
  t2438 = 0.005498*t1545;
  t2473 = -0.07769774964800001*t1573;
  t2425 = 0.996943*t1545;
  t2523 = 0.0004284921280000001*t1573;
  t2059 = -1.11344*t2044;
  t2720 = 0.135*t606*t39*t42;
  t2721 = -0.135*t594*t635;
  t2724 = -1.*t39*t42*t594;
  t2726 = -1.*t606*t635;
  t2730 = t2724 + t2726;
  t2755 = -1.*t433;
  t2763 = 1. + t2755;
  t2765 = -0.135*t2763;
  t2768 = 0.049*t488;
  t2769 = t2765 + t2768;
  t2773 = t2769*t2298;
  t2785 = -0.09*t722;
  t2787 = 0.049*t737;
  t2788 = t2785 + t2787;
  t2791 = t2788*t2730;
  t2798 = t488*t748*t2298;
  t2801 = t737*t2730;
  t2805 = t668*t488*t2298;
  t2806 = t2801 + t2805;
  t2811 = t668*t2730;
  t2813 = -1.*t488*t737*t2298;
  t2814 = t2811 + t2813;
  t2826 = t1055*t2806;
  t2827 = t1077*t2814;
  t2829 = -1.*t1026*t2806;
  t2832 = t994*t2814;
  t2833 = t2829 + t2832;
  t2837 = t994*t2806;
  t2839 = t1026*t2814;
  t2840 = t2837 + t2839;
  t2857 = t1250*t2833;
  t2858 = t1281*t2840;
  t2862 = t1224*t2833;
  t2869 = t1177*t2840;
  t2872 = t2862 + t2869;
  t2889 = t1177*t2833;
  t2892 = -1.*t1224*t2840;
  t2895 = t2889 + t2892;
  t1544 = 2.1934241414728571e-7*var1[20];
  t1558 = -0.000033783761634830594*t1548;
  t1581 = t1571 + t1576;
  t1587 = -0.021877537552*t1581;
  t1601 = t1598 + t1599;
  t1602 = -0.6934341012630001*t1601;
  t1608 = t1544 + t1558 + t1587 + t1602;
  t2916 = t1412*t2872;
  t2919 = t1432*t2895;
  t1611 = -1.2096424700126054e-9*var1[20];
  t1621 = -0.6934128581485427*t1548;
  t1631 = t1626 + t1628;
  t1632 = -0.021877537552*t1631;
  t1643 = t1598 + t1634;
  t1651 = -0.005534467322*t1643;
  t1652 = t1611 + t1621 + t1632 + t1651;
  t2928 = -1.*t1402*t2872;
  t2939 = t1379*t2895;
  t2945 = t2928 + t2939;
  t1658 = -1.7147089040178687e-8*var1[20];
  t1659 = -0.021744644052735636*t1548;
  t1661 = t1571 + t1660;
  t1662 = -0.005534467322*t1661;
  t1668 = t1626 + t1667;
  t1670 = -0.6934341012630001*t1668;
  t1671 = t1658 + t1659 + t1662 + t1670;
  t2950 = t1379*t2872;
  t2952 = t1402*t2895;
  t2953 = t2950 + t2952;
  t1677 = t1676 + t1660;
  t1692 = t1685 + t1667;
  t1715 = -0.993925573253*t1548;
  t1717 = 1. + t1715;
  t1759 = t1753 + t1634;
  t1771 = -0.999969365345*t1548;
  t1777 = 1. + t1771;
  t1795 = t1685 + t1628;
  t1856 = -0.006104248100000001*t1548;
  t1859 = 1. + t1856;
  t1870 = t1753 + t1599;
  t1883 = t1676 + t1576;
  t2040 = -1.11344*t2024;
  t2047 = 0.02159*t2044;
  t2054 = t2040 + t2047;
  t2057 = -0.02159*t2024;
  t2061 = t2057 + t2059;
  t3134 = 0.049*t668;
  t3139 = t3134 + t747;
  t3140 = t3139*t2298;
  t3142 = -0.09*t668;
  t3143 = -0.049*t737;
  t3144 = t3142 + t3143;
  t3151 = t3144*t2311;
  t3155 = -1.*t737*t2298;
  t3162 = -1.*t668*t2311;
  t3168 = t3155 + t3162;
  t3184 = t1077*t3168;
  t3186 = t1055*t2349;
  t3189 = t1026*t3168;
  t3192 = t3189 + t2354;
  t3199 = t994*t3168;
  t3201 = -1.*t1026*t2349;
  t3204 = t3199 + t3201;
  t3268 = t1281*t3192;
  t3269 = t1250*t3204;
  t3275 = -1.*t1224*t3192;
  t3278 = t1177*t3204;
  t3286 = t3275 + t3278;
  t3290 = t1177*t3192;
  t3293 = t1224*t3204;
  t3317 = t3290 + t3293;
  t3327 = t1432*t3286;
  t3331 = t1412*t3317;
  t3336 = t1402*t3286;
  t3337 = t1379*t3317;
  t3339 = t3336 + t3337;
  t3345 = t1379*t3286;
  t3349 = -1.*t1402*t3317;
  t3362 = t3345 + t3349;
  t3479 = -0.21*t994;
  t3481 = -0.049*t1026;
  t3482 = t3479 + t3481;
  t3484 = t3482*t2327;
  t3485 = 0.049*t994;
  t3491 = t3485 + t1033;
  t3494 = t3491*t2349;
  t3497 = -1.*t994*t2327;
  t3498 = t3497 + t3201;
  t3514 = t1281*t2356;
  t3533 = t1250*t3498;
  t3534 = -1.*t1224*t2356;
  t3538 = t1177*t3498;
  t3540 = t3534 + t3538;
  t3542 = t1224*t3498;
  t3555 = t2384 + t3542;
  t3571 = t1432*t3540;
  t3573 = t1412*t3555;
  t3587 = t1402*t3540;
  t3591 = t1379*t3555;
  t3592 = t3587 + t3591;
  t3594 = t1379*t3540;
  t3596 = -1.*t1402*t3555;
  t3600 = t3594 + t3596;
  t3740 = 0.00159*t1177;
  t3744 = t3740 + t1272;
  t3745 = t3744*t2356;
  t3749 = -0.27068*t1177;
  t3751 = -0.00159*t1224;
  t3752 = t3749 + t3751;
  t3757 = t3752*t2372;
  t3759 = -1.*t1177*t2372;
  t3761 = t3534 + t3759;
  t3772 = t1432*t3761;
  t3773 = t1412*t2402;
  t3776 = t1402*t3761;
  t3778 = t3776 + t2408;
  t3784 = t1379*t3761;
  t3789 = -1.*t1402*t2402;
  t3797 = t3784 + t3789;
  t3949 = -0.70544*t1379;
  t3950 = 0.01841*t1402;
  t3951 = t3949 + t3950;
  t3952 = t3951*t2379;
  t3962 = -0.01841*t1379;
  t3968 = t3962 + t1409;
  t3969 = t3968*t2402;
  t3976 = -1.*t1379*t2379;
  t3980 = t3976 + t3789;
  t2676 = -1.*t2044*t2412;
  t2692 = t2013*t2412;
  t4078 = Cos(var1[7]);
  t4102 = Sin(var1[7]);
  t4124 = Cos(var1[6]);
  t4127 = t4124*t635;
  t4132 = Sin(var1[6]);
  t4135 = t39*t42*t4132;
  t4136 = t4127 + t4135;
  t4098 = 0.135*t4078;
  t4105 = -0.049*t4102;
  t4112 = t4098 + t4105;
  t4118 = t548*t4112;
  t4140 = 0.049*t4078;
  t4142 = 0.135*t4102;
  t4145 = t4140 + t4142;
  t4151 = t4136*t4145;
  t4153 = t4078*t4136;
  t4159 = -1.*t548*t4102;
  t4164 = t4153 + t4159;
  t4171 = -1.*t4078*t548;
  t4177 = -1.*t4136*t4102;
  t4178 = t4171 + t4177;
  t4188 = Cos(var1[8]);
  t4198 = Sin(var1[8]);
  t4194 = -1.*t4188;
  t4195 = 1. + t4194;
  t4197 = -0.049*t4195;
  t4201 = -0.09*t4198;
  t4204 = t4197 + t4201;
  t4205 = t4164*t4204;
  t4215 = Cos(var1[9]);
  t4217 = -1.*t4215;
  t4218 = 1. + t4217;
  t4226 = Sin(var1[9]);
  t4221 = -0.049*t4218;
  t4232 = -0.21*t4226;
  t4233 = t4221 + t4232;
  t4235 = t4188*t4233*t4164;
  t4242 = -0.21*t4218;
  t4243 = 0.049*t4226;
  t4246 = t4242 + t4243;
  t4247 = -1.*t4246*t4164*t4198;
  t4248 = -1.*t4188*t4226*t4164;
  t4249 = -1.*t4215*t4164*t4198;
  t4251 = t4248 + t4249;
  t4256 = t4215*t4188*t4164;
  t4257 = -1.*t4226*t4164*t4198;
  t4261 = t4256 + t4257;
  t4288 = -1.*var1[9];
  t4289 = 0.226893 + t4288;
  t4293 = Cos(t4289);
  t4294 = -1.*t4293;
  t4297 = 1. + t4294;
  t4299 = Sin(t4289);
  t4357 = Cos(var1[12]);
  t4358 = -1.*t4357;
  t4359 = 1. + t4358;
  t4373 = Sin(var1[12]);
  t4298 = -0.70544*t4297;
  t4302 = -0.01841*t4299;
  t4310 = t4298 + t4302;
  t4311 = t4310*t4251;
  t4313 = 0.01841*t4297;
  t4314 = -0.70544*t4299;
  t4316 = t4313 + t4314;
  t4317 = t4316*t4261;
  t4384 = -0.07769774964800001*t4359;
  t4319 = t4299*t4251;
  t4321 = t4293*t4261;
  t4324 = t4319 + t4321;
  t4422 = -0.0004284921280000001*t4359;
  t4372 = -0.005481192614*t4359;
  t4336 = t4293*t4251;
  t4341 = -1.*t4299*t4261;
  t4342 = t4336 + t4341;
  t4473 = 0.077936*t4373;
  t4457 = -0.996943*t4373;
  t4385 = 0.005498*t4373;
  t4492 = 0.005481192614*t4359;
  t4374 = -0.077936*t4373;
  t4526 = 0.07769774964800001*t4359;
  t4410 = -0.005498*t4373;
  t4505 = 0.0004284921280000001*t4359;
  t4423 = 0.996943*t4373;
  t4573 = Cos(var1[13]);
  t4575 = -1.*t4573;
  t4576 = 1. + t4575;
  t4578 = Sin(var1[13]);
  t4666 = -0.07769774964800001*t4373;
  t4770 = t39*t42*t4124;
  t4774 = -1.*t635*t4132;
  t4781 = t4770 + t4774;
  t4746 = t4078*t548;
  t4752 = t4136*t4102;
  t4758 = t4746 + t4752;
  t4759 = t4188*t4758;
  t4786 = t4781*t4198;
  t4805 = t4759 + t4786;
  t4817 = t4188*t4781;
  t4818 = -1.*t4758*t4198;
  t4821 = t4817 + t4818;
  t4688 = -0.005481192614*t4373;
  t4729 = -0.0004284921280000001*t4373;
  t4808 = -1.*t4226*t4805;
  t4822 = t4215*t4821;
  t4825 = t4808 + t4822;
  t4835 = t4215*t4805;
  t4838 = t4226*t4821;
  t4839 = t4835 + t4838;
  t4712 = -0.005498*t4357;
  t4828 = t4299*t4825;
  t4845 = t4293*t4839;
  t4846 = t4828 + t4845;
  t4727 = 0.996943*t4357;
  t4885 = t4293*t4825;
  t4886 = -1.*t4299*t4839;
  t4895 = t4885 + t4886;
  t4657 = 0.005498*t4357;
  t4901 = 0.07769774964800001*t4373;
  t4684 = -0.077936*t4357;
  t4854 = 0.077936*t4357;
  t4929 = 0.005481192614*t4373;
  t4874 = -0.996943*t4357;
  t4909 = 0.0004284921280000001*t4373;
  t4584 = -1.11344*t4578;
  t5031 = -0.135*t39*t42*t4124;
  t5032 = 0.135*t635*t4132;
  t5039 = -1.*t4124*t635;
  t5042 = -1.*t39*t42*t4132;
  t5045 = t5039 + t5042;
  t5064 = -1.*t4078;
  t5065 = 1. + t5064;
  t5067 = 0.135*t5065;
  t5068 = 0.049*t4102;
  t5073 = t5067 + t5068;
  t5074 = t4781*t5073;
  t5097 = t4781*t4102*t4204;
  t5103 = -0.09*t4195;
  t5105 = 0.049*t4198;
  t5108 = t5103 + t5105;
  t5125 = t5045*t5108;
  t5147 = t4188*t4781*t4102;
  t5149 = t5045*t4198;
  t5152 = t5147 + t5149;
  t5164 = t4188*t5045;
  t5167 = -1.*t4781*t4102*t4198;
  t5168 = t5164 + t5167;
  t5185 = t4233*t5152;
  t5188 = t4246*t5168;
  t5192 = -1.*t4226*t5152;
  t5194 = t4215*t5168;
  t5203 = t5192 + t5194;
  t5207 = t4215*t5152;
  t5209 = t4226*t5168;
  t5210 = t5207 + t5209;
  t4356 = -2.1934241414728571e-7*var1[12];
  t4366 = 0.000033783761634830594*t4359;
  t4376 = t4372 + t4374;
  t4381 = -0.6934341012630001*t4376;
  t4387 = t4384 + t4385;
  t4395 = -0.021877537552*t4387;
  t4400 = t4356 + t4366 + t4381 + t4395;
  t5233 = t4310*t5203;
  t5241 = t4316*t5210;
  t4407 = -1.7147089040178687e-8*var1[12];
  t4409 = -0.021744644052735636*t4359;
  t4414 = t4384 + t4410;
  t4415 = 0.005534467322*t4414;
  t4425 = t4422 + t4423;
  t4427 = -0.6934341012630001*t4425;
  t4439 = t4407 + t4409 + t4415 + t4427;
  t5244 = t4299*t5203;
  t5245 = t4293*t5210;
  t5252 = t5244 + t5245;
  t4447 = -1.2096424700126054e-9*var1[12];
  t4449 = -0.6934128581485427*t4359;
  t4470 = t4422 + t4457;
  t4472 = -0.021877537552*t4470;
  t4483 = t4372 + t4473;
  t4487 = 0.005534467322*t4483;
  t4488 = t4447 + t4449 + t4472 + t4487;
  t5255 = t4293*t5203;
  t5257 = -1.*t4299*t5210;
  t5258 = t5255 + t5257;
  t4503 = t4492 + t4473;
  t4506 = t4505 + t4457;
  t4510 = -0.999969365345*t4359;
  t4511 = 1. + t4510;
  t4519 = -0.006104248100000001*t4359;
  t4524 = 1. + t4519;
  t4531 = t4526 + t4385;
  t4534 = t4492 + t4374;
  t4544 = t4526 + t4410;
  t4550 = -0.993925573253*t4359;
  t4554 = 1. + t4550;
  t4560 = t4505 + t4423;
  t4577 = -0.02159*t4576;
  t4586 = t4577 + t4584;
  t4589 = -1.11344*t4576;
  t4590 = 0.02159*t4578;
  t4600 = t4589 + t4590;
  t203 = t39*t131*t176;
  t234 = -1.*t219*t47;
  t241 = t203 + t234;
  t5383 = -1.*t606;
  t5384 = 1. + t5383;
  t5385 = -0.135*t5384*t241;
  t5410 = t606*t2769*t241;
  t5412 = -0.049*t2763;
  t5414 = t5412 + t585;
  t5415 = t5414*t635;
  t5417 = t606*t488*t241;
  t5420 = t433*t635;
  t5421 = t5417 + t5420;
  t5427 = t606*t433*t241;
  t5428 = -1.*t488*t635;
  t5429 = t5427 + t5428;
  t5437 = -1.*t594*t2788*t241;
  t5439 = t748*t5421;
  t5441 = -1.*t594*t737*t241;
  t5445 = t668*t5421;
  t5448 = t5441 + t5445;
  t5460 = -1.*t668*t594*t241;
  t5462 = -1.*t737*t5421;
  t5465 = t5460 + t5462;
  t5483 = t1055*t5448;
  t5487 = t1077*t5465;
  t5491 = -1.*t1026*t5448;
  t5492 = t994*t5465;
  t5496 = t5491 + t5492;
  t5500 = t994*t5448;
  t5502 = t1026*t5465;
  t5504 = t5500 + t5502;
  t5518 = t1250*t5496;
  t5523 = t1281*t5504;
  t5527 = t1224*t5496;
  t5530 = t1177*t5504;
  t5531 = t5527 + t5530;
  t5535 = t1177*t5496;
  t5536 = -1.*t1224*t5504;
  t5537 = t5535 + t5536;
  t5550 = t1412*t5531;
  t5551 = t1432*t5537;
  t5553 = -1.*t1402*t5531;
  t5554 = t1379*t5537;
  t5556 = t5553 + t5554;
  t5558 = t1379*t5531;
  t5560 = t1402*t5537;
  t5561 = t5558 + t5560;
  t5398 = -0.0233*t635;
  t5658 = -1.*t4124;
  t5659 = 1. + t5658;
  t5661 = 0.135*t5659*t241;
  t5671 = t4124*t241*t5073;
  t5674 = -0.049*t5065;
  t5687 = t5674 + t4142;
  t5688 = t635*t5687;
  t5696 = t4124*t4078*t241;
  t5699 = -1.*t635*t4102;
  t5701 = t5696 + t5699;
  t5689 = t4078*t635;
  t5690 = t4124*t241*t4102;
  t5691 = t5689 + t5690;
  t5714 = t5691*t4204;
  t5715 = -1.*t241*t4132*t5108;
  t5716 = t4188*t5691;
  t5719 = -1.*t241*t4132*t4198;
  t5726 = t5716 + t5719;
  t5730 = -1.*t4188*t241*t4132;
  t5731 = -1.*t5691*t4198;
  t5737 = t5730 + t5731;
  t5752 = t4233*t5726;
  t5753 = t4246*t5737;
  t5754 = -1.*t4226*t5726;
  t5756 = t4215*t5737;
  t5759 = t5754 + t5756;
  t5761 = t4215*t5726;
  t5762 = t4226*t5737;
  t5763 = t5761 + t5762;
  t5781 = t4310*t5759;
  t5782 = t4316*t5763;
  t5783 = t4299*t5759;
  t5785 = t4293*t5763;
  t5786 = t5783 + t5785;
  t5788 = t4293*t5759;
  t5791 = -1.*t4299*t5763;
  t5793 = t5788 + t5791;
  t5910 = 0.049*t4188;
  t5914 = t5910 + t4201;
  t5915 = t4781*t5914;
  t5923 = -0.09*t4188;
  t5924 = -0.049*t4198;
  t5926 = t5923 + t5924;
  t5927 = t4758*t5926;
  t5930 = -1.*t4188*t4758;
  t5931 = -1.*t4781*t4198;
  t5934 = t5930 + t5931;
  t5945 = t4246*t5934;
  t5950 = t4233*t4821;
  t5952 = t4226*t5934;
  t5953 = t5952 + t4822;
  t5964 = t4215*t5934;
  t5966 = -1.*t4226*t4821;
  t5967 = t5964 + t5966;
  t5984 = t4316*t5953;
  t5985 = t4310*t5967;
  t5986 = -1.*t4299*t5953;
  t5987 = t4293*t5967;
  t5989 = t5986 + t5987;
  t5992 = t4293*t5953;
  t5995 = t4299*t5967;
  t5997 = t5992 + t5995;
  t6136 = -0.21*t4215;
  t6137 = -0.049*t4226;
  t6144 = t6136 + t6137;
  t6148 = t6144*t4805;
  t6150 = 0.049*t4215;
  t6151 = t6150 + t4232;
  t6155 = t6151*t4821;
  t6163 = -1.*t4215*t4805;
  t6165 = t6163 + t5966;
  t6211 = t4316*t4825;
  t6212 = 0.01841*t4293;
  t6220 = 0.70544*t4299;
  t6223 = t6212 + t6220;
  t6225 = t6223*t4825;
  t6227 = t4310*t6165;
  t6231 = 0.70544*t4293;
  t6242 = t6231 + t4302;
  t6246 = t6242*t4839;
  t6248 = t4293*t6165;
  t6250 = t6248 + t4845;
  t6266 = t4299*t6165;
  t6268 = t4299*t4839;
  t6272 = t6266 + t6268;
  t276 = t39*t131;
  t280 = -1.*t219*t176*t47;
  t333 = t276 + t280;
  t6354 = t131*t219*t176;
  t6355 = t39*t47;
  t6358 = t6354 + t6355;
  t6365 = -0.135*t42*t594*t219;
  t6374 = -0.135*t5384*t333;
  t6376 = -1.*t42*t594*t219;
  t6384 = t606*t333;
  t6385 = t6376 + t6384;
  t6392 = -1.*t606*t42*t219;
  t6393 = -1.*t594*t333;
  t6394 = t6392 + t6393;
  t6405 = t5414*t6358;
  t6406 = t2769*t6385;
  t6416 = -1.*t488*t6358;
  t6417 = t433*t6385;
  t6424 = t6416 + t6417;
  t6433 = t433*t6358;
  t6436 = t488*t6385;
  t6437 = t6433 + t6436;
  t6453 = t2788*t6394;
  t6461 = t748*t6437;
  t6464 = t737*t6394;
  t6467 = t668*t6437;
  t6471 = t6464 + t6467;
  t6477 = t668*t6394;
  t6478 = -1.*t737*t6437;
  t6480 = t6477 + t6478;
  t6494 = t1055*t6471;
  t6496 = t1077*t6480;
  t6498 = -1.*t1026*t6471;
  t6500 = t994*t6480;
  t6512 = t6498 + t6500;
  t6514 = t994*t6471;
  t6517 = t1026*t6480;
  t6518 = t6514 + t6517;
  t6529 = t1250*t6512;
  t6530 = t1281*t6518;
  t6532 = t1224*t6512;
  t6539 = t1177*t6518;
  t6540 = t6532 + t6539;
  t6547 = t1177*t6512;
  t6548 = -1.*t1224*t6518;
  t6549 = t6547 + t6548;
  t6561 = t1412*t6540;
  t6563 = t1432*t6549;
  t6566 = -1.*t1402*t6540;
  t6569 = t1379*t6549;
  t6570 = t6566 + t6569;
  t6574 = t1379*t6540;
  t6575 = t1402*t6549;
  t6581 = t6574 + t6575;
  t6366 = -0.0233*t6358;
  t6715 = 0.135*t5659*t333;
  t6722 = 0.135*t42*t219*t4132;
  t6738 = -1.*t42*t4124*t219;
  t6741 = -1.*t333*t4132;
  t6743 = t6738 + t6741;
  t6723 = t4124*t333;
  t6730 = -1.*t42*t219*t4132;
  t6732 = t6723 + t6730;
  t6756 = t6732*t5073;
  t6757 = t6358*t5687;
  t6759 = t4078*t6732;
  t6761 = -1.*t6358*t4102;
  t6762 = t6759 + t6761;
  t6766 = t4078*t6358;
  t6767 = t6732*t4102;
  t6768 = t6766 + t6767;
  t6779 = t6768*t4204;
  t6780 = t6743*t5108;
  t6781 = t4188*t6768;
  t6785 = t6743*t4198;
  t6787 = t6781 + t6785;
  t6791 = t4188*t6743;
  t6793 = -1.*t6768*t4198;
  t6794 = t6791 + t6793;
  t6802 = t4233*t6787;
  t6803 = t4246*t6794;
  t6804 = -1.*t4226*t6787;
  t6806 = t4215*t6794;
  t6810 = t6804 + t6806;
  t6815 = t4215*t6787;
  t6817 = t4226*t6794;
  t6820 = t6815 + t6817;
  t6843 = t4310*t6810;
  t6853 = t4316*t6820;
  t6857 = t4299*t6810;
  t6859 = t4293*t6820;
  t6860 = t6857 + t6859;
  t6862 = t4293*t6810;
  t6867 = -1.*t4299*t6820;
  t6868 = t6862 + t6867;
  t6992 = -0.135*t39*t594*t176;
  t6993 = -0.135*t5384*t39*t42*t47;
  t6996 = -1.*t39*t594*t176;
  t6999 = t606*t39*t42*t47;
  t7002 = t6996 + t6999;
  t7009 = -1.*t606*t39*t176;
  t7011 = -1.*t39*t42*t594*t47;
  t7016 = t7009 + t7011;
  t7029 = -1.*t39*t42*t131*t5414;
  t7031 = t2769*t7002;
  t7041 = t39*t42*t131*t488;
  t7044 = t433*t7002;
  t7045 = t7041 + t7044;
  t7055 = -1.*t433*t39*t42*t131;
  t7056 = t488*t7002;
  t7057 = t7055 + t7056;
  t7071 = t2788*t7016;
  t7076 = t748*t7057;
  t7077 = t737*t7016;
  t7078 = t668*t7057;
  t7079 = t7077 + t7078;
  t7083 = t668*t7016;
  t7084 = -1.*t737*t7057;
  t7086 = t7083 + t7084;
  t7095 = t1055*t7079;
  t7101 = t1077*t7086;
  t7104 = -1.*t1026*t7079;
  t7106 = t994*t7086;
  t7107 = t7104 + t7106;
  t7111 = t994*t7079;
  t7113 = t1026*t7086;
  t7116 = t7111 + t7113;
  t7127 = t1250*t7107;
  t7128 = t1281*t7116;
  t7129 = t1224*t7107;
  t7136 = t1177*t7116;
  t7139 = t7129 + t7136;
  t7145 = t1177*t7107;
  t7149 = -1.*t1224*t7116;
  t7152 = t7145 + t7149;
  t7164 = t1412*t7139;
  t7165 = t1432*t7152;
  t7174 = -1.*t1402*t7139;
  t7175 = t1379*t7152;
  t7177 = t7174 + t7175;
  t7184 = t1379*t7139;
  t7188 = t1402*t7152;
  t7191 = t7184 + t7188;
  t6991 = 0.0233*t39*t42*t131;
  t7275 = 0.135*t39*t42*t5659*t47;
  t7278 = 0.135*t39*t176*t4132;
  t7292 = -1.*t39*t4124*t176;
  t7293 = -1.*t39*t42*t47*t4132;
  t7294 = t7292 + t7293;
  t7280 = t39*t42*t4124*t47;
  t7284 = -1.*t39*t176*t4132;
  t7288 = t7280 + t7284;
  t7309 = t7288*t5073;
  t7316 = -1.*t39*t42*t131*t5687;
  t7317 = t4078*t7288;
  t7322 = t39*t42*t131*t4102;
  t7324 = t7317 + t7322;
  t7329 = -1.*t39*t42*t131*t4078;
  t7330 = t7288*t4102;
  t7336 = t7329 + t7330;
  t7344 = t7336*t4204;
  t7347 = t7294*t5108;
  t7351 = t4188*t7336;
  t7355 = t7294*t4198;
  t7357 = t7351 + t7355;
  t7360 = t4188*t7294;
  t7361 = -1.*t7336*t4198;
  t7362 = t7360 + t7361;
  t7381 = t4233*t7357;
  t7383 = t4246*t7362;
  t7384 = -1.*t4226*t7357;
  t7386 = t4215*t7362;
  t7391 = t7384 + t7386;
  t7402 = t4215*t7357;
  t7403 = t4226*t7362;
  t7405 = t7402 + t7403;
  t7434 = t4310*t7391;
  t7438 = t4316*t7405;
  t7439 = t4299*t7391;
  t7447 = t4293*t7405;
  t7448 = t7439 + t7447;
  t7452 = t4293*t7391;
  t7453 = -1.*t4299*t7405;
  t7454 = t7452 + t7453;
  t7567 = t4124*t219;
  t7568 = t7567 + t4135;
  t7573 = t4078*t7568;
  t7575 = t39*t176*t4102;
  t7576 = t7573 + t7575;
  t7598 = -1.*t4188*t4226*t7576;
  t7599 = -1.*t4215*t7576*t4198;
  t7600 = t7598 + t7599;
  t7608 = t4215*t4188*t7576;
  t7609 = -1.*t4226*t7576*t4198;
  t7610 = t7608 + t7609;
  t7615 = t4299*t7600;
  t7620 = t4293*t7610;
  t7627 = t7615 + t7620;
  t7637 = t4293*t7600;
  t7640 = -1.*t4299*t7610;
  t7641 = t7637 + t7640;
  t7679 = -1.*t219*t4132;
  t7682 = t4770 + t7679;
  t7694 = -1.*t4124*t219;
  t7696 = t7694 + t5042;
  t7705 = t4188*t7682*t4102;
  t7707 = t7696*t4198;
  t7708 = t7705 + t7707;
  t7713 = t4188*t7696;
  t7717 = -1.*t7682*t4102*t4198;
  t7718 = t7713 + t7717;
  t7735 = -1.*t4226*t7708;
  t7745 = t4215*t7718;
  t7747 = t7735 + t7745;
  t7749 = t4215*t7708;
  t7750 = t4226*t7718;
  t7754 = t7749 + t7750;
  t7764 = t4299*t7747;
  t7767 = t4293*t7754;
  t7773 = t7764 + t7767;
  t7787 = t4293*t7747;
  t7789 = -1.*t4299*t7754;
  t7791 = t7787 + t7789;
  t7834 = -1.*t39*t42*t4078;
  t7838 = -1.*t39*t176*t4132*t4102;
  t7841 = t7834 + t7838;
  t7851 = t4188*t7841;
  t7852 = -1.*t39*t4124*t176*t4198;
  t7853 = t7851 + t7852;
  t7857 = -1.*t39*t4124*t4188*t176;
  t7859 = -1.*t7841*t4198;
  t7862 = t7857 + t7859;
  t7864 = -1.*t4226*t7853;
  t7865 = t4215*t7862;
  t7867 = t7864 + t7865;
  t7878 = t4215*t7853;
  t7880 = t4226*t7862;
  t7886 = t7878 + t7880;
  t7900 = t4299*t7867;
  t7902 = t4293*t7886;
  t7903 = t7900 + t7902;
  t7912 = t4293*t7867;
  t7914 = -1.*t4299*t7886;
  t7917 = t7912 + t7914;
  t7940 = -1.*t39*t4078*t176;
  t7941 = t7568*t4102;
  t7942 = t7940 + t7941;
  t7946 = -1.*t4188*t7942;
  t7947 = -1.*t7682*t4198;
  t7949 = t7946 + t7947;
  t7954 = t4188*t7682;
  t7959 = -1.*t7942*t4198;
  t7963 = t7954 + t7959;
  t7969 = t4226*t7949;
  t7974 = t4215*t7963;
  t7976 = t7969 + t7974;
  t7991 = t4215*t7949;
  t7992 = -1.*t4226*t7963;
  t7998 = t7991 + t7992;
  t8002 = -1.*t4299*t7976;
  t8004 = t4293*t7998;
  t8005 = t8002 + t8004;
  t8013 = t4293*t7976;
  t8015 = t4299*t7998;
  t8021 = t8013 + t8015;
  t4974 = -1.11344*t4573;
  t4975 = -0.02159*t4578;
  t4983 = t4974 + t4975;
  t8041 = t4188*t7942;
  t8047 = t7682*t4198;
  t8051 = t8041 + t8047;
  t4994 = 0.02159*t4573;
  t4995 = t4994 + t4584;
  t8053 = -1.*t4226*t8051;
  t8054 = t8053 + t7974;
  t8057 = t4215*t8051;
  t8060 = t4226*t7963;
  t8062 = t8057 + t8060;
  t8055 = t4299*t8054;
  t8065 = t4293*t8062;
  t8067 = t8055 + t8065;
  t8082 = t4293*t8054;
  t8084 = -1.*t4299*t8062;
  t8089 = t8082 + t8084;
  t8123 = -1.*t4215*t8051;
  t8125 = t8123 + t7992;
  t8131 = t4293*t8125;
  t8135 = t8131 + t8065;
  t8141 = t4299*t8125;
  t8143 = t4299*t8062;
  t8144 = t8141 + t8143;
  t8183 = t39*t4124;
  t8188 = t8183 + t6730;
  t8207 = t4078*t219*t176;
  t8208 = t8188*t4102;
  t8210 = t8207 + t8208;
  t8222 = -1.*t39*t4132;
  t8223 = t6738 + t8222;
  t8227 = t4188*t8210;
  t8238 = t8223*t4198;
  t8240 = t8227 + t8238;
  t8249 = t4188*t8223;
  t8252 = -1.*t8210*t4198;
  t8253 = t8249 + t8252;
  t8261 = -1.*t4226*t8240;
  t8267 = t4215*t8253;
  t8269 = t8261 + t8267;
  t8272 = t4215*t8240;
  t8275 = t4226*t8253;
  t8281 = t8272 + t8275;
  t8287 = t4299*t8269;
  t8294 = t4293*t8281;
  t8300 = t8287 + t8294;
  t8317 = t4293*t8269;
  t8320 = -1.*t4299*t8281;
  t8321 = t8317 + t8320;
  t8355 = t4078*t176*t4132;
  t8356 = -1.*t42*t4102;
  t8358 = t8355 + t8356;
  t8374 = -1.*t4188*t4226*t8358;
  t8378 = -1.*t4215*t8358*t4198;
  t8381 = t8374 + t8378;
  t8386 = t4215*t4188*t8358;
  t8389 = -1.*t4226*t8358*t4198;
  t8390 = t8386 + t8389;
  t8399 = t4299*t8381;
  t8403 = t4293*t8390;
  t8405 = t8399 + t8403;
  t8415 = t4293*t8381;
  t8416 = -1.*t4299*t8390;
  t8419 = t8415 + t8416;
  t8446 = t4124*t4188*t176*t4102;
  t8447 = -1.*t176*t4132*t4198;
  t8451 = t8446 + t8447;
  t8454 = -1.*t4188*t176*t4132;
  t8455 = -1.*t4124*t176*t4102*t4198;
  t8457 = t8454 + t8455;
  t8460 = -1.*t4226*t8451;
  t8467 = t4215*t8457;
  t8468 = t8460 + t8467;
  t8475 = t4215*t8451;
  t8479 = t4226*t8457;
  t8484 = t8475 + t8479;
  t8486 = t4299*t8468;
  t8488 = t4293*t8484;
  t8491 = t8486 + t8488;
  t8509 = t4293*t8468;
  t8512 = -1.*t4299*t8484;
  t8517 = t8509 + t8512;
  t8558 = -1.*t4078*t176;
  t8559 = t42*t4132*t4102;
  t8560 = t8558 + t8559;
  t8564 = t4188*t8560;
  t8565 = t42*t4124*t4198;
  t8566 = t8564 + t8565;
  t8569 = t42*t4124*t4188;
  t8572 = -1.*t8560*t4198;
  t8573 = t8569 + t8572;
  t8575 = -1.*t4226*t8566;
  t8577 = t4215*t8573;
  t8578 = t8575 + t8577;
  t8580 = t4215*t8566;
  t8581 = t4226*t8573;
  t8582 = t8580 + t8581;
  t8585 = t4299*t8578;
  t8587 = t4293*t8582;
  t8588 = t8585 + t8587;
  t8591 = t4293*t8578;
  t8592 = -1.*t4299*t8582;
  t8593 = t8591 + t8592;
  t8613 = t42*t4078;
  t8614 = t176*t4132*t4102;
  t8617 = t8613 + t8614;
  t8619 = -1.*t4188*t8617;
  t8620 = -1.*t4124*t176*t4198;
  t8622 = t8619 + t8620;
  t8625 = t4124*t4188*t176;
  t8626 = -1.*t8617*t4198;
  t8628 = t8625 + t8626;
  t8632 = t4226*t8622;
  t8633 = t4215*t8628;
  t8634 = t8632 + t8633;
  t8640 = t4215*t8622;
  t8641 = -1.*t4226*t8628;
  t8642 = t8640 + t8641;
  t8645 = -1.*t4299*t8634;
  t8646 = t4293*t8642;
  t8647 = t8645 + t8646;
  t8651 = t4293*t8634;
  t8652 = t4299*t8642;
  t8654 = t8651 + t8652;
  t8675 = t4188*t8617;
  t8676 = t4124*t176*t4198;
  t8678 = t8675 + t8676;
  t8679 = -1.*t4226*t8678;
  t8680 = t8679 + t8633;
  t8682 = t4215*t8678;
  t8683 = t4226*t8628;
  t8684 = t8682 + t8683;
  t8681 = t4299*t8680;
  t8690 = t4293*t8684;
  t8692 = t8681 + t8690;
  t8695 = t4293*t8680;
  t8696 = -1.*t4299*t8684;
  t8697 = t8695 + t8696;
  t8733 = -1.*t4215*t8678;
  t8736 = t8733 + t8641;
  t8739 = t4293*t8736;
  t8743 = t8739 + t8690;
  t8749 = t4299*t8736;
  t8753 = t4299*t8684;
  t8757 = t8749 + t8753;
  t8195 = t4078*t8188;
  t8200 = -1.*t219*t176*t4102;
  t8202 = t8195 + t8200;
  t8802 = -1.*t4188*t4226*t8202;
  t8804 = -1.*t4215*t8202*t4198;
  t8807 = t8802 + t8804;
  t8813 = t4215*t4188*t8202;
  t8814 = -1.*t4226*t8202*t4198;
  t8815 = t8813 + t8814;
  t8817 = t4299*t8807;
  t8819 = t4293*t8815;
  t8821 = t8817 + t8819;
  t8823 = t4293*t8807;
  t8826 = -1.*t4299*t8815;
  t8827 = t8823 + t8826;
  t8863 = -1.*t39*t4124;
  t8864 = t42*t219*t4132;
  t8867 = t8863 + t8864;
  t8872 = t4188*t8223*t4102;
  t8873 = t8867*t4198;
  t8876 = t8872 + t8873;
  t8880 = t4188*t8867;
  t8883 = -1.*t8223*t4102*t4198;
  t8886 = t8880 + t8883;
  t8888 = -1.*t4226*t8876;
  t8889 = t4215*t8886;
  t8891 = t8888 + t8889;
  t8895 = t4215*t8876;
  t8897 = t4226*t8886;
  t8899 = t8895 + t8897;
  t8903 = t4299*t8891;
  t8905 = t4293*t8899;
  t8908 = t8903 + t8905;
  t8913 = t4293*t8891;
  t8917 = -1.*t4299*t8899;
  t8918 = t8913 + t8917;
  t8950 = t42*t4078*t219;
  t8952 = t219*t176*t4132*t4102;
  t8953 = t8950 + t8952;
  t8957 = t4188*t8953;
  t8960 = t4124*t219*t176*t4198;
  t8961 = t8957 + t8960;
  t8964 = t4124*t4188*t219*t176;
  t8965 = -1.*t8953*t4198;
  t8966 = t8964 + t8965;
  t8968 = -1.*t4226*t8961;
  t8969 = t4215*t8966;
  t8970 = t8968 + t8969;
  t8977 = t4215*t8961;
  t8978 = t4226*t8966;
  t8979 = t8977 + t8978;
  t8981 = t4299*t8970;
  t8983 = t4293*t8979;
  t8984 = t8981 + t8983;
  t8990 = t4293*t8970;
  t8992 = -1.*t4299*t8979;
  t8993 = t8990 + t8992;
  t7580 = t39*t4078*t176;
  t9034 = t7696*t4102;
  t9036 = t7580 + t9034;
  t9039 = -1.*t39*t42*t4124;
  t9040 = t219*t4132;
  t9041 = t9039 + t9040;
  t9044 = t4188*t9036;
  t9050 = t9041*t4198;
  t9052 = t9044 + t9050;
  t9054 = t4188*t9041;
  t9055 = -1.*t9036*t4198;
  t9057 = t9054 + t9055;
  t9062 = -1.*t4226*t9052;
  t9067 = t4215*t9057;
  t9068 = t9062 + t9067;
  t9082 = t4215*t9052;
  t9084 = t4226*t9057;
  t9085 = t9082 + t9084;
  t9088 = t4299*t9068;
  t9091 = t4293*t9085;
  t9098 = t9088 + t9091;
  t9103 = t4293*t9068;
  t9108 = -1.*t4299*t9085;
  t9111 = t9103 + t9108;
  t9149 = -1.*t4188*t8210;
  t9151 = -1.*t8223*t4198;
  t9152 = t9149 + t9151;
  t9168 = t4226*t9152;
  t9175 = t9168 + t8267;
  t9182 = t4215*t9152;
  t9184 = -1.*t4226*t8253;
  t9186 = t9182 + t9184;
  t9189 = -1.*t4299*t9175;
  t9190 = t4293*t9186;
  t9191 = t9189 + t9190;
  t9193 = t4293*t9175;
  t9194 = t4299*t9186;
  t9195 = t9193 + t9194;
  t8329 = -1.*t4578*t8300;
  t8330 = t4573*t8321;
  t8333 = t8329 + t8330;
  t9249 = -1.*t4215*t8240;
  t9250 = t9249 + t9184;
  t9255 = t4293*t9250;
  t9257 = t9255 + t8294;
  t9260 = t4299*t9250;
  t9261 = t4299*t8281;
  t9262 = t9260 + t9261;
  t4605 = -1.*t4578*t4324;
  t4607 = t4573*t4342;
  t4612 = t4605 + t4607;
  t4632 = t4573*t4324;
  t4637 = t4578*t4342;
  t4638 = t4632 + t4637;
  t5344 = -1.*t4578*t5252;
  t5352 = t4573*t5258;
  t5357 = t5344 + t5352;
  t5361 = t4573*t5252;
  t5363 = t4578*t5258;
  t5364 = t5361 + t5363;
  t5871 = -1.*t4578*t5786;
  t5873 = t4573*t5793;
  t5876 = t5871 + t5873;
  t5881 = t4573*t5786;
  t5893 = t4578*t5793;
  t5894 = t5881 + t5893;
  t6079 = t4578*t5989;
  t6098 = t4573*t5997;
  t6106 = t6079 + t6098;
  t6109 = t4573*t5989;
  t6110 = -1.*t4578*t5997;
  t6115 = t6109 + t6110;
  t4999 = -1.*t4578*t4846;
  t5000 = t4573*t4895;
  t5002 = t4999 + t5000;
  t5008 = -1.*t4573*t4846;
  t5009 = -1.*t4578*t4895;
  t5016 = t5008 + t5009;
  t6316 = t4578*t6250;
  t6321 = t4573*t6272;
  t6324 = t6316 + t6321;
  t6332 = t4573*t6250;
  t6333 = -1.*t4578*t6272;
  t6338 = t6332 + t6333;
  t6944 = -1.*t4578*t6860;
  t6945 = t4573*t6868;
  t6947 = t6944 + t6945;
  t6950 = t4573*t6860;
  t6951 = t4578*t6868;
  t6958 = t6950 + t6951;
  t7536 = -1.*t4578*t7448;
  t7540 = t4573*t7454;
  t7541 = t7536 + t7540;
  t7546 = t4573*t7448;
  t7551 = t4578*t7454;
  t7554 = t7546 + t7551;
  p_output1[0]=t333*var2[3] + t39*t42*t47*var2[4] + t241*var2[5];
  p_output1[1]=(-1.*t131*t176*t219 - 1.*t39*t47)*var2[3] + t131*t39*t42*var2[4] + (-1.*t131*t219 - 1.*t176*t39*t47)*var2[5];
  p_output1[2]=var2[15];
  p_output1[3]=var2[2] + 0.0288377642750394*(10.33*(0.000346*t333 - 0.02841*t219*t42 + 0.05066*t6358) + 1.965608*(t6365 + t6366 + t6374 - 0.1351*t6385 + 0.01793*t6394) + 1.316608*(t6365 + t6374 - 0.0343*t6394 + t6405 + t6406 - 0.135*t6424 - 0.049*t6437) + 5.79228*(t6365 + t6374 + t6405 + t6406 - 0.17081*t6424 + t6453 + t6461 - 0.04895*t6471 - 0.14946*t6480) + 1.03008*(t6365 + t6374 + t6405 + t6406 - 0.132168*t6424 + t6453 + t6461 + t6494 + t6496 - 0.255862*t6512 - 0.007761*t6518) + 0.763*(t6365 + t6374 + t6405 + t6406 - 0.130288*t6424 + t6453 + t6461 + t6494 + t6496 + t6529 + t6530 - 0.000421*t6540 - 0.45406*t6549) + 1.03*(t6365 + t6374 + t6405 + t6406 - 0.127241*t6424 + t6453 + t6461 + t6494 + t6496 + t6529 + t6530 + t6561 + t6563 - 0.826587*t6570 - 0.004179*t6581) + 0.126*(t6365 + t6374 + t6405 + t6406 + t1608*t6424 + t6453 + t6461 + t6494 + t6496 + t6529 + t6530 + t6561 + t6563 + t1652*t6570 + t1671*t6581 + 0.01889*(t1677*t6424 + t1692*t6570 + t1717*t6581) - 0.617968*(t1759*t6424 + t1777*t6570 + t1795*t6581) - 0.126739*(t1859*t6424 + t1870*t6570 + t1883*t6581)) + 0.1498*(t6365 + t6374 + t6405 + t6406 - 0.13064*t6424 + t6453 + t6461 + t6494 + t6496 + t6529 + t6530 + t6561 + t6563 + t2054*t6570 + t2061*t6581 + 0.00589*(t2044*t6570 + t2013*t6581) - 1.11818*(t2013*t6570 - 1.*t2044*t6581)) + 1.965608*(t6366 + t6715 + t6722 + 0.1351*t6732 + 0.01793*t6743) + 1.316608*(t6715 + t6722 - 0.0343*t6743 + t6756 + t6757 + 0.135*t6762 - 0.049*t6768) + 5.79228*(t6715 + t6722 + t6756 + t6757 + 0.17081*t6762 + t6779 + t6780 - 0.04895*t6787 - 0.14946*t6794) + 1.03008*(t6715 + t6722 + t6756 + t6757 + 0.132168*t6762 + t6779 + t6780 + t6802 + t6803 - 0.255862*t6810 - 0.007761*t6820) + 0.763*(t6715 + t6722 + t6756 + t6757 + 0.130288*t6762 + t6779 + t6780 + t6802 + t6803 - 0.45406*t6810 - 0.000421*t6820) + 1.03*(t6715 + t6722 + t6756 + t6757 + 0.127241*t6762 + t6779 + t6780 + t6802 + t6803 + t6843 + t6853 - 0.004179*t6860 - 0.826587*t6868) + 0.126*(t6715 + t6722 + t6756 + t6757 + t4400*t6762 + t6779 + t6780 + t6802 + t6803 + t6843 + t6853 + t4439*t6860 + t4488*t6868 - 0.617968*(t4503*t6762 + t4506*t6860 + t4511*t6868) + 0.126739*(t4524*t6762 + t4531*t6860 + t4534*t6868) + 0.01889*(t4544*t6762 + t4554*t6860 + t4560*t6868)) + 0.1498*(t6715 + t6722 + t6756 + t6757 + 0.13064*t6762 + t6779 + t6780 + t6802 + t6803 + t6843 + t6853 + t4586*t6860 + t4600*t6868 - 1.11818*t6947 + 0.00589*t6958))*var2[3] + 0.0288377642750394*(10.33*(-0.02841*t176*t39 - 0.05066*t131*t39*t42 + 0.000346*t39*t42*t47) + 1.965608*(t6991 + t6992 + t6993 - 0.1351*t7002 + 0.01793*t7016) + 1.316608*(t6992 + t6993 - 0.0343*t7016 + t7029 + t7031 - 0.135*t7045 - 0.049*t7057) + 5.79228*(t6992 + t6993 + t7029 + t7031 - 0.17081*t7045 + t7071 + t7076 - 0.04895*t7079 - 0.14946*t7086) + 1.03008*(t6992 + t6993 + t7029 + t7031 - 0.132168*t7045 + t7071 + t7076 + t7095 + t7101 - 0.255862*t7107 - 0.007761*t7116) + 0.763*(t6992 + t6993 + t7029 + t7031 - 0.130288*t7045 + t7071 + t7076 + t7095 + t7101 + t7127 + t7128 - 0.000421*t7139 - 0.45406*t7152) + 1.03*(t6992 + t6993 + t7029 + t7031 - 0.127241*t7045 + t7071 + t7076 + t7095 + t7101 + t7127 + t7128 + t7164 + t7165 - 0.826587*t7177 - 0.004179*t7191) + 0.126*(t6992 + t6993 + t7029 + t7031 + t1608*t7045 + t7071 + t7076 + t7095 + t7101 + t7127 + t7128 + t7164 + t7165 + t1652*t7177 + t1671*t7191 + 0.01889*(t1677*t7045 + t1692*t7177 + t1717*t7191) - 0.617968*(t1759*t7045 + t1777*t7177 + t1795*t7191) - 0.126739*(t1859*t7045 + t1870*t7177 + t1883*t7191)) + 0.1498*(t6992 + t6993 + t7029 + t7031 - 0.13064*t7045 + t7071 + t7076 + t7095 + t7101 + t7127 + t7128 + t7164 + t7165 + t2054*t7177 + t2061*t7191 + 0.00589*(t2044*t7177 + t2013*t7191) - 1.11818*(t2013*t7177 - 1.*t2044*t7191)) + 1.965608*(t6991 + t7275 + t7278 + 0.1351*t7288 + 0.01793*t7294) + 1.316608*(t7275 + t7278 - 0.0343*t7294 + t7309 + t7316 + 0.135*t7324 - 0.049*t7336) + 5.79228*(t7275 + t7278 + t7309 + t7316 + 0.17081*t7324 + t7344 + t7347 - 0.04895*t7357 - 0.14946*t7362) + 1.03008*(t7275 + t7278 + t7309 + t7316 + 0.132168*t7324 + t7344 + t7347 + t7381 + t7383 - 0.255862*t7391 - 0.007761*t7405) + 0.763*(t7275 + t7278 + t7309 + t7316 + 0.130288*t7324 + t7344 + t7347 + t7381 + t7383 - 0.45406*t7391 - 0.000421*t7405) + 1.03*(t7275 + t7278 + t7309 + t7316 + 0.127241*t7324 + t7344 + t7347 + t7381 + t7383 + t7434 + t7438 - 0.004179*t7448 - 0.826587*t7454) + 0.126*(t7275 + t7278 + t7309 + t7316 + t4400*t7324 + t7344 + t7347 + t7381 + t7383 + t7434 + t7438 + t4439*t7448 + t4488*t7454 - 0.617968*(t4503*t7324 + t4506*t7448 + t4511*t7454) + 0.126739*(t4524*t7324 + t4531*t7448 + t4534*t7454) + 0.01889*(t4544*t7324 + t4554*t7448 + t4560*t7454)) + 0.1498*(t7275 + t7278 + t7309 + t7316 + 0.13064*t7324 + t7344 + t7347 + t7381 + t7383 + t7434 + t7438 + t4586*t7448 + t4600*t7454 - 1.11818*t7541 + 0.00589*t7554))*var2[4] + 0.0288377642750394*(5.79228*(t5385 + t5410 + t5415 - 0.17081*t5429 + t5437 + t5439 - 0.04895*t5448 - 0.14946*t5465) + 1.03008*(t5385 + t5410 + t5415 - 0.132168*t5429 + t5437 + t5439 + t5483 + t5487 - 0.255862*t5496 - 0.007761*t5504) + 0.763*(t5385 + t5410 + t5415 - 0.130288*t5429 + t5437 + t5439 + t5483 + t5487 + t5518 + t5523 - 0.000421*t5531 - 0.45406*t5537) + 1.03*(t5385 + t5410 + t5415 - 0.127241*t5429 + t5437 + t5439 + t5483 + t5487 + t5518 + t5523 + t5550 + t5551 - 0.826587*t5556 - 0.004179*t5561) + 0.126*(t5385 + t5410 + t5415 + t1608*t5429 + t5437 + t5439 + t5483 + t5487 + t5518 + t5523 + t5550 + t5551 + t1652*t5556 + t1671*t5561 + 0.01889*(t1677*t5429 + t1692*t5556 + t1717*t5561) - 0.617968*(t1759*t5429 + t1777*t5556 + t1795*t5561) - 0.126739*(t1859*t5429 + t1870*t5556 + t1883*t5561)) + 0.1498*(t5385 + t5410 + t5415 - 0.13064*t5429 + t5437 + t5439 + t5483 + t5487 + t5518 + t5523 + t5550 + t5551 + t2054*t5556 + t2061*t5561 + 0.00589*(t2044*t5556 + t2013*t5561) - 1.11818*(t2013*t5556 - 1.*t2044*t5561)) + 1.965608*(0.1351*t241*t4124 - 0.01793*t241*t4132 + t5398 + t5661) + 1.316608*(0.0343*t241*t4132 + t5661 + t5671 + t5688 - 0.049*t5691 + 0.135*t5701) + 5.79228*(t5661 + t5671 + t5688 + 0.17081*t5701 + t5714 + t5715 - 0.04895*t5726 - 0.14946*t5737) + 1.03008*(t5661 + t5671 + t5688 + 0.132168*t5701 + t5714 + t5715 + t5752 + t5753 - 0.255862*t5759 - 0.007761*t5763) + 0.763*(t5661 + t5671 + t5688 + 0.130288*t5701 + t5714 + t5715 + t5752 + t5753 - 0.45406*t5759 - 0.000421*t5763) + 1.03*(t5661 + t5671 + t5688 + 0.127241*t5701 + t5714 + t5715 + t5752 + t5753 + t5781 + t5782 - 0.004179*t5786 - 0.826587*t5793) + 0.126*(t5661 + t5671 + t5688 + t4400*t5701 + t5714 + t5715 + t5752 + t5753 + t5781 + t5782 + t4439*t5786 + t4488*t5793 - 0.617968*(t4503*t5701 + t4506*t5786 + t4511*t5793) + 0.126739*(t4524*t5701 + t4531*t5786 + t4534*t5793) + 0.01889*(t4544*t5701 + t4554*t5786 + t4560*t5793)) + 0.1498*(t5661 + t5671 + t5688 + 0.13064*t5701 + t5714 + t5715 + t5752 + t5753 + t5781 + t5782 + t4586*t5786 + t4600*t5793 - 1.11818*t5876 + 0.00589*t5894) + 1.316608*(t5385 + t5410 + t5415 - 0.049*t5421 - 0.135*t5429 + 0.0343*t241*t594) + 1.965608*(t5385 + t5398 - 0.01793*t241*t594 - 0.1351*t241*t606) + 10.33*(0.000346*t241 + 0.05066*t635))*var2[5] + 0.0288377642750394*(1.965608*(0.1351*t4781 + t5031 + t5032 + 0.01793*t5045) + 1.316608*(0.135*t4078*t4781 - 0.049*t4102*t4781 + t5031 + t5032 - 0.0343*t5045 + t5074) + 5.79228*(0.17081*t4078*t4781 + t5031 + t5032 + t5074 + t5097 + t5125 - 0.04895*t5152 - 0.14946*t5168) + 1.03008*(0.132168*t4078*t4781 + t5031 + t5032 + t5074 + t5097 + t5125 + t5185 + t5188 - 0.255862*t5203 - 0.007761*t5210) + 0.763*(0.130288*t4078*t4781 + t5031 + t5032 + t5074 + t5097 + t5125 + t5185 + t5188 - 0.45406*t5203 - 0.000421*t5210) + 1.03*(0.127241*t4078*t4781 + t5031 + t5032 + t5074 + t5097 + t5125 + t5185 + t5188 + t5233 + t5241 - 0.004179*t5252 - 0.826587*t5258) + 0.126*(t4078*t4400*t4781 + t5031 + t5032 + t5074 + t5097 + t5125 + t5185 + t5188 + t5233 + t5241 + t4439*t5252 + t4488*t5258 - 0.617968*(t4078*t4503*t4781 + t4506*t5252 + t4511*t5258) + 0.126739*(t4078*t4524*t4781 + t4531*t5252 + t4534*t5258) + 0.01889*(t4078*t4544*t4781 + t4554*t5252 + t4560*t5258)) + 0.1498*(0.13064*t4078*t4781 + t5031 + t5032 + t5074 + t5097 + t5125 + t5185 + t5188 + t5233 + t5241 + t4586*t5252 + t4600*t5258 - 1.11818*t5357 + 0.00589*t5364))*var2[6] + 0.0288377642750394*(1.316608*(t4118 + t4151 - 0.049*t4164 + 0.135*t4178) + 5.79228*(t4118 + t4151 + 0.17081*t4178 - 0.04895*t4164*t4188 + 0.14946*t4164*t4198 + t4205) + 1.03008*(t4118 + t4151 + 0.132168*t4178 + t4205 + t4235 + t4247 - 0.255862*t4251 - 0.007761*t4261) + 0.763*(t4118 + t4151 + 0.130288*t4178 + t4205 + t4235 + t4247 - 0.45406*t4251 - 0.000421*t4261) + 1.03*(t4118 + t4151 + 0.127241*t4178 + t4205 + t4235 + t4247 + t4311 + t4317 - 0.004179*t4324 - 0.826587*t4342) + 0.126*(t4118 + t4151 + t4205 + t4235 + t4247 + t4311 + t4317 + t4178*t4400 + t4324*t4439 + t4342*t4488 - 0.617968*(t4178*t4503 + t4324*t4506 + t4342*t4511) + 0.126739*(t4178*t4524 + t4324*t4531 + t4342*t4534) + 0.01889*(t4178*t4544 + t4324*t4554 + t4342*t4560)) + 0.1498*(t4118 + t4151 + 0.13064*t4178 + t4205 + t4235 + t4247 + t4311 + t4317 + t4324*t4586 + t4342*t4600 - 1.11818*t4612 + 0.00589*t4638))*var2[7] + 0.0288377642750394*(5.79228*(-0.04895*t4821 + t5915 + t5927 - 0.14946*t5934) + 0.763*(t5915 + t5927 + t5945 + t5950 - 0.000421*t5953 - 0.45406*t5967) + 1.03008*(t5915 + t5927 + t5945 + t5950 - 0.007761*t5953 - 0.255862*t5967) + 1.03*(t5915 + t5927 + t5945 + t5950 + t5984 + t5985 - 0.826587*t5989 - 0.004179*t5997) + 0.126*(t5915 + t5927 + t5945 + t5950 + t5984 + t5985 + t4488*t5989 + t4439*t5997 - 0.617968*(t4511*t5989 + t4506*t5997) + 0.126739*(t4534*t5989 + t4531*t5997) + 0.01889*(t4560*t5989 + t4554*t5997)) + 0.1498*(t5915 + t5927 + t5945 + t5950 + t5984 + t5985 + t4600*t5989 + t4586*t5997 + 0.00589*t6106 - 1.11818*t6115))*var2[8] + 0.0288377642750394*(0.763*(-0.000421*t4825 + t6148 + t6155 - 0.45406*t6165) + 1.03008*(-0.007761*t4825 + t6148 + t6155 - 0.255862*t6165) + 1.03*(t6148 + t6155 + t6211 + t6225 + t6227 + t6246 - 0.826587*t6250 - 0.004179*t6272) + 0.126*(t6148 + t6155 + t6211 + t6225 + t6227 + t6246 + t4488*t6250 + t4439*t6272 - 0.617968*(t4511*t6250 + t4506*t6272) + 0.126739*(t4534*t6250 + t4531*t6272) + 0.01889*(t4560*t6250 + t4554*t6272)) + 0.1498*(t6148 + t6155 + t6211 + t6225 + t6227 + t6246 + t4600*t6250 + t4586*t6272 + 0.00589*t6324 - 1.11818*t6338))*var2[9] + 0.00363355829865496*(t4164*(-2.1934241414728571e-7 + 0.000033783761634830594*t4373 - 0.021877537552*(t4657 + t4666) - 0.6934341012630001*(t4684 + t4688)) + (-1.7147089040178687e-8 - 0.021744644052735636*t4373 + 0.005534467322*(t4666 + t4712) - 0.6934341012630001*(t4727 + t4729))*t4846 + (-1.2096424700126054e-9 - 0.6934128581485427*t4373 + 0.005534467322*(t4688 + t4854) - 0.021877537552*(t4729 + t4874))*t4895 + 0.01889*(-0.993925573253*t4373*t4846 + t4164*(t4712 + t4901) + t4895*(t4727 + t4909)) + 0.126739*(-0.006104248100000001*t4164*t4373 + t4846*(t4657 + t4901) + t4895*(t4684 + t4929)) - 0.617968*(-0.999969365345*t4373*t4895 + t4846*(t4874 + t4909) + t4164*(t4854 + t4929)))*var2[12] + 0.0043198970884009*(t4846*t4983 + t4895*t4995 + 0.00589*t5002 - 1.11818*t5016)*var2[13] + 0.0288377642750394*(1.965608*(-0.1351*t2298 + t2720 + t2721 + 0.01793*t2730) + 5.79228*(t2720 + t2721 + t2773 + t2791 + t2798 - 0.04895*t2806 - 0.14946*t2814 - 0.17081*t2298*t433) + 1.03008*(t2720 + t2721 + t2773 + t2791 + t2798 + t2826 + t2827 - 0.255862*t2833 - 0.007761*t2840 - 0.132168*t2298*t433) + 0.1498*(t2720 + t2721 + t2773 + t2791 + t2798 + t2826 + t2827 + t2857 + t2858 + t2916 + t2919 + t2054*t2945 + t2061*t2953 + 0.00589*(t2044*t2945 + t2013*t2953) - 1.11818*(t2013*t2945 - 1.*t2044*t2953) - 0.13064*t2298*t433) + 0.763*(t2720 + t2721 + t2773 + t2791 + t2798 + t2826 + t2827 + t2857 + t2858 - 0.000421*t2872 - 0.45406*t2895 - 0.130288*t2298*t433) + 1.03*(t2720 + t2721 + t2773 + t2791 + t2798 + t2826 + t2827 + t2857 + t2858 + t2916 + t2919 - 0.826587*t2945 - 0.004179*t2953 - 0.127241*t2298*t433) + 0.126*(t2720 + t2721 + t2773 + t2791 + t2798 + t2826 + t2827 + t2857 + t2858 + t2916 + t2919 + t1652*t2945 + t1671*t2953 + t1608*t2298*t433 + 0.01889*(t1692*t2945 + t1717*t2953 + t1677*t2298*t433) - 0.617968*(t1777*t2945 + t1795*t2953 + t1759*t2298*t433) - 0.126739*(t1870*t2945 + t1883*t2953 + t1859*t2298*t433)) + 1.316608*(t2720 + t2721 - 0.0343*t2730 + t2773 - 0.135*t2298*t433 - 0.049*t2298*t488))*var2[14] + 0.0288377642750394*(5.79228*(t572 + t649 - 0.04895*t668*t703 + 0.14946*t703*t737 + t783 - 0.17081*t829) + 1.316608*(t572 + t649 - 0.049*t703 - 0.135*t829) + 1.03008*(t1061 + t1089 - 0.255862*t1128 - 0.007761*t1151 + t572 + t649 + t783 - 0.132168*t829) + 0.1498*(t1061 + t1089 + t1253 + t1294 + t1415 + t1478 + 0.00589*(t1522*t2013 + t1495*t2044) - 1.11818*(t1495*t2013 - 1.*t1522*t2044) + t1495*t2054 + t1522*t2061 + t572 + t649 + t783 - 0.13064*t829) + 0.763*(t1061 + t1089 + t1253 + t1294 - 0.000421*t1322 - 0.45406*t1364 + t572 + t649 + t783 - 0.130288*t829) + 1.03*(t1061 + t1089 + t1253 + t1294 + t1415 + t1478 - 0.826587*t1495 - 0.004179*t1522 + t572 + t649 + t783 - 0.127241*t829) + 0.126*(t1061 + t1089 + t1253 + t1294 + t1415 + t1478 + t1495*t1652 + t1522*t1671 + t572 + t649 + t783 + t1608*t829 + 0.01889*(t1495*t1692 + t1522*t1717 + t1677*t829) - 0.617968*(t1495*t1777 + t1522*t1795 + t1759*t829) - 0.126739*(t1495*t1870 + t1522*t1883 + t1859*t829)))*var2[15] + 0.0288377642750394*(5.79228*(-0.04895*t2349 + t3140 + t3151 - 0.14946*t3168) + 1.03008*(t3140 + t3151 + t3184 + t3186 - 0.007761*t3192 - 0.255862*t3204) + 0.763*(t3140 + t3151 + t3184 + t3186 + t3268 + t3269 - 0.45406*t3286 - 0.000421*t3317) + 1.03*(t3140 + t3151 + t3184 + t3186 + t3268 + t3269 + t3327 + t3331 - 0.004179*t3339 - 0.826587*t3362) + 0.126*(t3140 + t3151 + t3184 + t3186 + t3268 + t3269 + t3327 + t3331 + t1671*t3339 + t1652*t3362 + 0.01889*(t1717*t3339 + t1692*t3362) - 0.617968*(t1795*t3339 + t1777*t3362) - 0.126739*(t1883*t3339 + t1870*t3362)) + 0.1498*(t3140 + t3151 + t3184 + t3186 + t3268 + t3269 + t3327 + t3331 + t2061*t3339 + t2054*t3362 - 1.11818*(-1.*t2044*t3339 + t2013*t3362) + 0.00589*(t2013*t3339 + t2044*t3362)))*var2[16] + 0.0288377642750394*(1.03008*(-0.007761*t2356 + t3484 + t3494 - 0.255862*t3498) + 0.763*(t3484 + t3494 + t3514 + t3533 - 0.45406*t3540 - 0.000421*t3555) + 1.03*(t3484 + t3494 + t3514 + t3533 + t3571 + t3573 - 0.004179*t3592 - 0.826587*t3600) + 0.126*(t3484 + t3494 + t3514 + t3533 + t3571 + t3573 + t1671*t3592 + t1652*t3600 + 0.01889*(t1717*t3592 + t1692*t3600) - 0.617968*(t1795*t3592 + t1777*t3600) - 0.126739*(t1883*t3592 + t1870*t3600)) + 0.1498*(t3484 + t3494 + t3514 + t3533 + t3571 + t3573 + t2061*t3592 + t2054*t3600 - 1.11818*(-1.*t2044*t3592 + t2013*t3600) + 0.00589*(t2013*t3592 + t2044*t3600)))*var2[17] + 0.0288377642750394*(0.763*(-0.000421*t2402 + t3745 + t3757 - 0.45406*t3761) + 1.03*(t3745 + t3757 + t3772 + t3773 - 0.004179*t3778 - 0.826587*t3797) + 0.126*(t3745 + t3757 + t3772 + t3773 + t1671*t3778 + t1652*t3797 + 0.01889*(t1717*t3778 + t1692*t3797) - 0.617968*(t1795*t3778 + t1777*t3797) - 0.126739*(t1883*t3778 + t1870*t3797)) + 0.1498*(t3745 + t3757 + t3772 + t3773 + t2061*t3778 + t2054*t3797 - 1.11818*(-1.*t2044*t3778 + t2013*t3797) + 0.00589*(t2013*t3778 + t2044*t3797)))*var2[18] + 0.0288377642750394*(1.03*(-0.004179*t2412 + t3952 + t3969 - 0.826587*t3980) + 0.126*(t1671*t2412 + t3952 + t3969 + t1652*t3980 + 0.01889*(t1717*t2412 + t1692*t3980) - 0.617968*(t1795*t2412 + t1777*t3980) - 0.126739*(t1883*t2412 + t1870*t3980)) + 0.1498*(t2061*t2412 + t3952 + t3969 + t2054*t3980 - 1.11818*(t2676 + t2013*t3980) + 0.00589*(t2692 + t2044*t3980)))*var2[19] + 0.00363355829865496*((-1.2096424700126054e-9 - 0.6934128581485427*t1573 - 0.021877537552*(t2256 + t2260) - 0.005534467322*(t2212 + t2270))*t2412 + (-1.7147089040178687e-8 - 0.021744644052735636*t1573 - 0.6934341012630001*(t2260 + t2425) - 0.005534467322*(t2222 + t2438))*t2463 + (2.1934241414728571e-7 - 0.000033783761634830594*t1573 - 0.6934341012630001*(t2200 + t2212) - 0.021877537552*(t2220 + t2222))*t703 - 0.126739*(t2412*(t2200 + t2469) + t2463*(t2220 + t2473) - 0.006104248100000001*t1573*t703) - 0.617968*(-0.999969365345*t1573*t2412 + t2463*(t2256 + t2523) + (t2270 + t2469)*t703) + 0.01889*(-0.993925573253*t1573*t2463 + t2412*(t2425 + t2523) + (t2438 + t2473)*t703))*var2[20] + 0.0043198970884009*((0.02159*t2013 + t2059)*t2412 + (-1.11344*t2013 - 0.02159*t2044)*t2463 - 1.11818*(-1.*t2013*t2463 + t2676) + 0.00589*(-1.*t2044*t2463 + t2692))*var2[21];
  p_output1[4]=var2[2] + (0.135*t39*t5659 + t176*t219*t5687 + t6722 + t5073*t8188 + 0.1305*t8202 + t4204*t8210 + t5108*t8223 + t4233*t8240 + t4246*t8253 + t4310*t8269 + t4316*t8281 + t4586*t8300 + t4600*t8321 - 0.02159*(t4573*t8300 + t4578*t8321) - 1.11344*t8333)*var2[3] + (0.1305*(-1.*t176*t39*t4078*t4132 + t39*t4102*t42) - 1.*t176*t39*t4132*t5073 - 1.*t176*t39*t4124*t5108 - 1.*t39*t42*t5687 + t7278 + t4204*t7841 + t4233*t7853 + t4246*t7862 + t4310*t7867 + t4316*t7886 + t4586*t7903 + t4600*t7917 - 1.11344*(-1.*t4578*t7903 + t4573*t7917) - 0.02159*(t4573*t7903 + t4578*t7917))*var2[4] + (0.135*t219*t4132 + t5031 + 0.1305*t4078*t7682 + t4102*t4204*t7682 + t5073*t7682 + t5108*t7696 + t4233*t7708 + t4246*t7718 + t4310*t7747 + t4316*t7754 + t4586*t7773 + t4600*t7791 - 1.11344*(-1.*t4578*t7773 + t4573*t7791) - 0.02159*(t4573*t7773 + t4578*t7791))*var2[6] + (-1.*t176*t39*t4112 + t4145*t7568 + t4204*t7576 + t4188*t4233*t7576 - 1.*t4198*t4246*t7576 + 0.1305*(-1.*t4102*t7568 + t7580) + t4310*t7600 + t4316*t7610 + t4586*t7627 + t4600*t7641 - 1.11344*(-1.*t4578*t7627 + t4573*t7641) - 0.02159*(t4573*t7627 + t4578*t7641))*var2[7] + (t5914*t7682 + t5926*t7942 + t4246*t7949 + t4233*t7963 + t4316*t7976 + t4310*t7998 + t4600*t8005 + t4586*t8021 - 0.02159*(t4578*t8005 + t4573*t8021) - 1.11344*(t4573*t8005 - 1.*t4578*t8021))*var2[8] + (t6151*t7963 + t6144*t8051 + t4316*t8054 + t6223*t8054 + t6242*t8062 + t4310*t8125 + t4600*t8135 + t4586*t8144 - 0.02159*(t4578*t8135 + t4573*t8144) - 1.11344*(t4573*t8135 - 1.*t4578*t8144))*var2[9] + (t4983*t8067 + t4995*t8089 - 0.02159*(-1.*t4578*t8067 + t4573*t8089) - 1.11344*(-1.*t4573*t8067 - 1.*t4578*t8089))*var2[13];
  p_output1[5]=var2[0] + (-0.135*t4132*t42 + 0.1305*(t176*t4102 + t4078*t4132*t42) + t4132*t42*t5073 + t4124*t42*t5108 - 1.*t176*t5687 + t4204*t8560 + t4233*t8566 + t4246*t8573 + t4310*t8578 + t4316*t8582 + t4586*t8588 + t4600*t8593 - 1.11344*(-1.*t4578*t8588 + t4573*t8593) - 0.02159*(t4573*t8588 + t4578*t8593))*var2[4] + (-0.135*t176*t4124 + 0.1305*t176*t4078*t4124 + t176*t4102*t4124*t4204 + t176*t4124*t5073 - 1.*t176*t4132*t5108 + t4233*t8451 + t4246*t8457 + t4310*t8468 + t4316*t8484 + t4586*t8491 + t4600*t8517 - 1.11344*(-1.*t4578*t8491 + t4573*t8517) - 0.02159*(t4573*t8491 + t4578*t8517))*var2[6] + (t176*t4132*t4145 + t4112*t42 + 0.1305*(-1.*t176*t4102*t4132 - 1.*t4078*t42) + t4204*t8358 + t4188*t4233*t8358 - 1.*t4198*t4246*t8358 + t4310*t8381 + t4316*t8390 + t4586*t8405 + t4600*t8419 - 1.11344*(-1.*t4578*t8405 + t4573*t8419) - 0.02159*(t4573*t8405 + t4578*t8419))*var2[7] + (t176*t4124*t5914 + t5926*t8617 + t4246*t8622 + t4233*t8628 + t4316*t8634 + t4310*t8642 + t4600*t8647 + t4586*t8654 - 0.02159*(t4578*t8647 + t4573*t8654) - 1.11344*(t4573*t8647 - 1.*t4578*t8654))*var2[8] + (t6151*t8628 + t6144*t8678 + t4316*t8680 + t6223*t8680 + t6242*t8684 + t4310*t8736 + t4600*t8743 + t4586*t8757 - 0.02159*(t4578*t8743 + t4573*t8757) - 1.11344*(t4573*t8743 - 1.*t4578*t8757))*var2[9] + (t4983*t8692 + t4995*t8697 - 0.02159*(-1.*t4578*t8692 + t4573*t8697) - 1.11344*(-1.*t4573*t8692 - 1.*t4578*t8697))*var2[13];
  p_output1[6]=var2[1] + (0.135*t39*t4132*t42 - 0.135*t219*t5659 + t176*t39*t5687 + t5073*t7696 + 0.1305*(-1.*t176*t39*t4102 + t4078*t7696) + t4204*t9036 + t5108*t9041 + t4233*t9052 + t4246*t9057 + t4310*t9068 + t4316*t9085 + t4586*t9098 + t4600*t9111 - 1.11344*(-1.*t4578*t9098 + t4573*t9111) - 0.02159*(t4573*t9098 + t4578*t9111))*var2[3] + (-0.135*t176*t219*t4132 + 0.1305*(t176*t219*t4078*t4132 - 1.*t219*t4102*t42) + t176*t219*t4132*t5073 + t176*t219*t4124*t5108 + t219*t42*t5687 + t4204*t8953 + t4233*t8961 + t4246*t8966 + t4310*t8970 + t4316*t8979 + t4586*t8984 + t4600*t8993 - 1.11344*(-1.*t4578*t8984 + t4573*t8993) - 0.02159*(t4573*t8984 + t4578*t8993))*var2[4] + (0.135*t39*t4132 + 0.135*t219*t4124*t42 + 0.1305*t4078*t8223 + t4102*t4204*t8223 + t5073*t8223 + t5108*t8867 + t4233*t8876 + t4246*t8886 + t4310*t8891 + t4316*t8899 + t4586*t8908 + t4600*t8918 - 1.11344*(-1.*t4578*t8908 + t4573*t8918) - 0.02159*(t4573*t8908 + t4578*t8918))*var2[6] + (t176*t219*t4112 + t4145*t8188 + 0.1305*(-1.*t176*t219*t4078 - 1.*t4102*t8188) + t4204*t8202 + t4188*t4233*t8202 - 1.*t4198*t4246*t8202 + t4310*t8807 + t4316*t8815 + t4586*t8821 + t4600*t8827 - 1.11344*(-1.*t4578*t8821 + t4573*t8827) - 0.02159*(t4573*t8821 + t4578*t8827))*var2[7] + (t5926*t8210 + t5914*t8223 + t4233*t8253 + t4246*t9152 + t4316*t9175 + t4310*t9186 + t4600*t9191 + t4586*t9195 - 0.02159*(t4578*t9191 + t4573*t9195) - 1.11344*(t4573*t9191 - 1.*t4578*t9195))*var2[8] + (t6144*t8240 + t6151*t8253 + t4316*t8269 + t6223*t8269 + t6242*t8281 + t4310*t9250 + t4600*t9257 + t4586*t9262 - 0.02159*(t4578*t9257 + t4573*t9262) - 1.11344*(t4573*t9257 - 1.*t4578*t9262))*var2[9] + (t4983*t8300 + t4995*t8321 - 1.11344*(-1.*t4573*t8300 - 1.*t4578*t8321) - 0.02159*t8333)*var2[13];
  p_output1[7]=var2[7];
  p_output1[8]=7.142857142857142*(-0.10724599999999995*t6947 - 0.08999*t6958)*var2[3] + 7.142857142857142*(-0.10724599999999995*t7541 - 0.08999*t7554)*var2[4] + 7.142857142857142*(-0.10724599999999995*t5876 - 0.08999*t5894)*var2[5] + 7.142857142857142*(-0.10724599999999995*t5357 - 0.08999*t5364)*var2[6] + 7.142857142857142*(-0.10724599999999995*t4612 - 0.08999*t4638)*var2[7] + 7.142857142857142*(-0.08999*t6106 - 0.10724599999999995*t6115)*var2[8] + 7.142857142857142*(-0.08999*t6324 - 0.10724599999999995*t6338)*var2[9] + 7.142857142857142*(-0.08999*t5002 - 0.10724599999999995*t5016)*var2[13];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void dyaRightStance_new_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




