/*
 * Automatically Generated from Mathematica.
 * Mon 13 Sep 2021 16:08:59 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftFoot.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t751;
  double t1876;
  double t2059;
  double t2100;
  double t2163;
  double t2278;
  double t2299;
  double t2310;
  double t2342;
  double t2206;
  double t2256;
  double t2273;
  double t2374;
  double t2518;
  double t2536;
  double t2542;
  double t2594;
  double t2462;
  double t2482;
  double t2498;
  double t2626;
  double t2630;
  double t2639;
  double t2681;
  double t2702;
  double t2717;
  double t2734;
  double t2774;
  double t2775;
  double t2801;
  double t2826;
  double t2827;
  double t2828;
  double t2833;
  double t2834;
  double t2853;
  double t2855;
  double t2884;
  double t2899;
  double t2903;
  double t2930;
  double t2933;
  double t2935;
  double t2939;
  double t2941;
  double t2945;
  double t2950;
  double t2957;
  double t2958;
  double t2964;
  double t2976;
  double t2979;
  double t2980;
  double t2988;
  double t2990;
  double t2992;
  double t3003;
  double t3047;
  double t3050;
  double t3052;
  double t3070;
  double t3078;
  double t3080;
  double t1558;
  double t1848;
  double t2326;
  double t2350;
  double t2355;
  double t2377;
  double t2385;
  double t2388;
  double t3111;
  double t3112;
  double t3114;
  double t2573;
  double t2596;
  double t2597;
  double t2649;
  double t2659;
  double t2666;
  double t2726;
  double t2745;
  double t2762;
  double t3123;
  double t3125;
  double t3126;
  double t3129;
  double t3130;
  double t3131;
  double t2820;
  double t2821;
  double t2823;
  double t2854;
  double t2882;
  double t2883;
  double t3135;
  double t3136;
  double t3173;
  double t3176;
  double t3177;
  double t3179;
  double t2912;
  double t2915;
  double t2916;
  double t2947;
  double t2951;
  double t2953;
  double t3184;
  double t3188;
  double t3190;
  double t3192;
  double t3196;
  double t3201;
  double t2970;
  double t2972;
  double t2974;
  double t2998;
  double t3039;
  double t3043;
  double t3210;
  double t3223;
  double t3232;
  double t3235;
  double t3236;
  double t3240;
  double t3055;
  double t3066;
  double t3069;
  double t3245;
  double t3247;
  double t3248;
  double t3251;
  double t3273;
  double t3281;
  double t3118;
  double t3119;
  double t3121;
  double t3371;
  double t3374;
  double t3381;
  double t3307;
  double t3308;
  double t3318;
  double t3321;
  double t3325;
  double t3328;
  double t3370;
  double t3382;
  double t3392;
  double t3407;
  double t3423;
  double t3438;
  double t3393;
  double t3439;
  double t3455;
  double t3482;
  double t3484;
  double t3497;
  double t3481;
  double t3523;
  double t3558;
  double t3576;
  double t3578;
  double t3589;
  double t3566;
  double t3605;
  double t3617;
  double t3628;
  double t3630;
  double t3631;
  double t3621;
  double t3636;
  double t3637;
  double t3640;
  double t3652;
  double t3662;
  double t3664;
  double t3666;
  double t3668;
  double t2422;
  double t3283;
  double t3285;
  double t3290;
  double t3294;
  double t3296;
  double t3301;
  double t3669;
  double t3682;
  double t3712;
  double t3728;
  double t3743;
  double t3749;
  double t3750;
  double t3085;
  double t3087;
  double t3088;
  double t3096;
  double t3097;
  double t3099;
  double t3848;
  double t3870;
  double t3874;
  double t3892;
  double t3898;
  double t3924;
  double t3975;
  double t3982;
  double t3986;
  double t3961;
  double t3993;
  double t3997;
  double t4005;
  double t4008;
  double t4011;
  double t4001;
  double t4013;
  double t4039;
  double t4046;
  double t4049;
  double t4056;
  double t4041;
  double t4064;
  double t4065;
  double t4082;
  double t4083;
  double t4086;
  double t3822;
  double t3846;
  double t3847;
  double t4080;
  double t4088;
  double t4103;
  double t4105;
  double t4106;
  double t4118;
  double t4119;
  double t4126;
  double t4133;
  double t4135;
  double t4136;
  double t4140;
  double t4143;
  double t4151;
  double t4153;
  double t4154;
  double t4157;
  double t4161;
  double t3778;
  double t3779;
  double t3783;
  double t4206;
  double t4220;
  double t4225;
  double t4227;
  double t4231;
  double t4233;
  double t4234;
  double t4238;
  double t4242;
  double t4254;
  double t4263;
  double t4215;
  double t4218;
  double t4219;
  double t2414;
  double t2440;
  double t4272;
  double t4275;
  double t4277;
  double t4279;
  double t4280;
  double t4283;
  double t4287;
  double t4378;
  double t4381;
  double t4382;
  double t4387;
  double t4388;
  double t4389;
  double t4394;
  double t4397;
  double t4398;
  double t4401;
  double t4402;
  double t4405;
  double t4415;
  double t4417;
  double t4420;
  double t4423;
  double t4424;
  double t4426;
  double t4433;
  double t4435;
  double t4438;
  double t4443;
  double t4444;
  double t4452;
  double t4454;
  double t4456;
  double t4458;
  double t4509;
  double t4512;
  double t4513;
  double t4518;
  double t4519;
  double t4521;
  double t4532;
  double t4539;
  double t4543;
  double t4545;
  double t4546;
  double t4548;
  double t4552;
  double t4553;
  double t4554;
  double t4559;
  double t4561;
  double t4562;
  double t4566;
  double t4567;
  double t4570;
  double t4574;
  double t4575;
  double t4577;
  double t4582;
  double t4583;
  double t4586;
  double t4619;
  double t4621;
  double t4625;
  double t4636;
  double t4637;
  double t4641;
  double t4645;
  double t4647;
  double t4648;
  double t4651;
  double t4652;
  double t4654;
  double t4659;
  double t4660;
  double t4661;
  double t4664;
  double t4665;
  double t4668;
  double t4673;
  double t4678;
  double t4679;
  double t4687;
  double t4688;
  double t4689;
  double t4696;
  double t4699;
  double t4700;
  double t3757;
  double t3758;
  double t4706;
  double t4711;
  double t4712;
  double t4717;
  double t4718;
  double t4721;
  double t4613;
  double t4614;
  double t4617;
  double t3816;
  double t3817;
  double t3818;
  double t4460;
  double t4462;
  double t4463;
  double t4466;
  double t4467;
  double t4470;
  double t4591;
  double t4593;
  double t4596;
  double t4598;
  double t4600;
  double t4601;
  double t4142;
  double t4183;
  double t4296;
  double t4300;
  double t4308;
  double t4725;
  double t4727;
  double t4728;
  double t4786;
  double t4787;
  double t4789;
  double t4497;
  double t4498;
  double t4501;
  double t4367;
  double t4369;
  double t4370;
  double t4841;
  double t4842;
  double t4844;
  double t4847;
  double t4848;
  double t4849;
  double t4851;
  double t4856;
  double t4858;
  double t4861;
  double t4866;
  double t4869;
  double t4872;
  double t4875;
  double t4880;
  double t4882;
  double t4888;
  double t4891;
  double t4898;
  double t4899;
  double t4900;
  double t4904;
  double t4905;
  double t4908;
  double t4935;
  double t4936;
  double t4937;
  double t4941;
  double t4942;
  double t4944;
  double t4949;
  double t4951;
  double t4952;
  double t4955;
  double t4956;
  double t4957;
  double t4960;
  double t4963;
  double t4967;
  double t4985;
  double t4991;
  double t4992;
  double t4995;
  double t4996;
  double t4997;
  double t5000;
  double t5001;
  double t5003;
  double t5007;
  double t5008;
  double t5009;
  double t5040;
  double t5041;
  double t5042;
  double t5048;
  double t5049;
  double t5051;
  double t5053;
  double t5055;
  double t5056;
  double t5059;
  double t5060;
  double t5063;
  double t5065;
  double t5067;
  double t5069;
  double t5072;
  double t5075;
  double t5076;
  double t5092;
  double t5095;
  double t5096;
  double t5102;
  double t5103;
  double t5104;
  double t5111;
  double t5112;
  double t5114;
  double t5116;
  double t5119;
  double t5120;
  double t4914;
  double t4915;
  double t4916;
  double t4922;
  double t4923;
  double t4925;
  double t5013;
  double t5014;
  double t5015;
  double t5017;
  double t5019;
  double t5020;
  double t5126;
  double t5127;
  double t5128;
  double t5172;
  double t5173;
  double t5176;
  double t5235;
  double t5237;
  double t5238;
  double t5242;
  double t5249;
  double t5250;
  double t5253;
  double t5254;
  double t5258;
  double t5260;
  double t5261;
  double t5262;
  double t5264;
  double t5266;
  double t5267;
  double t5270;
  double t5271;
  double t5272;
  double t5215;
  double t5216;
  double t5218;
  double t5220;
  double t5222;
  double t5311;
  double t5319;
  double t5320;
  double t5323;
  double t5324;
  double t5325;
  double t5328;
  double t5329;
  double t5331;
  double t5333;
  double t5335;
  double t5336;
  double t5340;
  double t5346;
  double t5361;
  double t5365;
  double t5366;
  double t5369;
  double t5417;
  double t5420;
  double t5421;
  double t5425;
  double t5428;
  double t5429;
  double t5433;
  double t5440;
  double t5445;
  double t5447;
  double t5449;
  double t5450;
  double t5452;
  double t5454;
  double t5456;
  double t5459;
  double t5460;
  double t5461;
  double t5464;
  double t5465;
  double t5467;
  double t5469;
  double t5471;
  double t5472;
  double t5399;
  double t5402;
  double t5275;
  double t5278;
  double t5279;
  double t5283;
  double t5284;
  double t5286;
  double t5373;
  double t5374;
  double t5377;
  double t5381;
  double t5382;
  double t5385;
  double t5476;
  double t5477;
  double t5479;
  double t5514;
  double t5515;
  double t5516;
  double t5226;
  double t5227;
  double t5228;
  double t5303;
  double t5305;
  double t5306;
  double t5562;
  double t5564;
  double t5565;
  double t5568;
  double t5569;
  double t5573;
  double t5577;
  double t5579;
  double t5582;
  double t5583;
  double t5584;
  double t5586;
  double t5588;
  double t5589;
  double t5594;
  double t5595;
  double t5596;
  double t5598;
  double t5599;
  double t5601;
  double t5553;
  double t5554;
  double t5557;
  double t5558;
  double t5560;
  double t5629;
  double t5630;
  double t5632;
  double t5636;
  double t5637;
  double t5640;
  double t5641;
  double t5642;
  double t5652;
  double t5653;
  double t5654;
  double t5660;
  double t5661;
  double t5663;
  double t5665;
  double t5667;
  double t5668;
  double t5671;
  double t5672;
  double t5674;
  double t5705;
  double t5708;
  double t5709;
  double t5724;
  double t5727;
  double t5730;
  double t5740;
  double t5743;
  double t5745;
  double t5748;
  double t5751;
  double t5755;
  double t5758;
  double t5759;
  double t5772;
  double t5773;
  double t5774;
  double t5776;
  double t5778;
  double t5779;
  double t5782;
  double t5784;
  double t5785;
  double t5788;
  double t5793;
  double t5797;
  double t5603;
  double t5605;
  double t5606;
  double t5610;
  double t5614;
  double t5615;
  double t5676;
  double t5681;
  double t5688;
  double t5691;
  double t5692;
  double t5694;
  double t5802;
  double t5809;
  double t5810;
  double t5899;
  double t5903;
  double t5937;
  double t5941;
  double t5945;
  double t5951;
  double t5953;
  double t5958;
  double t5966;
  double t5981;
  double t5995;
  double t6006;
  double t6008;
  double t5878;
  double t5880;
  double t5881;
  double t5887;
  double t5889;
  double t6065;
  double t6069;
  double t6076;
  double t6089;
  double t6091;
  double t6120;
  double t6132;
  double t6135;
  double t6137;
  double t6144;
  double t6148;
  double t6152;
  double t6153;
  double t6203;
  double t6204;
  double t6211;
  double t6213;
  double t6216;
  double t6220;
  double t6227;
  double t6252;
  double t6256;
  double t6257;
  double t6269;
  double t6275;
  double t6276;
  double t6301;
  double t6302;
  double t6305;
  double t6312;
  double t6320;
  double t6321;
  double t6013;
  double t6014;
  double t6015;
  double t6017;
  double t6028;
  double t6034;
  double t6156;
  double t6157;
  double t6158;
  double t6170;
  double t6171;
  double t6178;
  double t6363;
  double t6364;
  double t6369;
  double t6559;
  double t6564;
  double t6572;
  double t6574;
  double t6582;
  double t6586;
  double t6587;
  double t6542;
  double t6544;
  double t6551;
  double t6556;
  double t6557;
  double t6621;
  double t6622;
  double t6630;
  double t6632;
  double t6635;
  double t6636;
  double t6638;
  double t6681;
  double t6684;
  double t6724;
  double t6728;
  double t6741;
  double t6745;
  double t6748;
  double t6755;
  double t6757;
  double t6759;
  double t6763;
  double t6764;
  double t6768;
  double t6594;
  double t6595;
  double t6596;
  double t6603;
  double t6608;
  double t6610;
  double t6640;
  double t6644;
  double t6645;
  double t6652;
  double t6653;
  double t6667;
  double t6777;
  double t6780;
  double t6783;
  double t6885;
  double t6886;
  double t6868;
  double t6870;
  double t6873;
  double t6877;
  double t6878;
  double t6912;
  double t6914;
  double t6946;
  double t6949;
  double t6961;
  double t6963;
  double t6967;
  double t6970;
  double t6974;
  double t6889;
  double t6890;
  double t6891;
  double t6893;
  double t6894;
  double t6918;
  double t6919;
  double t6921;
  double t6931;
  double t6935;
  double t6982;
  double t6987;
  double t6995;
  double t7072;
  double t7073;
  double t7075;
  double t7076;
  double t7079;
  double t7105;
  double t7106;
  double t7081;
  double t7084;
  double t7094;
  double t7095;
  double t7115;
  double t7119;
  double t4174;
  t751 = Cos(var1[6]);
  t1876 = Sin(var1[3]);
  t2059 = Cos(var1[3]);
  t2100 = Cos(var1[4]);
  t2163 = Sin(var1[6]);
  t2278 = Cos(var1[7]);
  t2299 = -1.*t2278;
  t2310 = 1. + t2299;
  t2342 = Sin(var1[7]);
  t2206 = -1.*t751*t1876;
  t2256 = -1.*t2059*t2100*t2163;
  t2273 = t2206 + t2256;
  t2374 = Sin(var1[4]);
  t2518 = Cos(var1[8]);
  t2536 = -1.*t2518;
  t2542 = 1. + t2536;
  t2594 = Sin(var1[8]);
  t2462 = t2059*t2278*t2374;
  t2482 = t2273*t2342;
  t2498 = t2462 + t2482;
  t2626 = -1.*t2059*t2100*t751;
  t2630 = t1876*t2163;
  t2639 = t2626 + t2630;
  t2681 = Cos(var1[9]);
  t2702 = -1.*t2681;
  t2717 = 1. + t2702;
  t2734 = Sin(var1[9]);
  t2774 = t2518*t2498;
  t2775 = t2639*t2594;
  t2801 = t2774 + t2775;
  t2826 = t2518*t2639;
  t2827 = -1.*t2498*t2594;
  t2828 = t2826 + t2827;
  t2833 = Cos(var1[10]);
  t2834 = -1.*t2833;
  t2853 = 1. + t2834;
  t2855 = Sin(var1[10]);
  t2884 = -1.*t2734*t2801;
  t2899 = t2681*t2828;
  t2903 = t2884 + t2899;
  t2930 = t2681*t2801;
  t2933 = t2734*t2828;
  t2935 = t2930 + t2933;
  t2939 = Cos(var1[11]);
  t2941 = -1.*t2939;
  t2945 = 1. + t2941;
  t2950 = Sin(var1[11]);
  t2957 = t2855*t2903;
  t2958 = t2833*t2935;
  t2964 = t2957 + t2958;
  t2976 = t2833*t2903;
  t2979 = -1.*t2855*t2935;
  t2980 = t2976 + t2979;
  t2988 = Cos(var1[13]);
  t2990 = -1.*t2988;
  t2992 = 1. + t2990;
  t3003 = Sin(var1[13]);
  t3047 = -1.*t2950*t2964;
  t3050 = t2939*t2980;
  t3052 = t3047 + t3050;
  t3070 = t2939*t2964;
  t3078 = t2950*t2980;
  t3080 = t3070 + t3078;
  t1558 = -1.*t751;
  t1848 = 1. + t1558;
  t2326 = 0.135*t2310;
  t2350 = 0.049*t2342;
  t2355 = t2326 + t2350;
  t2377 = -0.049*t2310;
  t2385 = 0.135*t2342;
  t2388 = t2377 + t2385;
  t3111 = t2059*t751;
  t3112 = -1.*t2100*t1876*t2163;
  t3114 = t3111 + t3112;
  t2573 = -0.049*t2542;
  t2596 = -0.09*t2594;
  t2597 = t2573 + t2596;
  t2649 = -0.09*t2542;
  t2659 = 0.049*t2594;
  t2666 = t2649 + t2659;
  t2726 = -0.049*t2717;
  t2745 = -0.21*t2734;
  t2762 = t2726 + t2745;
  t3123 = t2278*t1876*t2374;
  t3125 = t3114*t2342;
  t3126 = t3123 + t3125;
  t3129 = -1.*t2100*t751*t1876;
  t3130 = -1.*t2059*t2163;
  t3131 = t3129 + t3130;
  t2820 = -0.21*t2717;
  t2821 = 0.049*t2734;
  t2823 = t2820 + t2821;
  t2854 = -0.27068*t2853;
  t2882 = 0.00159*t2855;
  t2883 = t2854 + t2882;
  t3135 = t2518*t3126;
  t3136 = t3131*t2594;
  t3173 = t3135 + t3136;
  t3176 = t2518*t3131;
  t3177 = -1.*t3126*t2594;
  t3179 = t3176 + t3177;
  t2912 = -0.00159*t2853;
  t2915 = -0.27068*t2855;
  t2916 = t2912 + t2915;
  t2947 = 0.01841*t2945;
  t2951 = -0.70544*t2950;
  t2953 = t2947 + t2951;
  t3184 = -1.*t2734*t3173;
  t3188 = t2681*t3179;
  t3190 = t3184 + t3188;
  t3192 = t2681*t3173;
  t3196 = t2734*t3179;
  t3201 = t3192 + t3196;
  t2970 = -0.70544*t2945;
  t2972 = -0.01841*t2950;
  t2974 = t2970 + t2972;
  t2998 = -1.11344*t2992;
  t3039 = 0.02159*t3003;
  t3043 = t2998 + t3039;
  t3210 = t2855*t3190;
  t3223 = t2833*t3201;
  t3232 = t3210 + t3223;
  t3235 = t2833*t3190;
  t3236 = -1.*t2855*t3201;
  t3240 = t3235 + t3236;
  t3055 = -0.02159*t2992;
  t3066 = -1.11344*t3003;
  t3069 = t3055 + t3066;
  t3245 = -1.*t2950*t3232;
  t3247 = t2939*t3240;
  t3248 = t3245 + t3247;
  t3251 = t2939*t3232;
  t3273 = t2950*t3240;
  t3281 = t3251 + t3273;
  t3118 = t2278*t3114;
  t3119 = -1.*t1876*t2374*t2342;
  t3121 = t3118 + t3119;
  t3371 = t2059*t2100*t751;
  t3374 = -1.*t1876*t2163;
  t3381 = t3371 + t3374;
  t3307 = -1.*t2059*t2278*t2374;
  t3308 = t751*t1876;
  t3318 = t2059*t2100*t2163;
  t3321 = t3308 + t3318;
  t3325 = t3321*t2342;
  t3328 = t3307 + t3325;
  t3370 = t2518*t3328;
  t3382 = t3381*t2594;
  t3392 = t3370 + t3382;
  t3407 = t2518*t3381;
  t3423 = -1.*t3328*t2594;
  t3438 = t3407 + t3423;
  t3393 = -1.*t2734*t3392;
  t3439 = t2681*t3438;
  t3455 = t3393 + t3439;
  t3482 = t2681*t3392;
  t3484 = t2734*t3438;
  t3497 = t3482 + t3484;
  t3481 = t2855*t3455;
  t3523 = t2833*t3497;
  t3558 = t3481 + t3523;
  t3576 = t2833*t3455;
  t3578 = -1.*t2855*t3497;
  t3589 = t3576 + t3578;
  t3566 = -1.*t2950*t3558;
  t3605 = t2939*t3589;
  t3617 = t3566 + t3605;
  t3628 = t2939*t3558;
  t3630 = t2950*t3589;
  t3631 = t3628 + t3630;
  t3621 = t3003*t3617;
  t3636 = t2988*t3631;
  t3637 = t3621 + t3636;
  t3640 = -0.766044*t3637;
  t3652 = t2988*t3617;
  t3662 = -1.*t3003*t3631;
  t3664 = t3652 + t3662;
  t3666 = 0.642788*t3664;
  t3668 = t3640 + t3666;
  t2422 = -1.*t2059*t2374*t2342;
  t3283 = t3003*t3248;
  t3285 = t2988*t3281;
  t3290 = t3283 + t3285;
  t3294 = t2988*t3248;
  t3296 = -1.*t3003*t3281;
  t3301 = t3294 + t3296;
  t3669 = t2278*t3321;
  t3682 = t2059*t2374*t2342;
  t3712 = t3669 + t3682;
  t3728 = Power(t3712,2);
  t3743 = Power(t3668,2);
  t3749 = t3728 + t3743;
  t3750 = 1/t3749;
  t3085 = t3003*t3052;
  t3087 = t2988*t3080;
  t3088 = t3085 + t3087;
  t3096 = t2988*t3052;
  t3097 = -1.*t3003*t3080;
  t3099 = t3096 + t3097;
  t3848 = t2100*t2278;
  t3870 = t2374*t2163*t2342;
  t3874 = t3848 + t3870;
  t3892 = t2518*t3874;
  t3898 = t751*t2374*t2594;
  t3924 = t3892 + t3898;
  t3975 = t751*t2518*t2374;
  t3982 = -1.*t3874*t2594;
  t3986 = t3975 + t3982;
  t3961 = -1.*t2734*t3924;
  t3993 = t2681*t3986;
  t3997 = t3961 + t3993;
  t4005 = t2681*t3924;
  t4008 = t2734*t3986;
  t4011 = t4005 + t4008;
  t4001 = t2855*t3997;
  t4013 = t2833*t4011;
  t4039 = t4001 + t4013;
  t4046 = t2833*t3997;
  t4049 = -1.*t2855*t4011;
  t4056 = t4046 + t4049;
  t4041 = -1.*t2950*t4039;
  t4064 = t2939*t4056;
  t4065 = t4041 + t4064;
  t4082 = t2939*t4039;
  t4083 = t2950*t4056;
  t4086 = t4082 + t4083;
  t3822 = 0.642788*t3290;
  t3846 = 0.766044*t3301;
  t3847 = t3822 + t3846;
  t4080 = t3003*t4065;
  t4088 = t2988*t4086;
  t4103 = t4080 + t4088;
  t4105 = 0.642788*t4103;
  t4106 = t2988*t4065;
  t4118 = -1.*t3003*t4086;
  t4119 = t4106 + t4118;
  t4126 = 0.766044*t4119;
  t4133 = t4105 + t4126;
  t4135 = Power(t4133,2);
  t4136 = Power(t3847,2);
  t4140 = t4135 + t4136;
  t4143 = -0.642788*t3637;
  t4151 = -0.766044*t3664;
  t4153 = t4143 + t4151;
  t4154 = Power(t4153,2);
  t4157 = t4135 + t4154 + t4136;
  t4161 = 1/t4157;
  t3778 = -0.766044*t3290;
  t3779 = 0.642788*t3301;
  t3783 = t3778 + t3779;
  t4206 = 1/Sqrt(t3749);
  t4220 = -0.766044*t4103;
  t4225 = 0.642788*t4119;
  t4227 = t4220 + t4225;
  t4231 = t2278*t2374*t2163;
  t4233 = -1.*t2100*t2342;
  t4234 = t4231 + t4233;
  t4238 = Power(t3749,-1.5);
  t4242 = 2.*t3712*t3121;
  t4254 = 2.*t3668*t3783;
  t4263 = t4242 + t4254;
  t4215 = t3121*t3668*t4206;
  t4218 = -1.*t3712*t3783*t4206;
  t4219 = t4215 + t4218;
  t2414 = t2278*t2273;
  t2440 = t2414 + t2422;
  t4272 = t3712*t4227*t4206;
  t4275 = -1.*t4234*t3668*t4206;
  t4277 = t4272 + t4275;
  t4279 = Power(t4277,2);
  t4280 = Power(t4219,2);
  t4283 = t4279 + t4280;
  t4287 = 1/t4283;
  t4378 = -1.*t2278*t2374;
  t4381 = t2100*t2163*t2342;
  t4382 = t4378 + t4381;
  t4387 = t2518*t4382;
  t4388 = t2100*t751*t2594;
  t4389 = t4387 + t4388;
  t4394 = t2100*t751*t2518;
  t4397 = -1.*t4382*t2594;
  t4398 = t4394 + t4397;
  t4401 = -1.*t2734*t4389;
  t4402 = t2681*t4398;
  t4405 = t4401 + t4402;
  t4415 = t2681*t4389;
  t4417 = t2734*t4398;
  t4420 = t4415 + t4417;
  t4423 = t2855*t4405;
  t4424 = t2833*t4420;
  t4426 = t4423 + t4424;
  t4433 = t2833*t4405;
  t4435 = -1.*t2855*t4420;
  t4438 = t4433 + t4435;
  t4443 = -1.*t2950*t4426;
  t4444 = t2939*t4438;
  t4452 = t4443 + t4444;
  t4454 = t2939*t4426;
  t4456 = t2950*t4438;
  t4458 = t4454 + t4456;
  t4509 = t2100*t2278*t1876;
  t4512 = t1876*t2374*t2163*t2342;
  t4513 = t4509 + t4512;
  t4518 = t2518*t4513;
  t4519 = t751*t1876*t2374*t2594;
  t4521 = t4518 + t4519;
  t4532 = t751*t2518*t1876*t2374;
  t4539 = -1.*t4513*t2594;
  t4543 = t4532 + t4539;
  t4545 = -1.*t2734*t4521;
  t4546 = t2681*t4543;
  t4548 = t4545 + t4546;
  t4552 = t2681*t4521;
  t4553 = t2734*t4543;
  t4554 = t4552 + t4553;
  t4559 = t2855*t4548;
  t4561 = t2833*t4554;
  t4562 = t4559 + t4561;
  t4566 = t2833*t4548;
  t4567 = -1.*t2855*t4554;
  t4570 = t4566 + t4567;
  t4574 = -1.*t2950*t4562;
  t4575 = t2939*t4570;
  t4577 = t4574 + t4575;
  t4582 = t2939*t4562;
  t4583 = t2950*t4570;
  t4586 = t4582 + t4583;
  t4619 = -1.*t2059*t2100*t2278;
  t4621 = -1.*t2059*t2374*t2163*t2342;
  t4625 = t4619 + t4621;
  t4636 = t2518*t4625;
  t4637 = -1.*t2059*t751*t2374*t2594;
  t4641 = t4636 + t4637;
  t4645 = -1.*t2059*t751*t2518*t2374;
  t4647 = -1.*t4625*t2594;
  t4648 = t4645 + t4647;
  t4651 = -1.*t2734*t4641;
  t4652 = t2681*t4648;
  t4654 = t4651 + t4652;
  t4659 = t2681*t4641;
  t4660 = t2734*t4648;
  t4661 = t4659 + t4660;
  t4664 = t2855*t4654;
  t4665 = t2833*t4661;
  t4668 = t4664 + t4665;
  t4673 = t2833*t4654;
  t4678 = -1.*t2855*t4661;
  t4679 = t4673 + t4678;
  t4687 = -1.*t2950*t4668;
  t4688 = t2939*t4679;
  t4689 = t4687 + t4688;
  t4696 = t2939*t4668;
  t4699 = t2950*t4679;
  t4700 = t4696 + t4699;
  t3757 = -1.*t2278*t3321;
  t3758 = t3757 + t2422;
  t4706 = t3003*t4689;
  t4711 = t2988*t4700;
  t4712 = t4706 + t4711;
  t4717 = t2988*t4689;
  t4718 = -1.*t3003*t4700;
  t4721 = t4717 + t4718;
  t4613 = -1.*t2059*t2278*t2374*t2163;
  t4614 = t2059*t2100*t2342;
  t4617 = t4613 + t4614;
  t3816 = 0.642788*t3637;
  t3817 = 0.766044*t3664;
  t3818 = t3816 + t3817;
  t4460 = t3003*t4452;
  t4462 = t2988*t4458;
  t4463 = t4460 + t4462;
  t4466 = t2988*t4452;
  t4467 = -1.*t3003*t4458;
  t4470 = t4466 + t4467;
  t4591 = t3003*t4577;
  t4593 = t2988*t4586;
  t4596 = t4591 + t4593;
  t4598 = t2988*t4577;
  t4600 = -1.*t3003*t4586;
  t4601 = t4598 + t4600;
  t4142 = 1/Sqrt(t4140);
  t4183 = Sqrt(t4140);
  t4296 = -1.*t3712*t4227*t4206;
  t4300 = t4234*t3668*t4206;
  t4308 = t4296 + t4300;
  t4725 = -0.766044*t4712;
  t4727 = 0.642788*t4721;
  t4728 = t4725 + t4727;
  t4786 = 2.*t4617*t3712;
  t4787 = 2.*t4728*t3668;
  t4789 = t4786 + t4787;
  t4497 = t2278*t1876*t2374*t2163;
  t4498 = -1.*t2100*t1876*t2342;
  t4501 = t4497 + t4498;
  t4367 = t2100*t2278*t2163;
  t4369 = t2374*t2342;
  t4370 = t4367 + t4369;
  t4841 = t751*t2518*t2374*t2342;
  t4842 = -1.*t2374*t2163*t2594;
  t4844 = t4841 + t4842;
  t4847 = -1.*t2518*t2374*t2163;
  t4848 = -1.*t751*t2374*t2342*t2594;
  t4849 = t4847 + t4848;
  t4851 = -1.*t2734*t4844;
  t4856 = t2681*t4849;
  t4858 = t4851 + t4856;
  t4861 = t2681*t4844;
  t4866 = t2734*t4849;
  t4869 = t4861 + t4866;
  t4872 = t2855*t4858;
  t4875 = t2833*t4869;
  t4880 = t4872 + t4875;
  t4882 = t2833*t4858;
  t4888 = -1.*t2855*t4869;
  t4891 = t4882 + t4888;
  t4898 = -1.*t2950*t4880;
  t4899 = t2939*t4891;
  t4900 = t4898 + t4899;
  t4904 = t2939*t4880;
  t4905 = t2950*t4891;
  t4908 = t4904 + t4905;
  t4935 = -1.*t2059*t751;
  t4936 = t2100*t1876*t2163;
  t4937 = t4935 + t4936;
  t4941 = t2518*t3131*t2342;
  t4942 = t4937*t2594;
  t4944 = t4941 + t4942;
  t4949 = t2518*t4937;
  t4951 = -1.*t3131*t2342*t2594;
  t4952 = t4949 + t4951;
  t4955 = -1.*t2734*t4944;
  t4956 = t2681*t4952;
  t4957 = t4955 + t4956;
  t4960 = t2681*t4944;
  t4963 = t2734*t4952;
  t4967 = t4960 + t4963;
  t4985 = t2855*t4957;
  t4991 = t2833*t4967;
  t4992 = t4985 + t4991;
  t4995 = t2833*t4957;
  t4996 = -1.*t2855*t4967;
  t4997 = t4995 + t4996;
  t5000 = -1.*t2950*t4992;
  t5001 = t2939*t4997;
  t5003 = t5000 + t5001;
  t5007 = t2939*t4992;
  t5008 = t2950*t4997;
  t5009 = t5007 + t5008;
  t5040 = t2518*t3381*t2342;
  t5041 = t2273*t2594;
  t5042 = t5040 + t5041;
  t5048 = t2518*t2273;
  t5049 = -1.*t3381*t2342*t2594;
  t5051 = t5048 + t5049;
  t5053 = -1.*t2734*t5042;
  t5055 = t2681*t5051;
  t5056 = t5053 + t5055;
  t5059 = t2681*t5042;
  t5060 = t2734*t5051;
  t5063 = t5059 + t5060;
  t5065 = t2855*t5056;
  t5067 = t2833*t5063;
  t5069 = t5065 + t5067;
  t5072 = t2833*t5056;
  t5075 = -1.*t2855*t5063;
  t5076 = t5072 + t5075;
  t5092 = -1.*t2950*t5069;
  t5095 = t2939*t5076;
  t5096 = t5092 + t5095;
  t5102 = t2939*t5069;
  t5103 = t2950*t5076;
  t5104 = t5102 + t5103;
  t5111 = t3003*t5096;
  t5112 = t2988*t5104;
  t5114 = t5111 + t5112;
  t5116 = t2988*t5096;
  t5119 = -1.*t3003*t5104;
  t5120 = t5116 + t5119;
  t4914 = t3003*t4900;
  t4915 = t2988*t4908;
  t4916 = t4914 + t4915;
  t4922 = t2988*t4900;
  t4923 = -1.*t3003*t4908;
  t4925 = t4922 + t4923;
  t5013 = t3003*t5003;
  t5014 = t2988*t5009;
  t5015 = t5013 + t5014;
  t5017 = t2988*t5003;
  t5019 = -1.*t3003*t5009;
  t5020 = t5017 + t5019;
  t5126 = -0.766044*t5114;
  t5127 = 0.642788*t5120;
  t5128 = t5126 + t5127;
  t5172 = 2.*t2278*t3381*t3712;
  t5173 = 2.*t5128*t3668;
  t5176 = t5172 + t5173;
  t5235 = -1.*t2518*t2734*t4234;
  t5237 = -1.*t2681*t4234*t2594;
  t5238 = t5235 + t5237;
  t5242 = t2681*t2518*t4234;
  t5249 = -1.*t2734*t4234*t2594;
  t5250 = t5242 + t5249;
  t5253 = t2855*t5238;
  t5254 = t2833*t5250;
  t5258 = t5253 + t5254;
  t5260 = t2833*t5238;
  t5261 = -1.*t2855*t5250;
  t5262 = t5260 + t5261;
  t5264 = -1.*t2950*t5258;
  t5266 = t2939*t5262;
  t5267 = t5264 + t5266;
  t5270 = t2939*t5258;
  t5271 = t2950*t5262;
  t5272 = t5270 + t5271;
  t5215 = 0.135*t2278;
  t5216 = -0.049*t2342;
  t5218 = t5215 + t5216;
  t5220 = 0.049*t2278;
  t5222 = t5220 + t2385;
  t5311 = -1.*t2518*t2734*t3121;
  t5319 = -1.*t2681*t3121*t2594;
  t5320 = t5311 + t5319;
  t5323 = t2681*t2518*t3121;
  t5324 = -1.*t2734*t3121*t2594;
  t5325 = t5323 + t5324;
  t5328 = t2855*t5320;
  t5329 = t2833*t5325;
  t5331 = t5328 + t5329;
  t5333 = t2833*t5320;
  t5335 = -1.*t2855*t5325;
  t5336 = t5333 + t5335;
  t5340 = -1.*t2950*t5331;
  t5346 = t2939*t5336;
  t5361 = t5340 + t5346;
  t5365 = t2939*t5331;
  t5366 = t2950*t5336;
  t5369 = t5365 + t5366;
  t5417 = -1.*t2518*t2734*t3712;
  t5420 = -1.*t2681*t3712*t2594;
  t5421 = t5417 + t5420;
  t5425 = t2681*t2518*t3712;
  t5428 = -1.*t2734*t3712*t2594;
  t5429 = t5425 + t5428;
  t5433 = t2855*t5421;
  t5440 = t2833*t5429;
  t5445 = t5433 + t5440;
  t5447 = t2833*t5421;
  t5449 = -1.*t2855*t5429;
  t5450 = t5447 + t5449;
  t5452 = -1.*t2950*t5445;
  t5454 = t2939*t5450;
  t5456 = t5452 + t5454;
  t5459 = t2939*t5445;
  t5460 = t2950*t5450;
  t5461 = t5459 + t5460;
  t5464 = t3003*t5456;
  t5465 = t2988*t5461;
  t5467 = t5464 + t5465;
  t5469 = t2988*t5456;
  t5471 = -1.*t3003*t5461;
  t5472 = t5469 + t5471;
  t5399 = -1.*t3321*t2342;
  t5402 = t2462 + t5399;
  t5275 = t3003*t5267;
  t5278 = t2988*t5272;
  t5279 = t5275 + t5278;
  t5283 = t2988*t5267;
  t5284 = -1.*t3003*t5272;
  t5286 = t5283 + t5284;
  t5373 = t3003*t5361;
  t5374 = t2988*t5369;
  t5377 = t5373 + t5374;
  t5381 = t2988*t5361;
  t5382 = -1.*t3003*t5369;
  t5385 = t5381 + t5382;
  t5476 = -0.766044*t5467;
  t5477 = 0.642788*t5472;
  t5479 = t5476 + t5477;
  t5514 = 2.*t3712*t5402;
  t5515 = 2.*t5479*t3668;
  t5516 = t5514 + t5515;
  t5226 = -1.*t2100*t2278;
  t5227 = -1.*t2374*t2163*t2342;
  t5228 = t5226 + t5227;
  t5303 = -1.*t2278*t1876*t2374;
  t5305 = -1.*t3114*t2342;
  t5306 = t5303 + t5305;
  t5562 = -1.*t2518*t3874;
  t5564 = -1.*t751*t2374*t2594;
  t5565 = t5562 + t5564;
  t5568 = t2734*t5565;
  t5569 = t5568 + t3993;
  t5573 = t2681*t5565;
  t5577 = -1.*t2734*t3986;
  t5579 = t5573 + t5577;
  t5582 = -1.*t2855*t5569;
  t5583 = t2833*t5579;
  t5584 = t5582 + t5583;
  t5586 = t2833*t5569;
  t5588 = t2855*t5579;
  t5589 = t5586 + t5588;
  t5594 = t2950*t5584;
  t5595 = t2939*t5589;
  t5596 = t5594 + t5595;
  t5598 = t2939*t5584;
  t5599 = -1.*t2950*t5589;
  t5601 = t5598 + t5599;
  t5553 = 0.049*t2518;
  t5554 = t5553 + t2596;
  t5557 = -0.09*t2518;
  t5558 = -0.049*t2594;
  t5560 = t5557 + t5558;
  t5629 = -1.*t2518*t3126;
  t5630 = -1.*t3131*t2594;
  t5632 = t5629 + t5630;
  t5636 = t2734*t5632;
  t5637 = t5636 + t3188;
  t5640 = t2681*t5632;
  t5641 = -1.*t2734*t3179;
  t5642 = t5640 + t5641;
  t5652 = -1.*t2855*t5637;
  t5653 = t2833*t5642;
  t5654 = t5652 + t5653;
  t5660 = t2833*t5637;
  t5661 = t2855*t5642;
  t5663 = t5660 + t5661;
  t5665 = t2950*t5654;
  t5667 = t2939*t5663;
  t5668 = t5665 + t5667;
  t5671 = t2939*t5654;
  t5672 = -1.*t2950*t5663;
  t5674 = t5671 + t5672;
  t5705 = -1.*t2518*t3328;
  t5708 = -1.*t3381*t2594;
  t5709 = t5705 + t5708;
  t5724 = t2734*t5709;
  t5727 = t5724 + t3439;
  t5730 = t2681*t5709;
  t5740 = -1.*t2734*t3438;
  t5743 = t5730 + t5740;
  t5745 = -1.*t2855*t5727;
  t5748 = t2833*t5743;
  t5751 = t5745 + t5748;
  t5755 = t2833*t5727;
  t5758 = t2855*t5743;
  t5759 = t5755 + t5758;
  t5772 = t2950*t5751;
  t5773 = t2939*t5759;
  t5774 = t5772 + t5773;
  t5776 = t2939*t5751;
  t5778 = -1.*t2950*t5759;
  t5779 = t5776 + t5778;
  t5782 = -1.*t3003*t5774;
  t5784 = t2988*t5779;
  t5785 = t5782 + t5784;
  t5788 = t2988*t5774;
  t5793 = t3003*t5779;
  t5797 = t5788 + t5793;
  t5603 = -1.*t3003*t5596;
  t5605 = t2988*t5601;
  t5606 = t5603 + t5605;
  t5610 = t2988*t5596;
  t5614 = t3003*t5601;
  t5615 = t5610 + t5614;
  t5676 = -1.*t3003*t5668;
  t5681 = t2988*t5674;
  t5688 = t5676 + t5681;
  t5691 = t2988*t5668;
  t5692 = t3003*t5674;
  t5694 = t5691 + t5692;
  t5802 = 0.642788*t5785;
  t5809 = -0.766044*t5797;
  t5810 = t5802 + t5809;
  t5899 = -1.*t2681*t3924;
  t5903 = t5899 + t5577;
  t5937 = -1.*t2855*t3997;
  t5941 = t2833*t5903;
  t5945 = t5937 + t5941;
  t5951 = t2855*t5903;
  t5953 = t4046 + t5951;
  t5958 = t2950*t5945;
  t5966 = t2939*t5953;
  t5981 = t5958 + t5966;
  t5995 = t2939*t5945;
  t6006 = -1.*t2950*t5953;
  t6008 = t5995 + t6006;
  t5878 = -0.21*t2681;
  t5880 = -0.049*t2734;
  t5881 = t5878 + t5880;
  t5887 = 0.049*t2681;
  t5889 = t5887 + t2745;
  t6065 = -1.*t2681*t3173;
  t6069 = t6065 + t5641;
  t6076 = -1.*t2855*t3190;
  t6089 = t2833*t6069;
  t6091 = t6076 + t6089;
  t6120 = t2855*t6069;
  t6132 = t3235 + t6120;
  t6135 = t2950*t6091;
  t6137 = t2939*t6132;
  t6144 = t6135 + t6137;
  t6148 = t2939*t6091;
  t6152 = -1.*t2950*t6132;
  t6153 = t6148 + t6152;
  t6203 = -1.*t2681*t3392;
  t6204 = t6203 + t5740;
  t6211 = -1.*t2855*t3455;
  t6213 = t2833*t6204;
  t6216 = t6211 + t6213;
  t6220 = t2855*t6204;
  t6227 = t3576 + t6220;
  t6252 = t2950*t6216;
  t6256 = t2939*t6227;
  t6257 = t6252 + t6256;
  t6269 = t2939*t6216;
  t6275 = -1.*t2950*t6227;
  t6276 = t6269 + t6275;
  t6301 = -1.*t3003*t6257;
  t6302 = t2988*t6276;
  t6305 = t6301 + t6302;
  t6312 = t2988*t6257;
  t6320 = t3003*t6276;
  t6321 = t6312 + t6320;
  t6013 = -1.*t3003*t5981;
  t6014 = t2988*t6008;
  t6015 = t6013 + t6014;
  t6017 = t2988*t5981;
  t6028 = t3003*t6008;
  t6034 = t6017 + t6028;
  t6156 = -1.*t3003*t6144;
  t6157 = t2988*t6153;
  t6158 = t6156 + t6157;
  t6170 = t2988*t6144;
  t6171 = t3003*t6153;
  t6178 = t6170 + t6171;
  t6363 = 0.642788*t6305;
  t6364 = -0.766044*t6321;
  t6369 = t6363 + t6364;
  t6559 = -1.*t2833*t4011;
  t6564 = t5937 + t6559;
  t6572 = t2950*t6564;
  t6574 = t6572 + t4064;
  t6582 = t2939*t6564;
  t6586 = -1.*t2950*t4056;
  t6587 = t6582 + t6586;
  t6542 = 0.00159*t2833;
  t6544 = t6542 + t2915;
  t6551 = -0.27068*t2833;
  t6556 = -0.00159*t2855;
  t6557 = t6551 + t6556;
  t6621 = -1.*t2833*t3201;
  t6622 = t6076 + t6621;
  t6630 = t2950*t6622;
  t6632 = t6630 + t3247;
  t6635 = t2939*t6622;
  t6636 = -1.*t2950*t3240;
  t6638 = t6635 + t6636;
  t6681 = -1.*t2833*t3497;
  t6684 = t6211 + t6681;
  t6724 = t2950*t6684;
  t6728 = t6724 + t3605;
  t6741 = t2939*t6684;
  t6745 = -1.*t2950*t3589;
  t6748 = t6741 + t6745;
  t6755 = -1.*t3003*t6728;
  t6757 = t2988*t6748;
  t6759 = t6755 + t6757;
  t6763 = t2988*t6728;
  t6764 = t3003*t6748;
  t6768 = t6763 + t6764;
  t6594 = -1.*t3003*t6574;
  t6595 = t2988*t6587;
  t6596 = t6594 + t6595;
  t6603 = t2988*t6574;
  t6608 = t3003*t6587;
  t6610 = t6603 + t6608;
  t6640 = -1.*t3003*t6632;
  t6644 = t2988*t6638;
  t6645 = t6640 + t6644;
  t6652 = t2988*t6632;
  t6653 = t3003*t6638;
  t6667 = t6652 + t6653;
  t6777 = 0.642788*t6759;
  t6780 = -0.766044*t6768;
  t6783 = t6777 + t6780;
  t6885 = -1.*t2939*t4039;
  t6886 = t6885 + t6586;
  t6868 = -0.70544*t2939;
  t6870 = 0.01841*t2950;
  t6873 = t6868 + t6870;
  t6877 = -0.01841*t2939;
  t6878 = t6877 + t2951;
  t6912 = -1.*t2939*t3232;
  t6914 = t6912 + t6636;
  t6946 = -1.*t2939*t3558;
  t6949 = t6946 + t6745;
  t6961 = -1.*t3003*t3617;
  t6963 = t2988*t6949;
  t6967 = t6961 + t6963;
  t6970 = t3003*t6949;
  t6974 = t3652 + t6970;
  t6889 = -1.*t3003*t4065;
  t6890 = t2988*t6886;
  t6891 = t6889 + t6890;
  t6893 = t3003*t6886;
  t6894 = t4106 + t6893;
  t6918 = -1.*t3003*t3248;
  t6919 = t2988*t6914;
  t6921 = t6918 + t6919;
  t6931 = t3003*t6914;
  t6935 = t3294 + t6931;
  t6982 = 0.642788*t6967;
  t6987 = -0.766044*t6974;
  t6995 = t6982 + t6987;
  t7072 = 0.02159*t2988;
  t7073 = t7072 + t3066;
  t7075 = -1.11344*t2988;
  t7076 = -0.02159*t3003;
  t7079 = t7075 + t7076;
  t7105 = -1.*t2988*t3631;
  t7106 = t6961 + t7105;
  t7081 = -1.*t2988*t4086;
  t7084 = t6889 + t7081;
  t7094 = -1.*t2988*t3281;
  t7095 = t6918 + t7094;
  t7115 = 0.642788*t7106;
  t7119 = t7115 + t4151;
  t4174 = -0.766044*t3301;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=-0.135*t1848*t1876 + 0.135*t2059*t2100*t2163 + t2273*t2355 + t2059*t2374*t2388 + 0.1305*t2440 + t2498*t2597 + t2639*t2666 + t2762*t2801 + t2823*t2828 + t2883*t2903 + t2916*t2935 + t2953*t2964 + t2974*t2980 + t3043*t3052 + t3069*t3080 + 0.0306*t3088 - 1.13106*t3099;
  p_output1[20]=0.135*t1848*t2059 + 0.135*t1876*t2100*t2163 + t1876*t2374*t2388 + t2355*t3114 + 0.1305*t3121 + t2597*t3126 + t2666*t3131 + t2762*t3173 + t2823*t3179 + t2883*t3190 + t2916*t3201 + t2953*t3232 + t2974*t3240 + t3043*t3248 + t3069*t3281 + 0.0306*t3290 - 1.13106*t3301;
  p_output1[21]=t3121*t3668*t3750 + t3750*t3758*t3783;
  p_output1[22]=(0.642788*t3088 + 0.766044*t3099)*t3818*t3847*t4142*t4161 + t4161*(-0.642788*t3290 + t4174)*t4183;
  p_output1[23]=t4219*(t3121*t4206*t4227 - 1.*t3783*t4206*t4234 - 0.5*t3712*t4227*t4238*t4263 + 0.5*t3668*t4234*t4238*t4263)*t4287 + (t2440*t3668*t4206 - 1.*(-0.766044*t3088 + 0.642788*t3099)*t3712*t4206 - 0.5*t3121*t3668*t4238*t4263 + 0.5*t3712*t3783*t4238*t4263)*t4287*t4308;
  p_output1[24]=-0.135*t2100*t2163 + t2100*t2163*t2355 - 1.*t2374*t2388 + 0.1305*t4370 + t2597*t4382 + t2762*t4389 + t2823*t4398 + t2883*t4405 + t2916*t4420 + t2953*t4426 + t2974*t4438 + t3043*t4452 + t3069*t4458 + 0.0306*t4463 - 1.13106*t4470 + t2100*t2666*t751;
  p_output1[25]=-0.135*t1876*t2163*t2374 + t1876*t2163*t2355*t2374 + t1876*t2100*t2388 + 0.1305*t4501 + t2597*t4513 + t2762*t4521 + t2823*t4543 + t2883*t4548 + t2916*t4554 + t2953*t4562 + t2974*t4570 + t3043*t4577 + t3069*t4586 + 0.0306*t4596 - 1.13106*t4601 + t1876*t2374*t2666*t751;
  p_output1[26]=0.135*t2059*t2163*t2374 - 1.*t2059*t2163*t2355*t2374 - 1.*t2059*t2100*t2388 + 0.1305*t4617 + t2597*t4625 + t2762*t4641 + t2823*t4648 + t2883*t4654 + t2916*t4661 + t2953*t4668 + t2974*t4679 + t3043*t4689 + t3069*t4700 + 0.0306*t4712 - 1.13106*t4721 - 1.*t2059*t2374*t2666*t751;
  p_output1[27]=t3668*t3750*t4617 + t3750*t3758*t4728;
  p_output1[28]=0.5*t3818*t4142*t4161*(2.*t4133*(0.642788*t4463 + 0.766044*t4470) + 2.*t3847*(0.642788*t4596 + 0.766044*t4601)) + t4161*t4183*(-0.642788*t4712 - 0.766044*t4721);
  p_output1[29]=t4287*t4308*(t3668*t4206*t4501 - 1.*t3712*t4206*(-0.766044*t4596 + 0.642788*t4601) - 1.*t3783*t4206*t4617 + t3121*t4206*t4728 - 0.5*t3121*t3668*t4238*t4789 + 0.5*t3712*t3783*t4238*t4789) + t4219*t4287*(-1.*t3668*t4206*t4370 + t3712*t4206*(-0.766044*t4463 + 0.642788*t4470) + t4206*t4227*t4617 - 1.*t4206*t4234*t4728 - 0.5*t3712*t4227*t4238*t4789 + 0.5*t3668*t4234*t4238*t4789);
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=-1.*t2163*t2374*t2666 + t2762*t4844 + t2823*t4849 + t2883*t4858 + t2916*t4869 + t2953*t4880 + t2974*t4891 + t3043*t4900 + t3069*t4908 + 0.0306*t4916 - 1.13106*t4925 - 0.135*t2374*t751 + 0.1305*t2278*t2374*t751 + t2355*t2374*t751 + t2342*t2374*t2597*t751;
  p_output1[37]=0.135*t2059*t2163 + 0.1305*t2278*t3131 + t2355*t3131 + t2342*t2597*t3131 + t2666*t4937 + t2762*t4944 + t2823*t4952 + t2883*t4957 + t2916*t4967 + t2953*t4992 + t2974*t4997 + t3043*t5003 + t3069*t5009 + 0.0306*t5015 - 1.13106*t5020 + 0.135*t1876*t2100*t751;
  p_output1[38]=0.135*t1876*t2163 + t2273*t2666 + 0.1305*t2278*t3381 + t2355*t3381 + t2342*t2597*t3381 + t2762*t5042 + t2823*t5051 + t2883*t5056 + t2916*t5063 + t2953*t5069 + t2974*t5076 + t3043*t5096 + t3069*t5104 + 0.0306*t5114 - 1.13106*t5120 - 0.135*t2059*t2100*t751;
  p_output1[39]=t2278*t3381*t3668*t3750 + t3750*t3758*t5128;
  p_output1[40]=0.5*t3818*t4142*t4161*(2.*t4133*(0.642788*t4916 + 0.766044*t4925) + 2.*t3847*(0.642788*t5015 + 0.766044*t5020)) + t4161*t4183*(-0.642788*t5114 - 0.766044*t5120);
  p_output1[41]=t4287*t4308*(t2278*t3131*t3668*t4206 - 1.*t2278*t3381*t3783*t4206 - 1.*t3712*t4206*(-0.766044*t5015 + 0.642788*t5020) + t3121*t4206*t5128 - 0.5*t3121*t3668*t4238*t5176 + 0.5*t3712*t3783*t4238*t5176) + t4219*t4287*(t2278*t3381*t4206*t4227 + t3712*t4206*(-0.766044*t4916 + 0.642788*t4925) - 1.*t4206*t4234*t5128 - 0.5*t3712*t4227*t4238*t5176 + 0.5*t3668*t4234*t4238*t5176 - 1.*t2278*t2374*t3668*t4206*t751);
  p_output1[42]=t2597*t4234 + t2518*t2762*t4234 - 1.*t2594*t2823*t4234 + t2100*t5218 + t2163*t2374*t5222 + 0.1305*t5228 + t2883*t5238 + t2916*t5250 + t2953*t5258 + t2974*t5262 + t3043*t5267 + t3069*t5272 + 0.0306*t5279 - 1.13106*t5286;
  p_output1[43]=t2597*t3121 + t2518*t2762*t3121 - 1.*t2594*t2823*t3121 + t1876*t2374*t5218 + t3114*t5222 + 0.1305*t5306 + t2883*t5320 + t2916*t5325 + t2953*t5331 + t2974*t5336 + t3043*t5361 + t3069*t5369 + 0.0306*t5377 - 1.13106*t5385;
  p_output1[44]=t2597*t3712 + t2518*t2762*t3712 - 1.*t2594*t2823*t3712 - 1.*t2059*t2374*t5218 + t3321*t5222 + 0.1305*t5402 + t2883*t5421 + t2916*t5429 + t2953*t5445 + t2974*t5450 + t3043*t5456 + t3069*t5461 + 0.0306*t5467 - 1.13106*t5472;
  p_output1[45]=t3668*t3750*t5402 + t3750*t3758*t5479;
  p_output1[46]=0.5*t3818*t4142*t4161*(2.*t4133*(0.642788*t5279 + 0.766044*t5286) + 2.*t3847*(0.642788*t5377 + 0.766044*t5385)) + t4161*t4183*(-0.642788*t5467 - 0.766044*t5472);
  p_output1[47]=t4287*t4308*(t3668*t4206*t5306 - 1.*t3712*t4206*(-0.766044*t5377 + 0.642788*t5385) - 1.*t3783*t4206*t5402 + t3121*t4206*t5479 - 0.5*t3121*t3668*t4238*t5516 + 0.5*t3712*t3783*t4238*t5516) + t4219*t4287*(-1.*t3668*t4206*t5228 + t3712*t4206*(-0.766044*t5279 + 0.642788*t5286) + t4206*t4227*t5402 - 1.*t4206*t4234*t5479 - 0.5*t3712*t4227*t4238*t5516 + 0.5*t3668*t4234*t4238*t5516);
  p_output1[48]=t2762*t3986 + t3874*t5560 + t2823*t5565 + t2916*t5569 + t2883*t5579 + t2974*t5584 + t2953*t5589 + t3069*t5596 + t3043*t5601 - 1.13106*t5606 + 0.0306*t5615 + t2374*t5554*t751;
  p_output1[49]=t2762*t3179 + t3131*t5554 + t3126*t5560 + t2823*t5632 + t2916*t5637 + t2883*t5642 + t2974*t5654 + t2953*t5663 + t3069*t5668 + t3043*t5674 - 1.13106*t5688 + 0.0306*t5694;
  p_output1[50]=t2762*t3438 + t3381*t5554 + t3328*t5560 + t2823*t5709 + t2916*t5727 + t2883*t5743 + t2974*t5751 + t2953*t5759 + t3069*t5774 + t3043*t5779 - 1.13106*t5785 + 0.0306*t5797;
  p_output1[51]=t3750*t3758*t5810;
  p_output1[52]=0.5*t3818*t4142*t4161*(2.*t4133*(0.766044*t5606 + 0.642788*t5615) + 2.*t3847*(0.766044*t5688 + 0.642788*t5694)) + t4161*t4183*(-0.766044*t5785 - 0.642788*t5797);
  p_output1[53]=t4287*t4308*(-1.*t3712*t4206*(0.642788*t5688 - 0.766044*t5694) + t3121*t4206*t5810 - 1.*t3121*t3743*t4238*t5810 + t3668*t3712*t3783*t4238*t5810) + t4219*t4287*(t3712*t4206*(0.642788*t5606 - 0.766044*t5615) - 1.*t4206*t4234*t5810 - 1.*t3668*t3712*t4227*t4238*t5810 + t3743*t4234*t4238*t5810);
  p_output1[54]=t2916*t3997 + t3924*t5881 + t3986*t5889 + t2883*t5903 + t2974*t5945 + t2953*t5953 + t3069*t5981 + t3043*t6008 - 1.13106*t6015 + 0.0306*t6034;
  p_output1[55]=t2916*t3190 + t3173*t5881 + t3179*t5889 + t2883*t6069 + t2974*t6091 + t2953*t6132 + t3069*t6144 + t3043*t6153 - 1.13106*t6158 + 0.0306*t6178;
  p_output1[56]=t2916*t3455 + t3392*t5881 + t3438*t5889 + t2883*t6204 + t2974*t6216 + t2953*t6227 + t3069*t6257 + t3043*t6276 - 1.13106*t6305 + 0.0306*t6321;
  p_output1[57]=t3750*t3758*t6369;
  p_output1[58]=0.5*t3818*t4142*t4161*(2.*t4133*(0.766044*t6015 + 0.642788*t6034) + 2.*t3847*(0.766044*t6158 + 0.642788*t6178)) + t4161*t4183*(-0.766044*t6305 - 0.642788*t6321);
  p_output1[59]=t4287*t4308*(-1.*t3712*t4206*(0.642788*t6158 - 0.766044*t6178) + t3121*t4206*t6369 - 1.*t3121*t3743*t4238*t6369 + t3668*t3712*t3783*t4238*t6369) + t4219*t4287*(t3712*t4206*(0.642788*t6015 - 0.766044*t6034) - 1.*t4206*t4234*t6369 - 1.*t3668*t3712*t4227*t4238*t6369 + t3743*t4234*t4238*t6369);
  p_output1[60]=t2953*t4056 + t3997*t6544 + t4011*t6557 + t2974*t6564 + t3069*t6574 + t3043*t6587 - 1.13106*t6596 + 0.0306*t6610;
  p_output1[61]=t2953*t3240 + t3190*t6544 + t3201*t6557 + t2974*t6622 + t3069*t6632 + t3043*t6638 - 1.13106*t6645 + 0.0306*t6667;
  p_output1[62]=t2953*t3589 + t3455*t6544 + t3497*t6557 + t2974*t6684 + t3069*t6728 + t3043*t6748 - 1.13106*t6759 + 0.0306*t6768;
  p_output1[63]=t3750*t3758*t6783;
  p_output1[64]=0.5*t3818*t4142*t4161*(2.*t4133*(0.766044*t6596 + 0.642788*t6610) + 2.*t3847*(0.766044*t6645 + 0.642788*t6667)) + t4161*t4183*(-0.766044*t6759 - 0.642788*t6768);
  p_output1[65]=t4287*t4308*(-1.*t3712*t4206*(0.642788*t6645 - 0.766044*t6667) + t3121*t4206*t6783 - 1.*t3121*t3743*t4238*t6783 + t3668*t3712*t3783*t4238*t6783) + t4219*t4287*(t3712*t4206*(0.642788*t6596 - 0.766044*t6610) - 1.*t4206*t4234*t6783 - 1.*t3668*t3712*t4227*t4238*t6783 + t3743*t4234*t4238*t6783);
  p_output1[66]=t3069*t4065 + t4039*t6873 + t4056*t6878 + t3043*t6886 - 1.13106*t6891 + 0.0306*t6894;
  p_output1[67]=t3069*t3248 + t3232*t6873 + t3240*t6878 + t3043*t6914 - 1.13106*t6921 + 0.0306*t6935;
  p_output1[68]=t3069*t3617 + t3558*t6873 + t3589*t6878 + t3043*t6949 - 1.13106*t6967 + 0.0306*t6974;
  p_output1[69]=t3750*t3758*t6995;
  p_output1[70]=0.5*t3818*t4142*t4161*(2.*t4133*(0.766044*t6891 + 0.642788*t6894) + 2.*t3847*(0.766044*t6921 + 0.642788*t6935)) + t4161*t4183*(-0.766044*t6967 - 0.642788*t6974);
  p_output1[71]=t4287*t4308*(-1.*t3712*t4206*(0.642788*t6921 - 0.766044*t6935) + t3121*t4206*t6995 - 1.*t3121*t3743*t4238*t6995 + t3668*t3712*t3783*t4238*t6995) + t4219*t4287*(t3712*t4206*(0.642788*t6891 - 0.766044*t6894) - 1.*t4206*t4234*t6995 - 1.*t3668*t3712*t4227*t4238*t6995 + t3743*t4234*t4238*t6995);
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0.0306*t4119 + t4065*t7073 + t4086*t7079 - 1.13106*t7084;
  p_output1[79]=0.0306*t3301 + t3248*t7073 + t3281*t7079 - 1.13106*t7095;
  p_output1[80]=0.0306*t3664 + t3617*t7073 + t3631*t7079 - 1.13106*t7106;
  p_output1[81]=t3750*t3758*t7119;
  p_output1[82]=0.5*t3818*t4142*t4161*(2.*t4133*(t4225 + 0.766044*t7084) + 2.*t3847*(t3779 + 0.766044*t7095)) + t4161*t4183*(-0.642788*t3664 - 0.766044*t7106);
  p_output1[83]=t4287*t4308*(-1.*t3712*t4206*(t4174 + 0.642788*t7095) + t3121*t4206*t7119 - 1.*t3121*t3743*t4238*t7119 + t3668*t3712*t3783*t4238*t7119) + t4219*t4287*(t3712*t4206*(-0.766044*t4119 + 0.642788*t7084) - 1.*t4206*t4234*t7119 - 1.*t3668*t3712*t4227*t4238*t7119 + t3743*t4234*t4238*t7119);
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftFoot_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




