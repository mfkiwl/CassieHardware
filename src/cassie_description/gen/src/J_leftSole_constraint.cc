/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:19 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftSole_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1251;
  double t307;
  double t837;
  double t956;
  double t1155;
  double t1594;
  double t1676;
  double t2027;
  double t2324;
  double t2662;
  double t3126;
  double t4083;
  double t4112;
  double t4156;
  double t4277;
  double t3896;
  double t4029;
  double t4033;
  double t4791;
  double t4929;
  double t5111;
  double t5642;
  double t5722;
  double t5887;
  double t6050;
  double t5512;
  double t5562;
  double t5573;
  double t6333;
  double t6376;
  double t6438;
  double t6621;
  double t6653;
  double t6680;
  double t6706;
  double t6730;
  double t6741;
  double t6748;
  double t6970;
  double t6977;
  double t6978;
  double t7207;
  double t7210;
  double t7265;
  double t7399;
  double t7459;
  double t7476;
  double t7506;
  double t7726;
  double t7744;
  double t7753;
  double t7762;
  double t7763;
  double t7764;
  double t7886;
  double t7933;
  double t7936;
  double t7952;
  double t8025;
  double t8068;
  double t8086;
  double t8340;
  double t8343;
  double t8349;
  double t8514;
  double t8605;
  double t8641;
  double t8643;
  double t8648;
  double t8649;
  double t8927;
  double t404;
  double t741;
  double t8977;
  double t8997;
  double t8998;
  double t4214;
  double t4577;
  double t4624;
  double t5132;
  double t5177;
  double t5213;
  double t9421;
  double t9768;
  double t9810;
  double t10413;
  double t10417;
  double t10420;
  double t5994;
  double t6093;
  double t6117;
  double t6545;
  double t6600;
  double t6601;
  double t6686;
  double t6712;
  double t6727;
  double t10676;
  double t10677;
  double t10679;
  double t10690;
  double t10709;
  double t10719;
  double t6781;
  double t6791;
  double t6956;
  double t7266;
  double t7400;
  double t7401;
  double t10721;
  double t10722;
  double t10809;
  double t10864;
  double t10880;
  double t10926;
  double t7694;
  double t7703;
  double t7709;
  double t7836;
  double t7904;
  double t7905;
  double t11008;
  double t11064;
  double t11079;
  double t11088;
  double t11100;
  double t11104;
  double t7959;
  double t7964;
  double t7965;
  double t8413;
  double t8528;
  double t8604;
  double t11123;
  double t11124;
  double t11128;
  double t11234;
  double t11265;
  double t11281;
  double t8645;
  double t8646;
  double t8647;
  double t11323;
  double t11324;
  double t11333;
  double t11340;
  double t11342;
  double t11343;
  double t8948;
  double t8949;
  double t8956;
  double t8965;
  double t8966;
  double t8967;
  double t11462;
  double t11473;
  double t11481;
  double t11880;
  double t11884;
  double t11888;
  double t11449;
  double t11459;
  double t11460;
  double t11461;
  double t11498;
  double t11499;
  double t11500;
  double t11501;
  double t11502;
  double t11732;
  double t11892;
  double t11893;
  double t12315;
  double t12324;
  double t12325;
  double t12258;
  double t12326;
  double t12327;
  double t12703;
  double t12704;
  double t12708;
  double t12422;
  double t12709;
  double t12710;
  double t12884;
  double t12909;
  double t12910;
  double t12793;
  double t12911;
  double t12912;
  double t12914;
  double t12915;
  double t12916;
  double t11369;
  double t11385;
  double t11389;
  double t11392;
  double t11393;
  double t11407;
  double t12932;
  double t12934;
  double t12935;
  double t12944;
  double t12945;
  double t12946;
  double t12937;
  double t12938;
  double t12939;
  double t12940;
  double t12941;
  double t12942;
  double t12943;
  double t12947;
  double t12948;
  double t12988;
  double t12998;
  double t13115;
  double t12972;
  double t13284;
  double t13357;
  double t13368;
  double t13369;
  double t13373;
  double t13367;
  double t13377;
  double t13381;
  double t13389;
  double t13396;
  double t13400;
  double t13385;
  double t13401;
  double t13402;
  double t13404;
  double t13408;
  double t13409;
  double t12913;
  double t12917;
  double t12918;
  double t12921;
  double t12928;
  double t12929;
  double t12936;
  double t13403;
  double t13410;
  double t13473;
  double t13536;
  double t13562;
  double t13604;
  double t13605;
  double t13665;
  double t13743;
  double t13792;
  double t13793;
  double t13901;
  double t13919;
  double t13927;
  double t13928;
  double t13929;
  double t13956;
  double t13993;
  double t13997;
  double t13999;
  double t14000;
  double t14001;
  double t14002;
  double t14006;
  double t14007;
  double t14008;
  double t14009;
  double t5352;
  double t5387;
  double t5415;
  double t10491;
  double t10548;
  double t10617;
  double t14260;
  double t14261;
  double t14262;
  double t14258;
  double t14259;
  double t14266;
  double t14270;
  double t13978;
  double t13985;
  double t13989;
  double t14102;
  double t14155;
  double t14188;
  double t14286;
  double t14290;
  double t14291;
  double t14292;
  double t14293;
  double t14294;
  double t14298;
  double t14299;
  double t14300;
  double t14301;
  double t14335;
  double t14336;
  double t14338;
  double t14353;
  double t14356;
  double t14358;
  double t14361;
  double t14369;
  double t14370;
  double t14372;
  double t14375;
  double t14376;
  double t14380;
  double t14388;
  double t14389;
  double t14391;
  double t14392;
  double t14393;
  double t14398;
  double t14400;
  double t14401;
  double t14410;
  double t14411;
  double t14412;
  double t14416;
  double t14418;
  double t14420;
  double t14429;
  double t14430;
  double t14431;
  double t14433;
  double t14436;
  double t14438;
  double t14470;
  double t14471;
  double t14472;
  double t14528;
  double t14562;
  double t14563;
  double t14590;
  double t14591;
  double t14592;
  double t14594;
  double t14596;
  double t14597;
  double t14599;
  double t14600;
  double t14601;
  double t14613;
  double t14614;
  double t14615;
  double t14617;
  double t14618;
  double t14619;
  double t14621;
  double t14622;
  double t14623;
  double t14625;
  double t14626;
  double t14627;
  double t14629;
  double t14630;
  double t14631;
  double t14633;
  double t14634;
  double t14635;
  double t14697;
  double t14698;
  double t14699;
  double t14706;
  double t14745;
  double t14783;
  double t14838;
  double t14854;
  double t14864;
  double t14866;
  double t14867;
  double t14868;
  double t14872;
  double t14876;
  double t14880;
  double t14888;
  double t14892;
  double t14896;
  double t14898;
  double t14899;
  double t14900;
  double t14905;
  double t14906;
  double t14907;
  double t14947;
  double t14948;
  double t14983;
  double t15016;
  double t15039;
  double t15054;
  double t15063;
  double t15064;
  double t15065;
  double t15067;
  double t15070;
  double t15074;
  double t15082;
  double t15086;
  double t15090;
  double t13966;
  double t12920;
  double t12930;
  double t12931;
  double t13855;
  double t14441;
  double t14449;
  double t14450;
  double t14452;
  double t14455;
  double t14456;
  double t14637;
  double t14638;
  double t14639;
  double t14641;
  double t14642;
  double t14643;
  double t14051;
  double t14217;
  double t14236;
  double t14502;
  double t14525;
  double t14526;
  double t14702;
  double t14703;
  double t14704;
  double t15199;
  double t15203;
  double t15207;
  double t15219;
  double t15223;
  double t15224;
  double t14349;
  double t14350;
  double t14351;
  double t15357;
  double t15358;
  double t15359;
  double t15365;
  double t15367;
  double t15368;
  double t15377;
  double t15378;
  double t15379;
  double t15383;
  double t15386;
  double t15387;
  double t15396;
  double t15397;
  double t15398;
  double t15400;
  double t15403;
  double t15405;
  double t15408;
  double t15416;
  double t15417;
  double t15419;
  double t15422;
  double t15423;
  double t15427;
  double t15435;
  double t15436;
  double t15458;
  double t15459;
  double t15462;
  double t15479;
  double t15480;
  double t15508;
  double t15533;
  double t15534;
  double t15535;
  double t15538;
  double t15548;
  double t15549;
  double t15551;
  double t15552;
  double t15553;
  double t15555;
  double t15556;
  double t15557;
  double t15559;
  double t15560;
  double t15561;
  double t15563;
  double t15564;
  double t15565;
  double t15567;
  double t15568;
  double t15569;
  double t15571;
  double t15572;
  double t15573;
  double t15591;
  double t15592;
  double t15593;
  double t15645;
  double t15646;
  double t15647;
  double t15649;
  double t15650;
  double t15651;
  double t15653;
  double t15654;
  double t15685;
  double t15687;
  double t15688;
  double t15691;
  double t15698;
  double t15702;
  double t15706;
  double t15714;
  double t15715;
  double t15716;
  double t15718;
  double t15719;
  double t15720;
  double t15775;
  double t15791;
  double t15801;
  double t15575;
  double t15576;
  double t15577;
  double t15579;
  double t15580;
  double t15581;
  double t15438;
  double t15439;
  double t15440;
  double t15445;
  double t15447;
  double t15448;
  double t15803;
  double t15804;
  double t15805;
  double t15837;
  double t15869;
  double t15892;
  double t15587;
  double t15588;
  double t15589;
  double t15954;
  double t15955;
  double t15956;
  double t15957;
  double t15958;
  double t15959;
  double t15475;
  double t15476;
  double t15477;
  double t15346;
  double t15347;
  double t15355;
  double t16124;
  double t16126;
  double t16127;
  double t16136;
  double t16144;
  double t16145;
  double t16149;
  double t16152;
  double t16153;
  double t16162;
  double t16163;
  double t16164;
  double t16166;
  double t16169;
  double t16171;
  double t16174;
  double t16182;
  double t16183;
  double t16185;
  double t16188;
  double t16189;
  double t16193;
  double t16201;
  double t16202;
  double t16204;
  double t16205;
  double t16206;
  double t16244;
  double t16245;
  double t16246;
  double t16251;
  double t16253;
  double t16254;
  double t16263;
  double t16264;
  double t16265;
  double t16269;
  double t16272;
  double t16273;
  double t16282;
  double t16283;
  double t16284;
  double t16286;
  double t16287;
  double t16288;
  double t16290;
  double t16291;
  double t16292;
  double t16295;
  double t16296;
  double t16297;
  double t16299;
  double t16308;
  double t16309;
  double t16325;
  double t16326;
  double t16328;
  double t16329;
  double t16330;
  double t16332;
  double t16333;
  double t16334;
  double t16336;
  double t16337;
  double t16338;
  double t16340;
  double t16341;
  double t16342;
  double t16344;
  double t16345;
  double t16346;
  double t16397;
  double t16398;
  double t16399;
  double t16401;
  double t16402;
  double t16403;
  double t16405;
  double t16406;
  double t16407;
  double t16311;
  double t16312;
  double t16313;
  double t16315;
  double t16316;
  double t16317;
  double t16211;
  double t16213;
  double t16214;
  double t16223;
  double t16224;
  double t16225;
  double t16434;
  double t16457;
  double t16462;
  double t16467;
  double t16468;
  double t16471;
  double t16504;
  double t16505;
  double t16521;
  double t16529;
  double t16552;
  double t16557;
  double t16676;
  double t16677;
  double t16681;
  double t16683;
  double t16684;
  double t16685;
  double t16696;
  double t16700;
  double t16709;
  double t16713;
  double t16717;
  double t16726;
  double t16728;
  double t16732;
  double t16733;
  double t16735;
  double t16736;
  double t16739;
  double t16643;
  double t16648;
  double t16649;
  double t16651;
  double t16655;
  double t16788;
  double t16789;
  double t16792;
  double t16801;
  double t16802;
  double t16803;
  double t16805;
  double t16806;
  double t16807;
  double t16811;
  double t16813;
  double t16815;
  double t16824;
  double t16825;
  double t16828;
  double t16832;
  double t16833;
  double t16841;
  double t16861;
  double t16862;
  double t16863;
  double t16865;
  double t16867;
  double t16868;
  double t16870;
  double t16871;
  double t16872;
  double t16881;
  double t16882;
  double t16883;
  double t16885;
  double t16886;
  double t16887;
  double t16889;
  double t16890;
  double t16891;
  double t16843;
  double t16844;
  double t16845;
  double t16847;
  double t16848;
  double t16849;
  double t16748;
  double t16749;
  double t16752;
  double t16761;
  double t16762;
  double t16763;
  double t16893;
  double t16894;
  double t16895;
  double t16897;
  double t16898;
  double t16899;
  double t16855;
  double t16856;
  double t16857;
  double t16917;
  double t16918;
  double t16919;
  double t16920;
  double t16921;
  double t16945;
  double t16771;
  double t16773;
  double t16775;
  double t16661;
  double t16665;
  double t16669;
  double t17066;
  double t17069;
  double t17072;
  double t17081;
  double t17082;
  double t17084;
  double t17088;
  double t17089;
  double t17091;
  double t17092;
  double t17093;
  double t17095;
  double t17119;
  double t17135;
  double t17146;
  double t17147;
  double t17148;
  double t17155;
  double t17158;
  double t17162;
  double t17012;
  double t17036;
  double t17059;
  double t17060;
  double t17061;
  double t17197;
  double t17203;
  double t17216;
  double t17219;
  double t17232;
  double t17246;
  double t17247;
  double t17248;
  double t17250;
  double t17254;
  double t17255;
  double t17257;
  double t17258;
  double t17259;
  double t17261;
  double t17262;
  double t17263;
  double t17265;
  double t17266;
  double t17267;
  double t17283;
  double t17284;
  double t17285;
  double t17288;
  double t17292;
  double t17294;
  double t17295;
  double t17296;
  double t17298;
  double t17299;
  double t17300;
  double t17302;
  double t17303;
  double t17304;
  double t17306;
  double t17307;
  double t17320;
  double t17334;
  double t17335;
  double t17336;
  double t17269;
  double t17273;
  double t17274;
  double t17276;
  double t17277;
  double t17278;
  double t17167;
  double t17168;
  double t17169;
  double t17174;
  double t17175;
  double t17176;
  double t17338;
  double t17342;
  double t17343;
  double t17345;
  double t17346;
  double t17347;
  double t17366;
  double t17367;
  double t17368;
  double t17399;
  double t17400;
  double t17402;
  double t17403;
  double t17404;
  double t17409;
  double t17412;
  double t17416;
  double t17420;
  double t17421;
  double t17423;
  double t17424;
  double t17428;
  double t17391;
  double t17392;
  double t17393;
  double t17395;
  double t17396;
  double t17468;
  double t17469;
  double t17476;
  double t17477;
  double t17478;
  double t17480;
  double t17484;
  double t17486;
  double t17501;
  double t17509;
  double t17511;
  double t17512;
  double t17513;
  double t17537;
  double t17553;
  double t17564;
  double t17565;
  double t17569;
  double t17576;
  double t17577;
  double t17579;
  double t17580;
  double t17581;
  double t17584;
  double t17585;
  double t17586;
  double t17515;
  double t17516;
  double t17519;
  double t17523;
  double t17527;
  double t17528;
  double t17430;
  double t17446;
  double t17456;
  double t17458;
  double t17459;
  double t17460;
  double t17588;
  double t17589;
  double t17590;
  double t17592;
  double t17593;
  double t17594;
  double t17624;
  double t17637;
  double t17638;
  double t17671;
  double t17672;
  double t17675;
  double t17676;
  double t17678;
  double t17679;
  double t17683;
  double t17664;
  double t17665;
  double t17667;
  double t17668;
  double t17669;
  double t17696;
  double t17697;
  double t17724;
  double t17725;
  double t17727;
  double t17728;
  double t17729;
  double t17744;
  double t17745;
  double t17751;
  double t17752;
  double t17754;
  double t17755;
  double t17756;
  double t17733;
  double t17734;
  double t17735;
  double t17737;
  double t17738;
  double t17739;
  double t17685;
  double t17686;
  double t17687;
  double t17689;
  double t17690;
  double t17691;
  double t17758;
  double t17759;
  double t17760;
  double t17762;
  double t17763;
  double t17764;
  double t17800;
  double t17801;
  double t17802;
  double t17857;
  double t17858;
  double t17845;
  double t17846;
  double t17847;
  double t17851;
  double t17852;
  double t17879;
  double t17880;
  double t17896;
  double t17897;
  double t17882;
  double t17883;
  double t17887;
  double t17889;
  double t17890;
  double t17860;
  double t17864;
  double t17865;
  double t17872;
  double t17873;
  double t17899;
  double t17900;
  double t17901;
  double t17906;
  double t17907;
  double t17928;
  double t17929;
  double t17930;
  double t17977;
  double t17978;
  double t17980;
  double t17981;
  double t17982;
  double t17992;
  double t17993;
  double t17984;
  double t17985;
  double t17999;
  double t18000;
  double t18017;
  double t18018;
  double t13964;
  t1251 = Cos(var1[3]);
  t307 = Cos(var1[6]);
  t837 = Cos(var1[5]);
  t956 = Sin(var1[3]);
  t1155 = -1.*t837*t956;
  t1594 = Sin(var1[4]);
  t1676 = Sin(var1[5]);
  t2027 = -1.*t1251*t1594*t1676;
  t2324 = t1155 + t2027;
  t2662 = Cos(var1[4]);
  t3126 = Sin(var1[6]);
  t4083 = Cos(var1[7]);
  t4112 = -1.*t4083;
  t4156 = 1. + t4112;
  t4277 = Sin(var1[7]);
  t3896 = t307*t2324;
  t4029 = -1.*t1251*t2662*t3126;
  t4033 = t3896 + t4029;
  t4791 = t1251*t837*t1594;
  t4929 = -1.*t956*t1676;
  t5111 = t4791 + t4929;
  t5642 = Cos(var1[8]);
  t5722 = -1.*t5642;
  t5887 = 1. + t5722;
  t6050 = Sin(var1[8]);
  t5512 = t4083*t5111;
  t5562 = t4033*t4277;
  t5573 = t5512 + t5562;
  t6333 = -1.*t1251*t2662*t307;
  t6376 = -1.*t2324*t3126;
  t6438 = t6333 + t6376;
  t6621 = Cos(var1[9]);
  t6653 = -1.*t6621;
  t6680 = 1. + t6653;
  t6706 = Sin(var1[9]);
  t6730 = t5642*t5573;
  t6741 = t6438*t6050;
  t6748 = t6730 + t6741;
  t6970 = t5642*t6438;
  t6977 = -1.*t5573*t6050;
  t6978 = t6970 + t6977;
  t7207 = Cos(var1[10]);
  t7210 = -1.*t7207;
  t7265 = 1. + t7210;
  t7399 = Sin(var1[10]);
  t7459 = -1.*t6706*t6748;
  t7476 = t6621*t6978;
  t7506 = t7459 + t7476;
  t7726 = t6621*t6748;
  t7744 = t6706*t6978;
  t7753 = t7726 + t7744;
  t7762 = Cos(var1[11]);
  t7763 = -1.*t7762;
  t7764 = 1. + t7763;
  t7886 = Sin(var1[11]);
  t7933 = t7399*t7506;
  t7936 = t7207*t7753;
  t7952 = t7933 + t7936;
  t8025 = t7207*t7506;
  t8068 = -1.*t7399*t7753;
  t8086 = t8025 + t8068;
  t8340 = Cos(var1[13]);
  t8343 = -1.*t8340;
  t8349 = 1. + t8343;
  t8514 = Sin(var1[13]);
  t8605 = -1.*t7886*t7952;
  t8641 = t7762*t8086;
  t8643 = t8605 + t8641;
  t8648 = t7762*t7952;
  t8649 = t7886*t8086;
  t8927 = t8648 + t8649;
  t404 = -1.*t307;
  t741 = 1. + t404;
  t8977 = t1251*t837;
  t8997 = -1.*t956*t1594*t1676;
  t8998 = t8977 + t8997;
  t4214 = 0.135*t4156;
  t4577 = 0.049*t4277;
  t4624 = t4214 + t4577;
  t5132 = -0.049*t4156;
  t5177 = 0.135*t4277;
  t5213 = t5132 + t5177;
  t9421 = t307*t8998;
  t9768 = -1.*t2662*t956*t3126;
  t9810 = t9421 + t9768;
  t10413 = t837*t956*t1594;
  t10417 = t1251*t1676;
  t10420 = t10413 + t10417;
  t5994 = -0.049*t5887;
  t6093 = -0.09*t6050;
  t6117 = t5994 + t6093;
  t6545 = -0.09*t5887;
  t6600 = 0.049*t6050;
  t6601 = t6545 + t6600;
  t6686 = -0.049*t6680;
  t6712 = -0.21*t6706;
  t6727 = t6686 + t6712;
  t10676 = t4083*t10420;
  t10677 = t9810*t4277;
  t10679 = t10676 + t10677;
  t10690 = -1.*t2662*t307*t956;
  t10709 = -1.*t8998*t3126;
  t10719 = t10690 + t10709;
  t6781 = -0.21*t6680;
  t6791 = 0.049*t6706;
  t6956 = t6781 + t6791;
  t7266 = -0.27068*t7265;
  t7400 = 0.00159*t7399;
  t7401 = t7266 + t7400;
  t10721 = t5642*t10679;
  t10722 = t10719*t6050;
  t10809 = t10721 + t10722;
  t10864 = t5642*t10719;
  t10880 = -1.*t10679*t6050;
  t10926 = t10864 + t10880;
  t7694 = -0.00159*t7265;
  t7703 = -0.27068*t7399;
  t7709 = t7694 + t7703;
  t7836 = 0.01841*t7764;
  t7904 = -0.70544*t7886;
  t7905 = t7836 + t7904;
  t11008 = -1.*t6706*t10809;
  t11064 = t6621*t10926;
  t11079 = t11008 + t11064;
  t11088 = t6621*t10809;
  t11100 = t6706*t10926;
  t11104 = t11088 + t11100;
  t7959 = -0.70544*t7764;
  t7964 = -0.01841*t7886;
  t7965 = t7959 + t7964;
  t8413 = -1.11344*t8349;
  t8528 = 0.02159*t8514;
  t8604 = t8413 + t8528;
  t11123 = t7399*t11079;
  t11124 = t7207*t11104;
  t11128 = t11123 + t11124;
  t11234 = t7207*t11079;
  t11265 = -1.*t7399*t11104;
  t11281 = t11234 + t11265;
  t8645 = -0.02159*t8349;
  t8646 = -1.11344*t8514;
  t8647 = t8645 + t8646;
  t11323 = -1.*t7886*t11128;
  t11324 = t7762*t11281;
  t11333 = t11323 + t11324;
  t11340 = t7762*t11128;
  t11342 = t7886*t11281;
  t11343 = t11340 + t11342;
  t8948 = t8514*t8643;
  t8949 = t8340*t8927;
  t8956 = t8948 + t8949;
  t8965 = t8340*t8643;
  t8966 = -1.*t8514*t8927;
  t8967 = t8965 + t8966;
  t11462 = t837*t956;
  t11473 = t1251*t1594*t1676;
  t11481 = t11462 + t11473;
  t11880 = t1251*t2662*t307;
  t11884 = -1.*t11481*t3126;
  t11888 = t11880 + t11884;
  t11449 = -1.*t1251*t837*t1594;
  t11459 = t956*t1676;
  t11460 = t11449 + t11459;
  t11461 = t4083*t11460;
  t11498 = t307*t11481;
  t11499 = t1251*t2662*t3126;
  t11500 = t11498 + t11499;
  t11501 = t11500*t4277;
  t11502 = t11461 + t11501;
  t11732 = t5642*t11502;
  t11892 = t11888*t6050;
  t11893 = t11732 + t11892;
  t12315 = t5642*t11888;
  t12324 = -1.*t11502*t6050;
  t12325 = t12315 + t12324;
  t12258 = -1.*t6706*t11893;
  t12326 = t6621*t12325;
  t12327 = t12258 + t12326;
  t12703 = t6621*t11893;
  t12704 = t6706*t12325;
  t12708 = t12703 + t12704;
  t12422 = t7399*t12327;
  t12709 = t7207*t12708;
  t12710 = t12422 + t12709;
  t12884 = t7207*t12327;
  t12909 = -1.*t7399*t12708;
  t12910 = t12884 + t12909;
  t12793 = -1.*t7886*t12710;
  t12911 = t7762*t12910;
  t12912 = t12793 + t12911;
  t12914 = t7762*t12710;
  t12915 = t7886*t12910;
  t12916 = t12914 + t12915;
  t11369 = t8514*t11333;
  t11385 = t8340*t11343;
  t11389 = t11369 + t11385;
  t11392 = t8340*t11333;
  t11393 = -1.*t8514*t11343;
  t11407 = t11392 + t11393;
  t12932 = 0.642788*t11389;
  t12934 = 0.766044*t11407;
  t12935 = t12932 + t12934;
  t12944 = t307*t1594;
  t12945 = t2662*t1676*t3126;
  t12946 = t12944 + t12945;
  t12937 = t2662*t837*t4083;
  t12938 = -1.*t2662*t307*t1676;
  t12939 = t1594*t3126;
  t12940 = t12938 + t12939;
  t12941 = t12940*t4277;
  t12942 = t12937 + t12941;
  t12943 = t5642*t12942;
  t12947 = t12946*t6050;
  t12948 = t12943 + t12947;
  t12988 = t5642*t12946;
  t12998 = -1.*t12942*t6050;
  t13115 = t12988 + t12998;
  t12972 = -1.*t6706*t12948;
  t13284 = t6621*t13115;
  t13357 = t12972 + t13284;
  t13368 = t6621*t12948;
  t13369 = t6706*t13115;
  t13373 = t13368 + t13369;
  t13367 = t7399*t13357;
  t13377 = t7207*t13373;
  t13381 = t13367 + t13377;
  t13389 = t7207*t13357;
  t13396 = -1.*t7399*t13373;
  t13400 = t13389 + t13396;
  t13385 = -1.*t7886*t13381;
  t13401 = t7762*t13400;
  t13402 = t13385 + t13401;
  t13404 = t7762*t13381;
  t13408 = t7886*t13400;
  t13409 = t13404 + t13408;
  t12913 = t8514*t12912;
  t12917 = t8340*t12916;
  t12918 = t12913 + t12917;
  t12921 = t8340*t12912;
  t12928 = -1.*t8514*t12916;
  t12929 = t12921 + t12928;
  t12936 = Power(t12935,2);
  t13403 = t8514*t13402;
  t13410 = t8340*t13409;
  t13473 = t13403 + t13410;
  t13536 = 0.642788*t13473;
  t13562 = t8340*t13402;
  t13604 = -1.*t8514*t13409;
  t13605 = t13562 + t13604;
  t13665 = 0.766044*t13605;
  t13743 = t13536 + t13665;
  t13792 = Power(t13743,2);
  t13793 = t12936 + t13792;
  t13901 = -0.642788*t12918;
  t13919 = -0.766044*t12929;
  t13927 = t13901 + t13919;
  t13928 = Power(t13927,2);
  t13929 = t13928 + t12936 + t13792;
  t13956 = 1/t13929;
  t13993 = -0.766044*t12918;
  t13997 = 0.642788*t12929;
  t13999 = t13993 + t13997;
  t14000 = t4083*t11500;
  t14001 = -1.*t11460*t4277;
  t14002 = t14000 + t14001;
  t14006 = Power(t14002,2);
  t14007 = Power(t13999,2);
  t14008 = t14006 + t14007;
  t14009 = 1/Sqrt(t14008);
  t5352 = t4083*t4033;
  t5387 = -1.*t5111*t4277;
  t5415 = t5352 + t5387;
  t10491 = t4083*t9810;
  t10548 = -1.*t10420*t4277;
  t10617 = t10491 + t10548;
  t14260 = -0.766044*t11389;
  t14261 = 0.642788*t11407;
  t14262 = t14260 + t14261;
  t14258 = Power(t14008,-1.5);
  t14259 = 2.*t10617*t14002;
  t14266 = 2.*t13999*t14262;
  t14270 = t14259 + t14266;
  t13978 = t4083*t12940;
  t13985 = -1.*t2662*t837*t4277;
  t13989 = t13978 + t13985;
  t14102 = -0.766044*t13473;
  t14155 = 0.642788*t13605;
  t14188 = t14102 + t14155;
  t14286 = t10617*t13999*t14009;
  t14290 = -1.*t14002*t14262*t14009;
  t14291 = t14286 + t14290;
  t14292 = Power(t14291,2);
  t14293 = -1.*t13989*t13999*t14009;
  t14294 = t14002*t14188*t14009;
  t14298 = t14293 + t14294;
  t14299 = Power(t14298,2);
  t14300 = t14292 + t14299;
  t14301 = 1/t14300;
  t14335 = t307*t1594*t1676;
  t14336 = t2662*t3126;
  t14338 = t14335 + t14336;
  t14353 = -1.*t837*t4083*t1594;
  t14356 = t14338*t4277;
  t14358 = t14353 + t14356;
  t14361 = t2662*t307;
  t14369 = -1.*t1594*t1676*t3126;
  t14370 = t14361 + t14369;
  t14372 = t5642*t14358;
  t14375 = t14370*t6050;
  t14376 = t14372 + t14375;
  t14380 = t5642*t14370;
  t14388 = -1.*t14358*t6050;
  t14389 = t14380 + t14388;
  t14391 = -1.*t6706*t14376;
  t14392 = t6621*t14389;
  t14393 = t14391 + t14392;
  t14398 = t6621*t14376;
  t14400 = t6706*t14389;
  t14401 = t14398 + t14400;
  t14410 = t7399*t14393;
  t14411 = t7207*t14401;
  t14412 = t14410 + t14411;
  t14416 = t7207*t14393;
  t14418 = -1.*t7399*t14401;
  t14420 = t14416 + t14418;
  t14429 = -1.*t7886*t14412;
  t14430 = t7762*t14420;
  t14431 = t14429 + t14430;
  t14433 = t7762*t14412;
  t14436 = t7886*t14420;
  t14438 = t14433 + t14436;
  t14470 = -1.*t2662*t307*t956*t1676;
  t14471 = t956*t1594*t3126;
  t14472 = t14470 + t14471;
  t14528 = t2662*t837*t4083*t956;
  t14562 = t14472*t4277;
  t14563 = t14528 + t14562;
  t14590 = t307*t956*t1594;
  t14591 = t2662*t956*t1676*t3126;
  t14592 = t14590 + t14591;
  t14594 = t5642*t14563;
  t14596 = t14592*t6050;
  t14597 = t14594 + t14596;
  t14599 = t5642*t14592;
  t14600 = -1.*t14563*t6050;
  t14601 = t14599 + t14600;
  t14613 = -1.*t6706*t14597;
  t14614 = t6621*t14601;
  t14615 = t14613 + t14614;
  t14617 = t6621*t14597;
  t14618 = t6706*t14601;
  t14619 = t14617 + t14618;
  t14621 = t7399*t14615;
  t14622 = t7207*t14619;
  t14623 = t14621 + t14622;
  t14625 = t7207*t14615;
  t14626 = -1.*t7399*t14619;
  t14627 = t14625 + t14626;
  t14629 = -1.*t7886*t14623;
  t14630 = t7762*t14627;
  t14631 = t14629 + t14630;
  t14633 = t7762*t14623;
  t14634 = t7886*t14627;
  t14635 = t14633 + t14634;
  t14697 = t1251*t2662*t307*t1676;
  t14698 = -1.*t1251*t1594*t3126;
  t14699 = t14697 + t14698;
  t14706 = -1.*t1251*t2662*t837*t4083;
  t14745 = t14699*t4277;
  t14783 = t14706 + t14745;
  t14838 = -1.*t1251*t307*t1594;
  t14854 = -1.*t1251*t2662*t1676*t3126;
  t14864 = t14838 + t14854;
  t14866 = t5642*t14783;
  t14867 = t14864*t6050;
  t14868 = t14866 + t14867;
  t14872 = t5642*t14864;
  t14876 = -1.*t14783*t6050;
  t14880 = t14872 + t14876;
  t14888 = -1.*t6706*t14868;
  t14892 = t6621*t14880;
  t14896 = t14888 + t14892;
  t14898 = t6621*t14868;
  t14899 = t6706*t14880;
  t14900 = t14898 + t14899;
  t14905 = t7399*t14896;
  t14906 = t7207*t14900;
  t14907 = t14905 + t14906;
  t14947 = t7207*t14896;
  t14948 = -1.*t7399*t14900;
  t14983 = t14947 + t14948;
  t15016 = -1.*t7886*t14907;
  t15039 = t7762*t14983;
  t15054 = t15016 + t15039;
  t15063 = t7762*t14907;
  t15064 = t7886*t14983;
  t15065 = t15063 + t15064;
  t15067 = t8514*t15054;
  t15070 = t8340*t15065;
  t15074 = t15067 + t15070;
  t15082 = t8340*t15054;
  t15086 = -1.*t8514*t15065;
  t15090 = t15082 + t15086;
  t13966 = Sqrt(t13793);
  t12920 = 0.642788*t12918;
  t12930 = 0.766044*t12929;
  t12931 = t12920 + t12930;
  t13855 = 1/Sqrt(t13793);
  t14441 = t8514*t14431;
  t14449 = t8340*t14438;
  t14450 = t14441 + t14449;
  t14452 = t8340*t14431;
  t14455 = -1.*t8514*t14438;
  t14456 = t14452 + t14455;
  t14637 = t8514*t14631;
  t14638 = t8340*t14635;
  t14639 = t14637 + t14638;
  t14641 = t8340*t14631;
  t14642 = -1.*t8514*t14635;
  t14643 = t14641 + t14642;
  t14051 = t13989*t13999*t14009;
  t14217 = -1.*t14002*t14188*t14009;
  t14236 = t14051 + t14217;
  t14502 = t4083*t14472;
  t14525 = -1.*t2662*t837*t956*t4277;
  t14526 = t14502 + t14525;
  t14702 = t4083*t14699;
  t14703 = t1251*t2662*t837*t4277;
  t14704 = t14702 + t14703;
  t15199 = -0.766044*t15074;
  t15203 = 0.642788*t15090;
  t15207 = t15199 + t15203;
  t15219 = 2.*t14704*t14002;
  t15223 = 2.*t13999*t15207;
  t15224 = t15219 + t15223;
  t14349 = t4083*t14338;
  t14350 = t837*t1594*t4277;
  t14351 = t14349 + t14350;
  t15357 = -1.*t2662*t4083*t1676;
  t15358 = -1.*t2662*t837*t307*t4277;
  t15359 = t15357 + t15358;
  t15365 = t5642*t15359;
  t15367 = t2662*t837*t3126*t6050;
  t15368 = t15365 + t15367;
  t15377 = t2662*t837*t5642*t3126;
  t15378 = -1.*t15359*t6050;
  t15379 = t15377 + t15378;
  t15383 = -1.*t6706*t15368;
  t15386 = t6621*t15379;
  t15387 = t15383 + t15386;
  t15396 = t6621*t15368;
  t15397 = t6706*t15379;
  t15398 = t15396 + t15397;
  t15400 = t7399*t15387;
  t15403 = t7207*t15398;
  t15405 = t15400 + t15403;
  t15408 = t7207*t15387;
  t15416 = -1.*t7399*t15398;
  t15417 = t15408 + t15416;
  t15419 = -1.*t7886*t15405;
  t15422 = t7762*t15417;
  t15423 = t15419 + t15422;
  t15427 = t7762*t15405;
  t15435 = t7886*t15417;
  t15436 = t15427 + t15435;
  t15458 = -1.*t837*t956*t1594;
  t15459 = -1.*t1251*t1676;
  t15462 = t15458 + t15459;
  t15479 = t4083*t8998;
  t15480 = t307*t15462*t4277;
  t15508 = t15479 + t15480;
  t15533 = t5642*t15508;
  t15534 = -1.*t15462*t3126*t6050;
  t15535 = t15533 + t15534;
  t15538 = -1.*t5642*t15462*t3126;
  t15548 = -1.*t15508*t6050;
  t15549 = t15538 + t15548;
  t15551 = -1.*t6706*t15535;
  t15552 = t6621*t15549;
  t15553 = t15551 + t15552;
  t15555 = t6621*t15535;
  t15556 = t6706*t15549;
  t15557 = t15555 + t15556;
  t15559 = t7399*t15553;
  t15560 = t7207*t15557;
  t15561 = t15559 + t15560;
  t15563 = t7207*t15553;
  t15564 = -1.*t7399*t15557;
  t15565 = t15563 + t15564;
  t15567 = -1.*t7886*t15561;
  t15568 = t7762*t15565;
  t15569 = t15567 + t15568;
  t15571 = t7762*t15561;
  t15572 = t7886*t15565;
  t15573 = t15571 + t15572;
  t15591 = t4083*t11481;
  t15592 = t307*t5111*t4277;
  t15593 = t15591 + t15592;
  t15645 = t5642*t15593;
  t15646 = -1.*t5111*t3126*t6050;
  t15647 = t15645 + t15646;
  t15649 = -1.*t5642*t5111*t3126;
  t15650 = -1.*t15593*t6050;
  t15651 = t15649 + t15650;
  t15653 = -1.*t6706*t15647;
  t15654 = t6621*t15651;
  t15685 = t15653 + t15654;
  t15687 = t6621*t15647;
  t15688 = t6706*t15651;
  t15691 = t15687 + t15688;
  t15698 = t7399*t15685;
  t15702 = t7207*t15691;
  t15706 = t15698 + t15702;
  t15714 = t7207*t15685;
  t15715 = -1.*t7399*t15691;
  t15716 = t15714 + t15715;
  t15718 = -1.*t7886*t15706;
  t15719 = t7762*t15716;
  t15720 = t15718 + t15719;
  t15775 = t7762*t15706;
  t15791 = t7886*t15716;
  t15801 = t15775 + t15791;
  t15575 = t8514*t15569;
  t15576 = t8340*t15573;
  t15577 = t15575 + t15576;
  t15579 = t8340*t15569;
  t15580 = -1.*t8514*t15573;
  t15581 = t15579 + t15580;
  t15438 = t8514*t15423;
  t15439 = t8340*t15436;
  t15440 = t15438 + t15439;
  t15445 = t8340*t15423;
  t15447 = -1.*t8514*t15436;
  t15448 = t15445 + t15447;
  t15803 = t8514*t15720;
  t15804 = t8340*t15801;
  t15805 = t15803 + t15804;
  t15837 = t8340*t15720;
  t15869 = -1.*t8514*t15801;
  t15892 = t15837 + t15869;
  t15587 = t307*t4083*t5111;
  t15588 = -1.*t11481*t4277;
  t15589 = t15587 + t15588;
  t15954 = 2.*t14002*t15589;
  t15955 = -0.766044*t15805;
  t15956 = 0.642788*t15892;
  t15957 = t15955 + t15956;
  t15958 = 2.*t15957*t13999;
  t15959 = t15954 + t15958;
  t15475 = t307*t4083*t15462;
  t15476 = -1.*t8998*t4277;
  t15477 = t15475 + t15476;
  t15346 = -1.*t2662*t837*t307*t4083;
  t15347 = t2662*t1676*t4277;
  t15355 = t15346 + t15347;
  t16124 = t2662*t307*t1676;
  t16126 = -1.*t1594*t3126;
  t16127 = t16124 + t16126;
  t16136 = t5642*t12946*t4277;
  t16144 = t16127*t6050;
  t16145 = t16136 + t16144;
  t16149 = t5642*t16127;
  t16152 = -1.*t12946*t4277*t6050;
  t16153 = t16149 + t16152;
  t16162 = -1.*t6706*t16145;
  t16163 = t6621*t16153;
  t16164 = t16162 + t16163;
  t16166 = t6621*t16145;
  t16169 = t6706*t16153;
  t16171 = t16166 + t16169;
  t16174 = t7399*t16164;
  t16182 = t7207*t16171;
  t16183 = t16174 + t16182;
  t16185 = t7207*t16164;
  t16188 = -1.*t7399*t16171;
  t16189 = t16185 + t16188;
  t16193 = -1.*t7886*t16183;
  t16201 = t7762*t16189;
  t16202 = t16193 + t16201;
  t16204 = t7762*t16183;
  t16205 = t7886*t16189;
  t16206 = t16204 + t16205;
  t16244 = -1.*t307*t8998;
  t16245 = t2662*t956*t3126;
  t16246 = t16244 + t16245;
  t16251 = t5642*t10719*t4277;
  t16253 = t16246*t6050;
  t16254 = t16251 + t16253;
  t16263 = t5642*t16246;
  t16264 = -1.*t10719*t4277*t6050;
  t16265 = t16263 + t16264;
  t16269 = -1.*t6706*t16254;
  t16272 = t6621*t16265;
  t16273 = t16269 + t16272;
  t16282 = t6621*t16254;
  t16283 = t6706*t16265;
  t16284 = t16282 + t16283;
  t16286 = t7399*t16273;
  t16287 = t7207*t16284;
  t16288 = t16286 + t16287;
  t16290 = t7207*t16273;
  t16291 = -1.*t7399*t16284;
  t16292 = t16290 + t16291;
  t16295 = -1.*t7886*t16288;
  t16296 = t7762*t16292;
  t16297 = t16295 + t16296;
  t16299 = t7762*t16288;
  t16308 = t7886*t16292;
  t16309 = t16299 + t16308;
  t16325 = -1.*t307*t11481;
  t16326 = t16325 + t4029;
  t16328 = t5642*t11888*t4277;
  t16329 = t16326*t6050;
  t16330 = t16328 + t16329;
  t16332 = t5642*t16326;
  t16333 = -1.*t11888*t4277*t6050;
  t16334 = t16332 + t16333;
  t16336 = -1.*t6706*t16330;
  t16337 = t6621*t16334;
  t16338 = t16336 + t16337;
  t16340 = t6621*t16330;
  t16341 = t6706*t16334;
  t16342 = t16340 + t16341;
  t16344 = t7399*t16338;
  t16345 = t7207*t16342;
  t16346 = t16344 + t16345;
  t16397 = t7207*t16338;
  t16398 = -1.*t7399*t16342;
  t16399 = t16397 + t16398;
  t16401 = -1.*t7886*t16346;
  t16402 = t7762*t16399;
  t16403 = t16401 + t16402;
  t16405 = t7762*t16346;
  t16406 = t7886*t16399;
  t16407 = t16405 + t16406;
  t16311 = t8514*t16297;
  t16312 = t8340*t16309;
  t16313 = t16311 + t16312;
  t16315 = t8340*t16297;
  t16316 = -1.*t8514*t16309;
  t16317 = t16315 + t16316;
  t16211 = t8514*t16202;
  t16213 = t8340*t16206;
  t16214 = t16211 + t16213;
  t16223 = t8340*t16202;
  t16224 = -1.*t8514*t16206;
  t16225 = t16223 + t16224;
  t16434 = t8514*t16403;
  t16457 = t8340*t16407;
  t16462 = t16434 + t16457;
  t16467 = t8340*t16403;
  t16468 = -1.*t8514*t16407;
  t16471 = t16467 + t16468;
  t16504 = 2.*t4083*t11888*t14002;
  t16505 = -0.766044*t16462;
  t16521 = 0.642788*t16471;
  t16529 = t16505 + t16521;
  t16552 = 2.*t16529*t13999;
  t16557 = t16504 + t16552;
  t16676 = -1.*t5642*t6706*t13989;
  t16677 = -1.*t6621*t13989*t6050;
  t16681 = t16676 + t16677;
  t16683 = t6621*t5642*t13989;
  t16684 = -1.*t6706*t13989*t6050;
  t16685 = t16683 + t16684;
  t16696 = t7399*t16681;
  t16700 = t7207*t16685;
  t16709 = t16696 + t16700;
  t16713 = t7207*t16681;
  t16717 = -1.*t7399*t16685;
  t16726 = t16713 + t16717;
  t16728 = -1.*t7886*t16709;
  t16732 = t7762*t16726;
  t16733 = t16728 + t16732;
  t16735 = t7762*t16709;
  t16736 = t7886*t16726;
  t16739 = t16735 + t16736;
  t16643 = 0.135*t4083;
  t16648 = -0.049*t4277;
  t16649 = t16643 + t16648;
  t16651 = 0.049*t4083;
  t16655 = t16651 + t5177;
  t16788 = -1.*t5642*t6706*t10617;
  t16789 = -1.*t6621*t10617*t6050;
  t16792 = t16788 + t16789;
  t16801 = t6621*t5642*t10617;
  t16802 = -1.*t6706*t10617*t6050;
  t16803 = t16801 + t16802;
  t16805 = t7399*t16792;
  t16806 = t7207*t16803;
  t16807 = t16805 + t16806;
  t16811 = t7207*t16792;
  t16813 = -1.*t7399*t16803;
  t16815 = t16811 + t16813;
  t16824 = -1.*t7886*t16807;
  t16825 = t7762*t16815;
  t16828 = t16824 + t16825;
  t16832 = t7762*t16807;
  t16833 = t7886*t16815;
  t16841 = t16832 + t16833;
  t16861 = -1.*t5642*t6706*t14002;
  t16862 = -1.*t6621*t14002*t6050;
  t16863 = t16861 + t16862;
  t16865 = t6621*t5642*t14002;
  t16867 = -1.*t6706*t14002*t6050;
  t16868 = t16865 + t16867;
  t16870 = t7399*t16863;
  t16871 = t7207*t16868;
  t16872 = t16870 + t16871;
  t16881 = t7207*t16863;
  t16882 = -1.*t7399*t16868;
  t16883 = t16881 + t16882;
  t16885 = -1.*t7886*t16872;
  t16886 = t7762*t16883;
  t16887 = t16885 + t16886;
  t16889 = t7762*t16872;
  t16890 = t7886*t16883;
  t16891 = t16889 + t16890;
  t16843 = t8514*t16828;
  t16844 = t8340*t16841;
  t16845 = t16843 + t16844;
  t16847 = t8340*t16828;
  t16848 = -1.*t8514*t16841;
  t16849 = t16847 + t16848;
  t16748 = t8514*t16733;
  t16749 = t8340*t16739;
  t16752 = t16748 + t16749;
  t16761 = t8340*t16733;
  t16762 = -1.*t8514*t16739;
  t16763 = t16761 + t16762;
  t16893 = t8514*t16887;
  t16894 = t8340*t16891;
  t16895 = t16893 + t16894;
  t16897 = t8340*t16887;
  t16898 = -1.*t8514*t16891;
  t16899 = t16897 + t16898;
  t16855 = -1.*t4083*t11460;
  t16856 = -1.*t11500*t4277;
  t16857 = t16855 + t16856;
  t16917 = 2.*t14002*t16857;
  t16918 = -0.766044*t16895;
  t16919 = 0.642788*t16899;
  t16920 = t16918 + t16919;
  t16921 = 2.*t16920*t13999;
  t16945 = t16917 + t16921;
  t16771 = -1.*t4083*t10420;
  t16773 = -1.*t9810*t4277;
  t16775 = t16771 + t16773;
  t16661 = -1.*t2662*t837*t4083;
  t16665 = -1.*t12940*t4277;
  t16669 = t16661 + t16665;
  t17066 = -1.*t5642*t12942;
  t17069 = -1.*t12946*t6050;
  t17072 = t17066 + t17069;
  t17081 = t6706*t17072;
  t17082 = t17081 + t13284;
  t17084 = t6621*t17072;
  t17088 = -1.*t6706*t13115;
  t17089 = t17084 + t17088;
  t17091 = -1.*t7399*t17082;
  t17092 = t7207*t17089;
  t17093 = t17091 + t17092;
  t17095 = t7207*t17082;
  t17119 = t7399*t17089;
  t17135 = t17095 + t17119;
  t17146 = t7886*t17093;
  t17147 = t7762*t17135;
  t17148 = t17146 + t17147;
  t17155 = t7762*t17093;
  t17158 = -1.*t7886*t17135;
  t17162 = t17155 + t17158;
  t17012 = 0.049*t5642;
  t17036 = t17012 + t6093;
  t17059 = -0.09*t5642;
  t17060 = -0.049*t6050;
  t17061 = t17059 + t17060;
  t17197 = -1.*t5642*t10679;
  t17203 = -1.*t10719*t6050;
  t17216 = t17197 + t17203;
  t17219 = t6706*t17216;
  t17232 = t17219 + t11064;
  t17246 = t6621*t17216;
  t17247 = -1.*t6706*t10926;
  t17248 = t17246 + t17247;
  t17250 = -1.*t7399*t17232;
  t17254 = t7207*t17248;
  t17255 = t17250 + t17254;
  t17257 = t7207*t17232;
  t17258 = t7399*t17248;
  t17259 = t17257 + t17258;
  t17261 = t7886*t17255;
  t17262 = t7762*t17259;
  t17263 = t17261 + t17262;
  t17265 = t7762*t17255;
  t17266 = -1.*t7886*t17259;
  t17267 = t17265 + t17266;
  t17283 = -1.*t5642*t11502;
  t17284 = -1.*t11888*t6050;
  t17285 = t17283 + t17284;
  t17288 = t6706*t17285;
  t17292 = t17288 + t12326;
  t17294 = t6621*t17285;
  t17295 = -1.*t6706*t12325;
  t17296 = t17294 + t17295;
  t17298 = -1.*t7399*t17292;
  t17299 = t7207*t17296;
  t17300 = t17298 + t17299;
  t17302 = t7207*t17292;
  t17303 = t7399*t17296;
  t17304 = t17302 + t17303;
  t17306 = t7886*t17300;
  t17307 = t7762*t17304;
  t17320 = t17306 + t17307;
  t17334 = t7762*t17300;
  t17335 = -1.*t7886*t17304;
  t17336 = t17334 + t17335;
  t17269 = -1.*t8514*t17263;
  t17273 = t8340*t17267;
  t17274 = t17269 + t17273;
  t17276 = t8340*t17263;
  t17277 = t8514*t17267;
  t17278 = t17276 + t17277;
  t17167 = -1.*t8514*t17148;
  t17168 = t8340*t17162;
  t17169 = t17167 + t17168;
  t17174 = t8340*t17148;
  t17175 = t8514*t17162;
  t17176 = t17174 + t17175;
  t17338 = -1.*t8514*t17320;
  t17342 = t8340*t17336;
  t17343 = t17338 + t17342;
  t17345 = t8340*t17320;
  t17346 = t8514*t17336;
  t17347 = t17345 + t17346;
  t17366 = 0.642788*t17343;
  t17367 = -0.766044*t17347;
  t17368 = t17366 + t17367;
  t17399 = -1.*t6621*t12948;
  t17400 = t17399 + t17088;
  t17402 = -1.*t7399*t13357;
  t17403 = t7207*t17400;
  t17404 = t17402 + t17403;
  t17409 = t7399*t17400;
  t17412 = t13389 + t17409;
  t17416 = t7886*t17404;
  t17420 = t7762*t17412;
  t17421 = t17416 + t17420;
  t17423 = t7762*t17404;
  t17424 = -1.*t7886*t17412;
  t17428 = t17423 + t17424;
  t17391 = -0.21*t6621;
  t17392 = -0.049*t6706;
  t17393 = t17391 + t17392;
  t17395 = 0.049*t6621;
  t17396 = t17395 + t6712;
  t17468 = -1.*t6621*t10809;
  t17469 = t17468 + t17247;
  t17476 = -1.*t7399*t11079;
  t17477 = t7207*t17469;
  t17478 = t17476 + t17477;
  t17480 = t7399*t17469;
  t17484 = t11234 + t17480;
  t17486 = t7886*t17478;
  t17501 = t7762*t17484;
  t17509 = t17486 + t17501;
  t17511 = t7762*t17478;
  t17512 = -1.*t7886*t17484;
  t17513 = t17511 + t17512;
  t17537 = -1.*t6621*t11893;
  t17553 = t17537 + t17295;
  t17564 = -1.*t7399*t12327;
  t17565 = t7207*t17553;
  t17569 = t17564 + t17565;
  t17576 = t7399*t17553;
  t17577 = t12884 + t17576;
  t17579 = t7886*t17569;
  t17580 = t7762*t17577;
  t17581 = t17579 + t17580;
  t17584 = t7762*t17569;
  t17585 = -1.*t7886*t17577;
  t17586 = t17584 + t17585;
  t17515 = -1.*t8514*t17509;
  t17516 = t8340*t17513;
  t17519 = t17515 + t17516;
  t17523 = t8340*t17509;
  t17527 = t8514*t17513;
  t17528 = t17523 + t17527;
  t17430 = -1.*t8514*t17421;
  t17446 = t8340*t17428;
  t17456 = t17430 + t17446;
  t17458 = t8340*t17421;
  t17459 = t8514*t17428;
  t17460 = t17458 + t17459;
  t17588 = -1.*t8514*t17581;
  t17589 = t8340*t17586;
  t17590 = t17588 + t17589;
  t17592 = t8340*t17581;
  t17593 = t8514*t17586;
  t17594 = t17592 + t17593;
  t17624 = 0.642788*t17590;
  t17637 = -0.766044*t17594;
  t17638 = t17624 + t17637;
  t17671 = -1.*t7207*t13373;
  t17672 = t17402 + t17671;
  t17675 = t7886*t17672;
  t17676 = t17675 + t13401;
  t17678 = t7762*t17672;
  t17679 = -1.*t7886*t13400;
  t17683 = t17678 + t17679;
  t17664 = 0.00159*t7207;
  t17665 = t17664 + t7703;
  t17667 = -0.27068*t7207;
  t17668 = -0.00159*t7399;
  t17669 = t17667 + t17668;
  t17696 = -1.*t7207*t11104;
  t17697 = t17476 + t17696;
  t17724 = t7886*t17697;
  t17725 = t17724 + t11324;
  t17727 = t7762*t17697;
  t17728 = -1.*t7886*t11281;
  t17729 = t17727 + t17728;
  t17744 = -1.*t7207*t12708;
  t17745 = t17564 + t17744;
  t17751 = t7886*t17745;
  t17752 = t17751 + t12911;
  t17754 = t7762*t17745;
  t17755 = -1.*t7886*t12910;
  t17756 = t17754 + t17755;
  t17733 = -1.*t8514*t17725;
  t17734 = t8340*t17729;
  t17735 = t17733 + t17734;
  t17737 = t8340*t17725;
  t17738 = t8514*t17729;
  t17739 = t17737 + t17738;
  t17685 = -1.*t8514*t17676;
  t17686 = t8340*t17683;
  t17687 = t17685 + t17686;
  t17689 = t8340*t17676;
  t17690 = t8514*t17683;
  t17691 = t17689 + t17690;
  t17758 = -1.*t8514*t17752;
  t17759 = t8340*t17756;
  t17760 = t17758 + t17759;
  t17762 = t8340*t17752;
  t17763 = t8514*t17756;
  t17764 = t17762 + t17763;
  t17800 = 0.642788*t17760;
  t17801 = -0.766044*t17764;
  t17802 = t17800 + t17801;
  t17857 = -1.*t7762*t13381;
  t17858 = t17857 + t17679;
  t17845 = -0.70544*t7762;
  t17846 = 0.01841*t7886;
  t17847 = t17845 + t17846;
  t17851 = -0.01841*t7762;
  t17852 = t17851 + t7904;
  t17879 = -1.*t7762*t11128;
  t17880 = t17879 + t17728;
  t17896 = -1.*t7762*t12710;
  t17897 = t17896 + t17755;
  t17882 = -1.*t8514*t11333;
  t17883 = t8340*t17880;
  t17887 = t17882 + t17883;
  t17889 = t8514*t17880;
  t17890 = t11392 + t17889;
  t17860 = -1.*t8514*t13402;
  t17864 = t8340*t17858;
  t17865 = t17860 + t17864;
  t17872 = t8514*t17858;
  t17873 = t13562 + t17872;
  t17899 = -1.*t8514*t12912;
  t17900 = t8340*t17897;
  t17901 = t17899 + t17900;
  t17906 = t8514*t17897;
  t17907 = t12921 + t17906;
  t17928 = 0.642788*t17901;
  t17929 = -0.766044*t17907;
  t17930 = t17928 + t17929;
  t17977 = 0.02159*t8340;
  t17978 = t17977 + t8646;
  t17980 = -1.11344*t8340;
  t17981 = -0.02159*t8514;
  t17982 = t17980 + t17981;
  t17992 = -1.*t8340*t11343;
  t17993 = t17882 + t17992;
  t17984 = -1.*t8340*t13409;
  t17985 = t17860 + t17984;
  t17999 = -1.*t8340*t12916;
  t18000 = t17899 + t17999;
  t18017 = 0.642788*t18000;
  t18018 = t18017 + t13919;
  t13964 = -0.766044*t11407;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=1.;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0.135*t1251*t2662*t3126 + t4033*t4624 + t5111*t5213 + 0.1305*t5415 + t5573*t6117 + t6438*t6601 + t6727*t6748 + t6956*t6978 + 0.135*t2324*t741 + t7401*t7506 + t7709*t7753 + t7905*t7952 + t7965*t8086 + t8604*t8643 + t8647*t8927 + 0.0306*t8956 - 1.13106*t8967;
  p_output1[17]=0.1305*t10617 + 0.0306*t11389 - 1.13106*t11407 + t10420*t5213 + t10679*t6117 + t10719*t6601 + t10809*t6727 + t10926*t6956 + t11079*t7401 + t11104*t7709 + t11128*t7905 + t11281*t7965 + t11333*t8604 + t11343*t8647 + 0.135*t741*t8998 + 0.135*t2662*t3126*t956 + t4624*t9810;
  p_output1[18]=t13956*(-0.642788*t11389 + t13964)*t13966 + t12931*t12935*t13855*t13956*(0.642788*t8956 + 0.766044*t8967);
  p_output1[19]=(t10617*t14009*t14188 - 1.*t13989*t14009*t14262 + 0.5*t13989*t13999*t14258*t14270 - 0.5*t14002*t14188*t14258*t14270)*t14291*t14301 + t14236*t14301*(-0.5*t10617*t13999*t14258*t14270 + 0.5*t14002*t14258*t14262*t14270 + t13999*t14009*t5415 - 1.*t14002*t14009*(-0.766044*t8956 + 0.642788*t8967));
  p_output1[20]=0.1305*t14351 + 0.0306*t14450 - 1.13106*t14456 - 0.135*t2662*t3126 + t14338*t4624 + t14358*t6117 + t14370*t6601 + t14376*t6727 + t14389*t6956 + t14393*t7401 + 0.135*t1594*t1676*t741 + t14401*t7709 + t14412*t7905 + t14420*t7965 - 1.*t1594*t5213*t837 + t14431*t8604 + t14438*t8647;
  p_output1[21]=0.1305*t14526 + 0.0306*t14639 - 1.13106*t14643 + t14472*t4624 + t14563*t6117 + t14592*t6601 + t14597*t6727 + t14601*t6956 + t14615*t7401 + t14619*t7709 + t14623*t7905 + t14627*t7965 + t14631*t8604 + t14635*t8647 - 0.135*t1594*t3126*t956 - 0.135*t1676*t2662*t741*t956 + t2662*t5213*t837*t956;
  p_output1[22]=0.1305*t14704 + 0.0306*t15074 - 1.13106*t15090 + 0.135*t1251*t1594*t3126 + t14699*t4624 + t14783*t6117 + t14864*t6601 + t14868*t6727 + t14880*t6956 + t14896*t7401 + 0.135*t1251*t1676*t2662*t741 + t14900*t7709 + t14907*t7905 + t14983*t7965 - 1.*t1251*t2662*t5213*t837 + t15054*t8604 + t15065*t8647;
  p_output1[23]=0.5*t12931*t13855*t13956*(2.*t13743*(0.642788*t14450 + 0.766044*t14456) + 2.*t12935*(0.642788*t14639 + 0.766044*t14643)) + t13956*t13966*(-0.642788*t15074 - 0.766044*t15090);
  p_output1[24]=t14291*t14301*(-1.*t13999*t14009*t14351 + t14002*t14009*(-0.766044*t14450 + 0.642788*t14456) + t14009*t14188*t14704 - 1.*t13989*t14009*t15207 + 0.5*t13989*t13999*t14258*t15224 - 0.5*t14002*t14188*t14258*t15224) + t14236*t14301*(t13999*t14009*t14526 - 1.*t14002*t14009*(-0.766044*t14639 + 0.642788*t14643) - 1.*t14009*t14262*t14704 + t10617*t14009*t15207 - 0.5*t10617*t13999*t14258*t15224 + 0.5*t14002*t14258*t14262*t15224);
  p_output1[25]=0.1305*t15355 + 0.0306*t15440 - 1.13106*t15448 - 1.*t1676*t2662*t5213 + t15359*t6117 + t15368*t6727 + t15379*t6956 + t15387*t7401 + t15398*t7709 + t15405*t7905 + t15417*t7965 - 1.*t2662*t307*t4624*t837 + t2662*t3126*t6601*t837 - 0.135*t2662*t741*t837 + t15423*t8604 + t15436*t8647;
  p_output1[26]=0.1305*t15477 + 0.0306*t15577 - 1.13106*t15581 + t15462*t307*t4624 + t15508*t6117 - 1.*t15462*t3126*t6601 + t15535*t6727 + t15549*t6956 + t15553*t7401 + 0.135*t15462*t741 + t15557*t7709 + t15561*t7905 + t15565*t7965 + t15569*t8604 + t15573*t8647 + t5213*t8998;
  p_output1[27]=0.1305*t15589 + 0.0306*t15805 - 1.13106*t15892 + t307*t4624*t5111 + t11481*t5213 + t15593*t6117 - 1.*t3126*t5111*t6601 + t15647*t6727 + t15651*t6956 + t15685*t7401 + 0.135*t5111*t741 + t15691*t7709 + t15706*t7905 + t15716*t7965 + t15720*t8604 + t15801*t8647;
  p_output1[28]=0.5*t12931*t13855*t13956*(2.*t13743*(0.642788*t15440 + 0.766044*t15448) + 2.*t12935*(0.642788*t15577 + 0.766044*t15581)) + t13956*t13966*(-0.642788*t15805 - 0.766044*t15892);
  p_output1[29]=t14291*t14301*(-1.*t13999*t14009*t15355 + t14002*t14009*(-0.766044*t15440 + 0.642788*t15448) + t14009*t14188*t15589 - 1.*t13989*t14009*t15957 + 0.5*t13989*t13999*t14258*t15959 - 0.5*t14002*t14188*t14258*t15959) + t14236*t14301*(t13999*t14009*t15477 - 1.*t14002*t14009*(-0.766044*t15577 + 0.642788*t15581) - 1.*t14009*t14262*t15589 + t10617*t14009*t15957 - 0.5*t10617*t13999*t14258*t15959 + 0.5*t14002*t14258*t14262*t15959);
  p_output1[30]=0.0306*t16214 - 1.13106*t16225 - 0.135*t1594*t307 - 0.135*t1676*t2662*t3126 + 0.1305*t12946*t4083 + t12946*t4624 + t12946*t4277*t6117 + t16127*t6601 + t16145*t6727 + t16153*t6956 + t16164*t7401 + t16171*t7709 + t16183*t7905 + t16189*t7965 + t16202*t8604 + t16206*t8647;
  p_output1[31]=0.0306*t16313 - 1.13106*t16317 + 0.1305*t10719*t4083 + t10719*t4624 + t10719*t4277*t6117 + t16246*t6601 + t16254*t6727 + t16265*t6956 + t16273*t7401 + t16284*t7709 + t16288*t7905 + t16292*t7965 + t16297*t8604 + t16309*t8647 + 0.135*t3126*t8998 + 0.135*t2662*t307*t956;
  p_output1[32]=0.0306*t16462 - 1.13106*t16471 - 0.135*t1251*t2662*t307 + 0.135*t11481*t3126 + 0.1305*t11888*t4083 + t11888*t4624 + t11888*t4277*t6117 + t16326*t6601 + t16330*t6727 + t16334*t6956 + t16338*t7401 + t16342*t7709 + t16346*t7905 + t16399*t7965 + t16403*t8604 + t16407*t8647;
  p_output1[33]=0.5*t12931*t13855*t13956*(2.*t13743*(0.642788*t16214 + 0.766044*t16225) + 2.*t12935*(0.642788*t16313 + 0.766044*t16317)) + t13956*t13966*(-0.642788*t16462 - 0.766044*t16471);
  p_output1[34]=t14291*t14301*(t14002*t14009*(-0.766044*t16214 + 0.642788*t16225) - 1.*t13989*t14009*t16529 + 0.5*t13989*t13999*t14258*t16557 - 0.5*t14002*t14188*t14258*t16557 - 1.*t12946*t13999*t14009*t4083 + t11888*t14009*t14188*t4083) + t14236*t14301*(-1.*t14002*t14009*(-0.766044*t16313 + 0.642788*t16317) + t10617*t14009*t16529 - 0.5*t10617*t13999*t14258*t16557 + 0.5*t14002*t14258*t14262*t16557 + t10719*t13999*t14009*t4083 - 1.*t11888*t14009*t14262*t4083);
  p_output1[35]=t12940*t16655 + 0.1305*t16669 + 0.0306*t16752 - 1.13106*t16763 + t13989*t6117 + t13989*t5642*t6727 - 1.*t13989*t6050*t6956 + t16681*t7401 + t16685*t7709 + t16709*t7905 + t16726*t7965 + t16649*t2662*t837 + t16733*t8604 + t16739*t8647;
  p_output1[36]=t10420*t16649 + 0.1305*t16775 + 0.0306*t16845 - 1.13106*t16849 + t10617*t6117 + t10617*t5642*t6727 - 1.*t10617*t6050*t6956 + t16792*t7401 + t16803*t7709 + t16807*t7905 + t16815*t7965 + t16828*t8604 + t16841*t8647 + t16655*t9810;
  p_output1[37]=t11460*t16649 + t11500*t16655 + 0.1305*t16857 + 0.0306*t16895 - 1.13106*t16899 + t14002*t6117 + t14002*t5642*t6727 - 1.*t14002*t6050*t6956 + t16863*t7401 + t16868*t7709 + t16872*t7905 + t16883*t7965 + t16887*t8604 + t16891*t8647;
  p_output1[38]=0.5*t12931*t13855*t13956*(2.*t13743*(0.642788*t16752 + 0.766044*t16763) + 2.*t12935*(0.642788*t16845 + 0.766044*t16849)) + t13956*t13966*(-0.642788*t16895 - 0.766044*t16899);
  p_output1[39]=t14291*t14301*(-1.*t13999*t14009*t16669 + t14002*t14009*(-0.766044*t16752 + 0.642788*t16763) + t14009*t14188*t16857 - 1.*t13989*t14009*t16920 + 0.5*t13989*t13999*t14258*t16945 - 0.5*t14002*t14188*t14258*t16945) + t14236*t14301*(t13999*t14009*t16775 - 1.*t14002*t14009*(-0.766044*t16845 + 0.642788*t16849) - 1.*t14009*t14262*t16857 + t10617*t14009*t16920 - 0.5*t10617*t13999*t14258*t16945 + 0.5*t14002*t14258*t14262*t16945);
  p_output1[40]=t12946*t17036 + t12942*t17061 - 1.13106*t17169 + 0.0306*t17176 + t13115*t6727 + t17072*t6956 + t17089*t7401 + t17082*t7709 + t17135*t7905 + t17093*t7965 + t17162*t8604 + t17148*t8647;
  p_output1[41]=t10719*t17036 + t10679*t17061 - 1.13106*t17274 + 0.0306*t17278 + t10926*t6727 + t17216*t6956 + t17248*t7401 + t17232*t7709 + t17259*t7905 + t17255*t7965 + t17267*t8604 + t17263*t8647;
  p_output1[42]=t11888*t17036 + t11502*t17061 - 1.13106*t17343 + 0.0306*t17347 + t12325*t6727 + t17285*t6956 + t17296*t7401 + t17292*t7709 + t17304*t7905 + t17300*t7965 + t17336*t8604 + t17320*t8647;
  p_output1[43]=0.5*t12931*t13855*t13956*(2.*t13743*(0.766044*t17169 + 0.642788*t17176) + 2.*t12935*(0.766044*t17274 + 0.642788*t17278)) + t13956*t13966*(-0.766044*t17343 - 0.642788*t17347);
  p_output1[44]=t14291*t14301*(t14002*t14009*(0.642788*t17169 - 0.766044*t17176) - 1.*t13989*t14009*t17368 + t13989*t14007*t14258*t17368 - 1.*t13999*t14002*t14188*t14258*t17368) + t14236*t14301*(-1.*t14002*t14009*(0.642788*t17274 - 0.766044*t17278) + t10617*t14009*t17368 - 1.*t10617*t14007*t14258*t17368 + t13999*t14002*t14258*t14262*t17368);
  p_output1[45]=t12948*t17393 + t13115*t17396 - 1.13106*t17456 + 0.0306*t17460 + t17400*t7401 + t13357*t7709 + t17412*t7905 + t17404*t7965 + t17428*t8604 + t17421*t8647;
  p_output1[46]=t10809*t17393 + t10926*t17396 - 1.13106*t17519 + 0.0306*t17528 + t17469*t7401 + t11079*t7709 + t17484*t7905 + t17478*t7965 + t17513*t8604 + t17509*t8647;
  p_output1[47]=t11893*t17393 + t12325*t17396 - 1.13106*t17590 + 0.0306*t17594 + t17553*t7401 + t12327*t7709 + t17577*t7905 + t17569*t7965 + t17586*t8604 + t17581*t8647;
  p_output1[48]=0.5*t12931*t13855*t13956*(2.*t13743*(0.766044*t17456 + 0.642788*t17460) + 2.*t12935*(0.766044*t17519 + 0.642788*t17528)) + t13956*t13966*(-0.766044*t17590 - 0.642788*t17594);
  p_output1[49]=t14291*t14301*(t14002*t14009*(0.642788*t17456 - 0.766044*t17460) - 1.*t13989*t14009*t17638 + t13989*t14007*t14258*t17638 - 1.*t13999*t14002*t14188*t14258*t17638) + t14236*t14301*(-1.*t14002*t14009*(0.642788*t17519 - 0.766044*t17528) + t10617*t14009*t17638 - 1.*t10617*t14007*t14258*t17638 + t13999*t14002*t14258*t14262*t17638);
  p_output1[50]=t13357*t17665 + t13373*t17669 - 1.13106*t17687 + 0.0306*t17691 + t13400*t7905 + t17672*t7965 + t17683*t8604 + t17676*t8647;
  p_output1[51]=t11079*t17665 + t11104*t17669 - 1.13106*t17735 + 0.0306*t17739 + t11281*t7905 + t17697*t7965 + t17729*t8604 + t17725*t8647;
  p_output1[52]=t12327*t17665 + t12708*t17669 - 1.13106*t17760 + 0.0306*t17764 + t12910*t7905 + t17745*t7965 + t17756*t8604 + t17752*t8647;
  p_output1[53]=0.5*t12931*t13855*t13956*(2.*t13743*(0.766044*t17687 + 0.642788*t17691) + 2.*t12935*(0.766044*t17735 + 0.642788*t17739)) + t13956*t13966*(-0.766044*t17760 - 0.642788*t17764);
  p_output1[54]=t14291*t14301*(t14002*t14009*(0.642788*t17687 - 0.766044*t17691) - 1.*t13989*t14009*t17802 + t13989*t14007*t14258*t17802 - 1.*t13999*t14002*t14188*t14258*t17802) + t14236*t14301*(-1.*t14002*t14009*(0.642788*t17735 - 0.766044*t17739) + t10617*t14009*t17802 - 1.*t10617*t14007*t14258*t17802 + t13999*t14002*t14258*t14262*t17802);
  p_output1[55]=t13381*t17847 + t13400*t17852 - 1.13106*t17865 + 0.0306*t17873 + t17858*t8604 + t13402*t8647;
  p_output1[56]=t11128*t17847 + t11281*t17852 - 1.13106*t17887 + 0.0306*t17890 + t17880*t8604 + t11333*t8647;
  p_output1[57]=t12710*t17847 + t12910*t17852 - 1.13106*t17901 + 0.0306*t17907 + t17897*t8604 + t12912*t8647;
  p_output1[58]=0.5*t12931*t13855*t13956*(2.*t13743*(0.766044*t17865 + 0.642788*t17873) + 2.*t12935*(0.766044*t17887 + 0.642788*t17890)) + t13956*t13966*(-0.766044*t17901 - 0.642788*t17907);
  p_output1[59]=t14291*t14301*(t14002*t14009*(0.642788*t17865 - 0.766044*t17873) - 1.*t13989*t14009*t17930 + t13989*t14007*t14258*t17930 - 1.*t13999*t14002*t14188*t14258*t17930) + t14236*t14301*(-1.*t14002*t14009*(0.642788*t17887 - 0.766044*t17890) + t10617*t14009*t17930 - 1.*t10617*t14007*t14258*t17930 + t13999*t14002*t14258*t14262*t17930);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0.0306*t13605 + t13402*t17978 + t13409*t17982 - 1.13106*t17985;
  p_output1[66]=0.0306*t11407 + t11333*t17978 + t11343*t17982 - 1.13106*t17993;
  p_output1[67]=0.0306*t12929 + t12912*t17978 + t12916*t17982 - 1.13106*t18000;
  p_output1[68]=0.5*t12931*t13855*t13956*(2.*t13743*(t14155 + 0.766044*t17985) + 2.*t12935*(t14261 + 0.766044*t17993)) + t13956*t13966*(-0.642788*t12929 - 0.766044*t18000);
  p_output1[69]=t14291*t14301*(t14002*t14009*(-0.766044*t13605 + 0.642788*t17985) - 1.*t13989*t14009*t18018 + t13989*t14007*t14258*t18018 - 1.*t13999*t14002*t14188*t14258*t18018) + t14236*t14301*(-1.*t14002*t14009*(t13964 + 0.642788*t17993) + t10617*t14009*t18018 - 1.*t10617*t14007*t14258*t18018 + t13999*t14002*t14258*t14262*t18018);
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 5, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftSole_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




