/*
 * Automatically Generated from Mathematica.
 * Mon 13 Sep 2021 16:09:00 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightFoot.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t199;
  double t1769;
  double t1997;
  double t3218;
  double t3860;
  double t3998;
  double t4061;
  double t4107;
  double t4182;
  double t4302;
  double t4307;
  double t4309;
  double t4348;
  double t4259;
  double t4271;
  double t4293;
  double t4691;
  double t4450;
  double t4468;
  double t4476;
  double t4731;
  double t4745;
  double t4752;
  double t4845;
  double t4877;
  double t4886;
  double t4969;
  double t5047;
  double t5074;
  double t5079;
  double t5135;
  double t5147;
  double t5152;
  double t5157;
  double t5158;
  double t5160;
  double t5162;
  double t5174;
  double t5177;
  double t5178;
  double t5187;
  double t5188;
  double t5197;
  double t5209;
  double t5213;
  double t5224;
  double t5231;
  double t5252;
  double t5259;
  double t5263;
  double t5288;
  double t5290;
  double t5291;
  double t5300;
  double t5301;
  double t5304;
  double t5309;
  double t5362;
  double t5371;
  double t5379;
  double t5414;
  double t5416;
  double t5418;
  double t3570;
  double t3714;
  double t4317;
  double t4393;
  double t4440;
  double t4163;
  double t4203;
  double t4221;
  double t4502;
  double t4578;
  double t4650;
  double t4713;
  double t4716;
  double t4720;
  double t5541;
  double t5542;
  double t5544;
  double t4926;
  double t5004;
  double t5027;
  double t5529;
  double t5530;
  double t5538;
  double t5548;
  double t5549;
  double t5550;
  double t5113;
  double t5123;
  double t5131;
  double t5161;
  double t5164;
  double t5165;
  double t5597;
  double t5611;
  double t5627;
  double t5669;
  double t5673;
  double t5675;
  double t5180;
  double t5181;
  double t5185;
  double t5230;
  double t5234;
  double t5240;
  double t5678;
  double t5690;
  double t5695;
  double t5698;
  double t5699;
  double t5701;
  double t5274;
  double t5276;
  double t5277;
  double t5307;
  double t5327;
  double t5345;
  double t5704;
  double t5728;
  double t5731;
  double t5754;
  double t5764;
  double t5777;
  double t5400;
  double t5403;
  double t5412;
  double t5791;
  double t5799;
  double t5814;
  double t5826;
  double t5832;
  double t5836;
  double t5552;
  double t5567;
  double t5570;
  double t5853;
  double t5867;
  double t5872;
  double t5947;
  double t5950;
  double t6010;
  double t6039;
  double t6049;
  double t6072;
  double t5892;
  double t6080;
  double t6083;
  double t6095;
  double t6115;
  double t6118;
  double t6087;
  double t6119;
  double t6131;
  double t6145;
  double t6146;
  double t6154;
  double t6134;
  double t6159;
  double t6167;
  double t6182;
  double t6183;
  double t6189;
  double t6179;
  double t6192;
  double t6197;
  double t6208;
  double t6215;
  double t6230;
  double t6200;
  double t6249;
  double t6250;
  double t6283;
  double t6332;
  double t6342;
  double t6349;
  double t6371;
  double t6392;
  double t4820;
  double t5838;
  double t5840;
  double t5841;
  double t5844;
  double t5845;
  double t5846;
  double t6393;
  double t6399;
  double t6401;
  double t6402;
  double t6403;
  double t6410;
  double t6412;
  double t5424;
  double t5426;
  double t5430;
  double t5473;
  double t5483;
  double t5495;
  double t6600;
  double t6614;
  double t6615;
  double t6588;
  double t6616;
  double t6627;
  double t6717;
  double t6736;
  double t6776;
  double t6680;
  double t6787;
  double t6790;
  double t6797;
  double t6798;
  double t6802;
  double t6794;
  double t6805;
  double t6808;
  double t6818;
  double t6822;
  double t6823;
  double t6812;
  double t6828;
  double t6831;
  double t6845;
  double t6848;
  double t6849;
  double t6565;
  double t6570;
  double t6580;
  double t6835;
  double t6853;
  double t6854;
  double t6855;
  double t6859;
  double t6860;
  double t6861;
  double t6862;
  double t6867;
  double t6887;
  double t6899;
  double t6902;
  double t6953;
  double t6969;
  double t6976;
  double t6979;
  double t6980;
  double t6981;
  double t6425;
  double t6438;
  double t6439;
  double t7032;
  double t7054;
  double t7057;
  double t7058;
  double t7044;
  double t7047;
  double t7051;
  double t7060;
  double t7061;
  double t7063;
  double t7067;
  double t7035;
  double t7038;
  double t7041;
  double t4815;
  double t4824;
  double t7085;
  double t7088;
  double t7091;
  double t7092;
  double t7100;
  double t7101;
  double t7108;
  double t7204;
  double t7206;
  double t7207;
  double t7232;
  double t7244;
  double t7245;
  double t7253;
  double t7254;
  double t7257;
  double t7261;
  double t7262;
  double t7264;
  double t7266;
  double t7267;
  double t7271;
  double t7274;
  double t7275;
  double t7277;
  double t7279;
  double t7280;
  double t7281;
  double t7283;
  double t7284;
  double t7285;
  double t7287;
  double t7288;
  double t7289;
  double t7328;
  double t7330;
  double t7331;
  double t7338;
  double t7342;
  double t7344;
  double t7352;
  double t7354;
  double t7356;
  double t7360;
  double t7363;
  double t7364;
  double t7370;
  double t7375;
  double t7376;
  double t7378;
  double t7383;
  double t7387;
  double t7390;
  double t7392;
  double t7396;
  double t7399;
  double t7401;
  double t7405;
  double t7410;
  double t7414;
  double t7415;
  double t7456;
  double t7458;
  double t7459;
  double t7463;
  double t7465;
  double t7467;
  double t7470;
  double t7471;
  double t7478;
  double t7482;
  double t7484;
  double t7486;
  double t7490;
  double t7491;
  double t7495;
  double t7497;
  double t7500;
  double t7503;
  double t7506;
  double t7508;
  double t7510;
  double t7512;
  double t7515;
  double t7516;
  double t7519;
  double t7522;
  double t7523;
  double t7451;
  double t7452;
  double t7454;
  double t6416;
  double t6417;
  double t7525;
  double t7531;
  double t7536;
  double t7545;
  double t7549;
  double t7550;
  double t7003;
  double t6471;
  double t6491;
  double t6523;
  double t6937;
  double t7291;
  double t7292;
  double t7293;
  double t7297;
  double t7298;
  double t7299;
  double t7423;
  double t7425;
  double t7429;
  double t7431;
  double t7433;
  double t7439;
  double t7211;
  double t7215;
  double t7226;
  double t7570;
  double t7571;
  double t7572;
  double t7609;
  double t7610;
  double t7611;
  double t7125;
  double t7128;
  double t7131;
  double t7314;
  double t7318;
  double t7321;
  double t7660;
  double t7665;
  double t7666;
  double t7676;
  double t7677;
  double t7680;
  double t7688;
  double t7689;
  double t7691;
  double t7702;
  double t7703;
  double t7705;
  double t7710;
  double t7711;
  double t7718;
  double t7720;
  double t7728;
  double t7730;
  double t7733;
  double t7736;
  double t7739;
  double t7745;
  double t7746;
  double t7749;
  double t7769;
  double t7770;
  double t7771;
  double t7773;
  double t7774;
  double t7775;
  double t7777;
  double t7778;
  double t7780;
  double t7782;
  double t7783;
  double t7787;
  double t7797;
  double t7798;
  double t7803;
  double t7816;
  double t7820;
  double t7821;
  double t7828;
  double t7829;
  double t7830;
  double t7834;
  double t7836;
  double t7837;
  double t7841;
  double t7842;
  double t7843;
  double t7877;
  double t7878;
  double t7880;
  double t7882;
  double t7884;
  double t7886;
  double t7890;
  double t7892;
  double t7897;
  double t7904;
  double t7906;
  double t7910;
  double t7912;
  double t7913;
  double t7916;
  double t7918;
  double t7919;
  double t7920;
  double t7924;
  double t7925;
  double t7926;
  double t7930;
  double t7931;
  double t7932;
  double t7934;
  double t7937;
  double t7938;
  double t7940;
  double t7941;
  double t7942;
  double t7751;
  double t7752;
  double t7753;
  double t7757;
  double t7758;
  double t7759;
  double t7849;
  double t7850;
  double t7851;
  double t7855;
  double t7856;
  double t7857;
  double t7945;
  double t7946;
  double t7947;
  double t8007;
  double t8008;
  double t8009;
  double t8091;
  double t8092;
  double t8093;
  double t8096;
  double t8097;
  double t8100;
  double t8102;
  double t8105;
  double t8108;
  double t8112;
  double t8113;
  double t8121;
  double t8124;
  double t8125;
  double t8126;
  double t8130;
  double t8132;
  double t8133;
  double t8081;
  double t8082;
  double t8077;
  double t8078;
  double t8079;
  double t8198;
  double t8200;
  double t8201;
  double t8203;
  double t8204;
  double t8205;
  double t8207;
  double t8208;
  double t8209;
  double t8212;
  double t8214;
  double t8216;
  double t8220;
  double t8221;
  double t8224;
  double t8226;
  double t8228;
  double t8229;
  double t8280;
  double t8281;
  double t8286;
  double t8296;
  double t8298;
  double t8300;
  double t8305;
  double t8308;
  double t8310;
  double t8318;
  double t8320;
  double t8321;
  double t8327;
  double t8330;
  double t8332;
  double t8339;
  double t8340;
  double t8342;
  double t8350;
  double t8358;
  double t8359;
  double t8362;
  double t8364;
  double t8372;
  double t8267;
  double t8268;
  double t8138;
  double t8144;
  double t8148;
  double t8151;
  double t8158;
  double t8164;
  double t8234;
  double t8238;
  double t8239;
  double t8247;
  double t8248;
  double t8250;
  double t8380;
  double t8383;
  double t8384;
  double t8409;
  double t8410;
  double t8411;
  double t8181;
  double t8183;
  double t8185;
  double t8087;
  double t8088;
  double t8089;
  double t8506;
  double t8510;
  double t8511;
  double t8521;
  double t8523;
  double t8527;
  double t8528;
  double t8529;
  double t8531;
  double t8532;
  double t8533;
  double t8535;
  double t8536;
  double t8537;
  double t8539;
  double t8540;
  double t8541;
  double t8545;
  double t8546;
  double t8547;
  double t8473;
  double t8485;
  double t8489;
  double t8497;
  double t8502;
  double t8568;
  double t8570;
  double t8572;
  double t8578;
  double t8582;
  double t8588;
  double t8589;
  double t8601;
  double t8613;
  double t8617;
  double t8618;
  double t8623;
  double t8625;
  double t8629;
  double t8635;
  double t8637;
  double t8638;
  double t8641;
  double t8642;
  double t8648;
  double t8676;
  double t8682;
  double t8683;
  double t8688;
  double t8689;
  double t8695;
  double t8696;
  double t8697;
  double t8703;
  double t8704;
  double t8711;
  double t8713;
  double t8714;
  double t8717;
  double t8720;
  double t8723;
  double t8724;
  double t8726;
  double t8727;
  double t8728;
  double t8730;
  double t8731;
  double t8733;
  double t8738;
  double t8741;
  double t8742;
  double t8552;
  double t8553;
  double t8554;
  double t8557;
  double t8560;
  double t8561;
  double t8652;
  double t8657;
  double t8659;
  double t8661;
  double t8663;
  double t8664;
  double t8746;
  double t8747;
  double t8749;
  double t8854;
  double t8855;
  double t8858;
  double t8859;
  double t8860;
  double t8862;
  double t8865;
  double t8868;
  double t8874;
  double t8879;
  double t8884;
  double t8885;
  double t8886;
  double t8838;
  double t8842;
  double t8843;
  double t8847;
  double t8848;
  double t8919;
  double t8920;
  double t8930;
  double t8937;
  double t8939;
  double t8943;
  double t8944;
  double t8957;
  double t8958;
  double t8959;
  double t8965;
  double t8966;
  double t8969;
  double t8993;
  double t8994;
  double t8997;
  double t8998;
  double t9000;
  double t9002;
  double t9004;
  double t9008;
  double t9009;
  double t9010;
  double t9015;
  double t9016;
  double t9017;
  double t9021;
  double t9022;
  double t9023;
  double t9027;
  double t9028;
  double t9029;
  double t8889;
  double t8890;
  double t8891;
  double t8900;
  double t8903;
  double t8907;
  double t8971;
  double t8972;
  double t8976;
  double t8979;
  double t8981;
  double t8985;
  double t9033;
  double t9037;
  double t9039;
  double t9142;
  double t9149;
  double t9155;
  double t9156;
  double t9158;
  double t9160;
  double t9161;
  double t9124;
  double t9125;
  double t9130;
  double t9131;
  double t9139;
  double t9194;
  double t9195;
  double t9205;
  double t9207;
  double t9209;
  double t9214;
  double t9216;
  double t9254;
  double t9257;
  double t9264;
  double t9265;
  double t9268;
  double t9270;
  double t9273;
  double t9275;
  double t9276;
  double t9277;
  double t9279;
  double t9280;
  double t9281;
  double t9163;
  double t9166;
  double t9167;
  double t9170;
  double t9173;
  double t9178;
  double t9219;
  double t9223;
  double t9226;
  double t9231;
  double t9232;
  double t9235;
  double t9284;
  double t9285;
  double t9286;
  double t9385;
  double t9387;
  double t9360;
  double t9361;
  double t9370;
  double t9374;
  double t9377;
  double t9411;
  double t9412;
  double t9439;
  double t9440;
  double t9443;
  double t9444;
  double t9446;
  double t9451;
  double t9452;
  double t9391;
  double t9392;
  double t9393;
  double t9401;
  double t9402;
  double t9415;
  double t9417;
  double t9419;
  double t9421;
  double t9422;
  double t9457;
  double t9458;
  double t9461;
  double t9522;
  double t9525;
  double t9539;
  double t9540;
  double t9541;
  double t9593;
  double t9594;
  double t9544;
  double t9548;
  double t9565;
  double t9574;
  double t9610;
  double t9615;
  double t6996;
  t199 = Cos(var1[3]);
  t1769 = Cos(var1[4]);
  t1997 = Sin(var1[14]);
  t3218 = Cos(var1[14]);
  t3860 = Sin(var1[3]);
  t3998 = Cos(var1[15]);
  t4061 = -1.*t3998;
  t4107 = 1. + t4061;
  t4182 = Sin(var1[15]);
  t4302 = Cos(var1[16]);
  t4307 = -1.*t4302;
  t4309 = 1. + t4307;
  t4348 = Sin(var1[16]);
  t4259 = -1.*t199*t1769*t1997;
  t4271 = -1.*t3218*t3860;
  t4293 = t4259 + t4271;
  t4691 = Sin(var1[4]);
  t4450 = -1.*t3218*t199*t1769;
  t4468 = t1997*t3860;
  t4476 = t4450 + t4468;
  t4731 = t4182*t4293;
  t4745 = t3998*t199*t4691;
  t4752 = t4731 + t4745;
  t4845 = Cos(var1[17]);
  t4877 = -1.*t4845;
  t4886 = 1. + t4877;
  t4969 = Sin(var1[17]);
  t5047 = t4348*t4476;
  t5074 = t4302*t4752;
  t5079 = t5047 + t5074;
  t5135 = t4302*t4476;
  t5147 = -1.*t4348*t4752;
  t5152 = t5135 + t5147;
  t5157 = Cos(var1[18]);
  t5158 = -1.*t5157;
  t5160 = 1. + t5158;
  t5162 = Sin(var1[18]);
  t5174 = -1.*t4969*t5079;
  t5177 = t4845*t5152;
  t5178 = t5174 + t5177;
  t5187 = t4845*t5079;
  t5188 = t4969*t5152;
  t5197 = t5187 + t5188;
  t5209 = Cos(var1[19]);
  t5213 = -1.*t5209;
  t5224 = 1. + t5213;
  t5231 = Sin(var1[19]);
  t5252 = t5162*t5178;
  t5259 = t5157*t5197;
  t5263 = t5252 + t5259;
  t5288 = t5157*t5178;
  t5290 = -1.*t5162*t5197;
  t5291 = t5288 + t5290;
  t5300 = Cos(var1[21]);
  t5301 = -1.*t5300;
  t5304 = 1. + t5301;
  t5309 = Sin(var1[21]);
  t5362 = -1.*t5231*t5263;
  t5371 = t5209*t5291;
  t5379 = t5362 + t5371;
  t5414 = t5209*t5263;
  t5416 = t5231*t5291;
  t5418 = t5414 + t5416;
  t3570 = -1.*t3218;
  t3714 = 1. + t3570;
  t4317 = -0.09*t4309;
  t4393 = 0.049*t4348;
  t4440 = t4317 + t4393;
  t4163 = -0.135*t4107;
  t4203 = 0.049*t4182;
  t4221 = t4163 + t4203;
  t4502 = -0.049*t4107;
  t4578 = -0.135*t4182;
  t4650 = t4502 + t4578;
  t4713 = -0.049*t4309;
  t4716 = -0.09*t4348;
  t4720 = t4713 + t4716;
  t5541 = t3218*t199;
  t5542 = -1.*t1769*t1997*t3860;
  t5544 = t5541 + t5542;
  t4926 = -0.049*t4886;
  t5004 = -0.21*t4969;
  t5027 = t4926 + t5004;
  t5529 = -1.*t199*t1997;
  t5530 = -1.*t3218*t1769*t3860;
  t5538 = t5529 + t5530;
  t5548 = t4182*t5544;
  t5549 = t3998*t3860*t4691;
  t5550 = t5548 + t5549;
  t5113 = -0.21*t4886;
  t5123 = 0.049*t4969;
  t5131 = t5113 + t5123;
  t5161 = -0.27068*t5160;
  t5164 = 0.00159*t5162;
  t5165 = t5161 + t5164;
  t5597 = t4348*t5538;
  t5611 = t4302*t5550;
  t5627 = t5597 + t5611;
  t5669 = t4302*t5538;
  t5673 = -1.*t4348*t5550;
  t5675 = t5669 + t5673;
  t5180 = -0.00159*t5160;
  t5181 = -0.27068*t5162;
  t5185 = t5180 + t5181;
  t5230 = 0.01841*t5224;
  t5234 = -0.70544*t5231;
  t5240 = t5230 + t5234;
  t5678 = -1.*t4969*t5627;
  t5690 = t4845*t5675;
  t5695 = t5678 + t5690;
  t5698 = t4845*t5627;
  t5699 = t4969*t5675;
  t5701 = t5698 + t5699;
  t5274 = -0.70544*t5224;
  t5276 = -0.01841*t5231;
  t5277 = t5274 + t5276;
  t5307 = -1.11344*t5304;
  t5327 = 0.02159*t5309;
  t5345 = t5307 + t5327;
  t5704 = t5162*t5695;
  t5728 = t5157*t5701;
  t5731 = t5704 + t5728;
  t5754 = t5157*t5695;
  t5764 = -1.*t5162*t5701;
  t5777 = t5754 + t5764;
  t5400 = -0.02159*t5304;
  t5403 = -1.11344*t5309;
  t5412 = t5400 + t5403;
  t5791 = -1.*t5231*t5731;
  t5799 = t5209*t5777;
  t5814 = t5791 + t5799;
  t5826 = t5209*t5731;
  t5832 = t5231*t5777;
  t5836 = t5826 + t5832;
  t5552 = t3998*t5544;
  t5567 = -1.*t4182*t3860*t4691;
  t5570 = t5552 + t5567;
  t5853 = t3218*t199*t1769;
  t5867 = -1.*t1997*t3860;
  t5872 = t5853 + t5867;
  t5947 = t199*t1769*t1997;
  t5950 = t3218*t3860;
  t6010 = t5947 + t5950;
  t6039 = t4182*t6010;
  t6049 = -1.*t3998*t199*t4691;
  t6072 = t6039 + t6049;
  t5892 = t4348*t5872;
  t6080 = t4302*t6072;
  t6083 = t5892 + t6080;
  t6095 = t4302*t5872;
  t6115 = -1.*t4348*t6072;
  t6118 = t6095 + t6115;
  t6087 = -1.*t4969*t6083;
  t6119 = t4845*t6118;
  t6131 = t6087 + t6119;
  t6145 = t4845*t6083;
  t6146 = t4969*t6118;
  t6154 = t6145 + t6146;
  t6134 = t5162*t6131;
  t6159 = t5157*t6154;
  t6167 = t6134 + t6159;
  t6182 = t5157*t6131;
  t6183 = -1.*t5162*t6154;
  t6189 = t6182 + t6183;
  t6179 = -1.*t5231*t6167;
  t6192 = t5209*t6189;
  t6197 = t6179 + t6192;
  t6208 = t5209*t6167;
  t6215 = t5231*t6189;
  t6230 = t6208 + t6215;
  t6200 = t5309*t6197;
  t6249 = t5300*t6230;
  t6250 = t6200 + t6249;
  t6283 = -0.766044*t6250;
  t6332 = t5300*t6197;
  t6342 = -1.*t5309*t6230;
  t6349 = t6332 + t6342;
  t6371 = 0.642788*t6349;
  t6392 = t6283 + t6371;
  t4820 = -1.*t199*t4182*t4691;
  t5838 = t5309*t5814;
  t5840 = t5300*t5836;
  t5841 = t5838 + t5840;
  t5844 = t5300*t5814;
  t5845 = -1.*t5309*t5836;
  t5846 = t5844 + t5845;
  t6393 = t3998*t6010;
  t6399 = t199*t4182*t4691;
  t6401 = t6393 + t6399;
  t6402 = Power(t6401,2);
  t6403 = Power(t6392,2);
  t6410 = t6402 + t6403;
  t6412 = 1/t6410;
  t5424 = t5309*t5379;
  t5426 = t5300*t5418;
  t5430 = t5424 + t5426;
  t5473 = t5300*t5379;
  t5483 = -1.*t5309*t5418;
  t5495 = t5473 + t5483;
  t6600 = t3998*t1769;
  t6614 = t1997*t4182*t4691;
  t6615 = t6600 + t6614;
  t6588 = t3218*t4348*t4691;
  t6616 = t4302*t6615;
  t6627 = t6588 + t6616;
  t6717 = t3218*t4302*t4691;
  t6736 = -1.*t4348*t6615;
  t6776 = t6717 + t6736;
  t6680 = -1.*t4969*t6627;
  t6787 = t4845*t6776;
  t6790 = t6680 + t6787;
  t6797 = t4845*t6627;
  t6798 = t4969*t6776;
  t6802 = t6797 + t6798;
  t6794 = t5162*t6790;
  t6805 = t5157*t6802;
  t6808 = t6794 + t6805;
  t6818 = t5157*t6790;
  t6822 = -1.*t5162*t6802;
  t6823 = t6818 + t6822;
  t6812 = -1.*t5231*t6808;
  t6828 = t5209*t6823;
  t6831 = t6812 + t6828;
  t6845 = t5209*t6808;
  t6848 = t5231*t6823;
  t6849 = t6845 + t6848;
  t6565 = 0.642788*t5841;
  t6570 = 0.766044*t5846;
  t6580 = t6565 + t6570;
  t6835 = t5309*t6831;
  t6853 = t5300*t6849;
  t6854 = t6835 + t6853;
  t6855 = 0.642788*t6854;
  t6859 = t5300*t6831;
  t6860 = -1.*t5309*t6849;
  t6861 = t6859 + t6860;
  t6862 = 0.766044*t6861;
  t6867 = t6855 + t6862;
  t6887 = Power(t6867,2);
  t6899 = Power(t6580,2);
  t6902 = t6887 + t6899;
  t6953 = -0.642788*t6250;
  t6969 = -0.766044*t6349;
  t6976 = t6953 + t6969;
  t6979 = Power(t6976,2);
  t6980 = t6979 + t6887 + t6899;
  t6981 = 1/t6980;
  t6425 = -0.766044*t5841;
  t6438 = 0.642788*t5846;
  t6439 = t6425 + t6438;
  t7032 = 1/Sqrt(t6410);
  t7054 = -1.*t1769*t4182;
  t7057 = t3998*t1997*t4691;
  t7058 = t7054 + t7057;
  t7044 = -0.766044*t6854;
  t7047 = 0.642788*t6861;
  t7051 = t7044 + t7047;
  t7060 = Power(t6410,-1.5);
  t7061 = 2.*t6401*t5570;
  t7063 = 2.*t6392*t6439;
  t7067 = t7061 + t7063;
  t7035 = t5570*t6392*t7032;
  t7038 = -1.*t6401*t6439*t7032;
  t7041 = t7035 + t7038;
  t4815 = t3998*t4293;
  t4824 = t4815 + t4820;
  t7085 = -1.*t7058*t6392*t7032;
  t7088 = t6401*t7051*t7032;
  t7091 = t7085 + t7088;
  t7092 = Power(t7091,2);
  t7100 = Power(t7041,2);
  t7101 = t7092 + t7100;
  t7108 = 1/t7101;
  t7204 = t1769*t1997*t4182;
  t7206 = -1.*t3998*t4691;
  t7207 = t7204 + t7206;
  t7232 = t3218*t1769*t4348;
  t7244 = t4302*t7207;
  t7245 = t7232 + t7244;
  t7253 = t3218*t4302*t1769;
  t7254 = -1.*t4348*t7207;
  t7257 = t7253 + t7254;
  t7261 = -1.*t4969*t7245;
  t7262 = t4845*t7257;
  t7264 = t7261 + t7262;
  t7266 = t4845*t7245;
  t7267 = t4969*t7257;
  t7271 = t7266 + t7267;
  t7274 = t5162*t7264;
  t7275 = t5157*t7271;
  t7277 = t7274 + t7275;
  t7279 = t5157*t7264;
  t7280 = -1.*t5162*t7271;
  t7281 = t7279 + t7280;
  t7283 = -1.*t5231*t7277;
  t7284 = t5209*t7281;
  t7285 = t7283 + t7284;
  t7287 = t5209*t7277;
  t7288 = t5231*t7281;
  t7289 = t7287 + t7288;
  t7328 = t3998*t1769*t3860;
  t7330 = t1997*t4182*t3860*t4691;
  t7331 = t7328 + t7330;
  t7338 = t3218*t4348*t3860*t4691;
  t7342 = t4302*t7331;
  t7344 = t7338 + t7342;
  t7352 = t3218*t4302*t3860*t4691;
  t7354 = -1.*t4348*t7331;
  t7356 = t7352 + t7354;
  t7360 = -1.*t4969*t7344;
  t7363 = t4845*t7356;
  t7364 = t7360 + t7363;
  t7370 = t4845*t7344;
  t7375 = t4969*t7356;
  t7376 = t7370 + t7375;
  t7378 = t5162*t7364;
  t7383 = t5157*t7376;
  t7387 = t7378 + t7383;
  t7390 = t5157*t7364;
  t7392 = -1.*t5162*t7376;
  t7396 = t7390 + t7392;
  t7399 = -1.*t5231*t7387;
  t7401 = t5209*t7396;
  t7405 = t7399 + t7401;
  t7410 = t5209*t7387;
  t7414 = t5231*t7396;
  t7415 = t7410 + t7414;
  t7456 = -1.*t3998*t199*t1769;
  t7458 = -1.*t199*t1997*t4182*t4691;
  t7459 = t7456 + t7458;
  t7463 = -1.*t3218*t199*t4348*t4691;
  t7465 = t4302*t7459;
  t7467 = t7463 + t7465;
  t7470 = -1.*t3218*t4302*t199*t4691;
  t7471 = -1.*t4348*t7459;
  t7478 = t7470 + t7471;
  t7482 = -1.*t4969*t7467;
  t7484 = t4845*t7478;
  t7486 = t7482 + t7484;
  t7490 = t4845*t7467;
  t7491 = t4969*t7478;
  t7495 = t7490 + t7491;
  t7497 = t5162*t7486;
  t7500 = t5157*t7495;
  t7503 = t7497 + t7500;
  t7506 = t5157*t7486;
  t7508 = -1.*t5162*t7495;
  t7510 = t7506 + t7508;
  t7512 = -1.*t5231*t7503;
  t7515 = t5209*t7510;
  t7516 = t7512 + t7515;
  t7519 = t5209*t7503;
  t7522 = t5231*t7510;
  t7523 = t7519 + t7522;
  t7451 = t199*t1769*t4182;
  t7452 = -1.*t3998*t199*t1997*t4691;
  t7454 = t7451 + t7452;
  t6416 = -1.*t3998*t6010;
  t6417 = t6416 + t4820;
  t7525 = t5309*t7516;
  t7531 = t5300*t7523;
  t7536 = t7525 + t7531;
  t7545 = t5300*t7516;
  t7549 = -1.*t5309*t7523;
  t7550 = t7545 + t7549;
  t7003 = Sqrt(t6902);
  t6471 = 0.642788*t6250;
  t6491 = 0.766044*t6349;
  t6523 = t6471 + t6491;
  t6937 = 1/Sqrt(t6902);
  t7291 = t5309*t7285;
  t7292 = t5300*t7289;
  t7293 = t7291 + t7292;
  t7297 = t5300*t7285;
  t7298 = -1.*t5309*t7289;
  t7299 = t7297 + t7298;
  t7423 = t5309*t7405;
  t7425 = t5300*t7415;
  t7429 = t7423 + t7425;
  t7431 = t5300*t7405;
  t7433 = -1.*t5309*t7415;
  t7439 = t7431 + t7433;
  t7211 = t3998*t1769*t1997;
  t7215 = t4182*t4691;
  t7226 = t7211 + t7215;
  t7570 = -0.766044*t7536;
  t7571 = 0.642788*t7550;
  t7572 = t7570 + t7571;
  t7609 = 2.*t7454*t6401;
  t7610 = 2.*t6392*t7572;
  t7611 = t7609 + t7610;
  t7125 = t7058*t6392*t7032;
  t7128 = -1.*t6401*t7051*t7032;
  t7131 = t7125 + t7128;
  t7314 = -1.*t1769*t4182*t3860;
  t7318 = t3998*t1997*t3860*t4691;
  t7321 = t7314 + t7318;
  t7660 = t3218*t4302*t4182*t4691;
  t7665 = -1.*t1997*t4348*t4691;
  t7666 = t7660 + t7665;
  t7676 = -1.*t4302*t1997*t4691;
  t7677 = -1.*t3218*t4182*t4348*t4691;
  t7680 = t7676 + t7677;
  t7688 = -1.*t4969*t7666;
  t7689 = t4845*t7680;
  t7691 = t7688 + t7689;
  t7702 = t4845*t7666;
  t7703 = t4969*t7680;
  t7705 = t7702 + t7703;
  t7710 = t5162*t7691;
  t7711 = t5157*t7705;
  t7718 = t7710 + t7711;
  t7720 = t5157*t7691;
  t7728 = -1.*t5162*t7705;
  t7730 = t7720 + t7728;
  t7733 = -1.*t5231*t7718;
  t7736 = t5209*t7730;
  t7739 = t7733 + t7736;
  t7745 = t5209*t7718;
  t7746 = t5231*t7730;
  t7749 = t7745 + t7746;
  t7769 = -1.*t3218*t199;
  t7770 = t1769*t1997*t3860;
  t7771 = t7769 + t7770;
  t7773 = -1.*t4182*t4348*t5538;
  t7774 = t4302*t7771;
  t7775 = t7773 + t7774;
  t7777 = t4302*t4182*t5538;
  t7778 = t4348*t7771;
  t7780 = t7777 + t7778;
  t7782 = t4969*t7775;
  t7783 = t4845*t7780;
  t7787 = t7782 + t7783;
  t7797 = t4845*t7775;
  t7798 = -1.*t4969*t7780;
  t7803 = t7797 + t7798;
  t7816 = -1.*t5162*t7787;
  t7820 = t5157*t7803;
  t7821 = t7816 + t7820;
  t7828 = t5157*t7787;
  t7829 = t5162*t7803;
  t7830 = t7828 + t7829;
  t7834 = t5231*t7821;
  t7836 = t5209*t7830;
  t7837 = t7834 + t7836;
  t7841 = t5209*t7821;
  t7842 = -1.*t5231*t7830;
  t7843 = t7841 + t7842;
  t7877 = t4348*t4293;
  t7878 = t4302*t4182*t5872;
  t7880 = t7877 + t7878;
  t7882 = t4302*t4293;
  t7884 = -1.*t4182*t4348*t5872;
  t7886 = t7882 + t7884;
  t7890 = -1.*t4969*t7880;
  t7892 = t4845*t7886;
  t7897 = t7890 + t7892;
  t7904 = t4845*t7880;
  t7906 = t4969*t7886;
  t7910 = t7904 + t7906;
  t7912 = t5162*t7897;
  t7913 = t5157*t7910;
  t7916 = t7912 + t7913;
  t7918 = t5157*t7897;
  t7919 = -1.*t5162*t7910;
  t7920 = t7918 + t7919;
  t7924 = -1.*t5231*t7916;
  t7925 = t5209*t7920;
  t7926 = t7924 + t7925;
  t7930 = t5209*t7916;
  t7931 = t5231*t7920;
  t7932 = t7930 + t7931;
  t7934 = t5309*t7926;
  t7937 = t5300*t7932;
  t7938 = t7934 + t7937;
  t7940 = t5300*t7926;
  t7941 = -1.*t5309*t7932;
  t7942 = t7940 + t7941;
  t7751 = t5309*t7739;
  t7752 = t5300*t7749;
  t7753 = t7751 + t7752;
  t7757 = t5300*t7739;
  t7758 = -1.*t5309*t7749;
  t7759 = t7757 + t7758;
  t7849 = -1.*t5309*t7837;
  t7850 = t5300*t7843;
  t7851 = t7849 + t7850;
  t7855 = t5300*t7837;
  t7856 = t5309*t7843;
  t7857 = t7855 + t7856;
  t7945 = -0.766044*t7938;
  t7946 = 0.642788*t7942;
  t7947 = t7945 + t7946;
  t8007 = 2.*t3998*t5872*t6401;
  t8008 = 2.*t7947*t6392;
  t8009 = t8007 + t8008;
  t8091 = -1.*t4845*t4348*t7058;
  t8092 = -1.*t4302*t4969*t7058;
  t8093 = t8091 + t8092;
  t8096 = t4302*t4845*t7058;
  t8097 = -1.*t4348*t4969*t7058;
  t8100 = t8096 + t8097;
  t8102 = t5162*t8093;
  t8105 = t5157*t8100;
  t8108 = t8102 + t8105;
  t8112 = t5157*t8093;
  t8113 = -1.*t5162*t8100;
  t8121 = t8112 + t8113;
  t8124 = -1.*t5231*t8108;
  t8125 = t5209*t8121;
  t8126 = t8124 + t8125;
  t8130 = t5209*t8108;
  t8132 = t5231*t8121;
  t8133 = t8130 + t8132;
  t8081 = 0.049*t3998;
  t8082 = t8081 + t4578;
  t8077 = -0.135*t3998;
  t8078 = -0.049*t4182;
  t8079 = t8077 + t8078;
  t8198 = -1.*t4845*t4348*t5570;
  t8200 = -1.*t4302*t4969*t5570;
  t8201 = t8198 + t8200;
  t8203 = t4302*t4845*t5570;
  t8204 = -1.*t4348*t4969*t5570;
  t8205 = t8203 + t8204;
  t8207 = t5162*t8201;
  t8208 = t5157*t8205;
  t8209 = t8207 + t8208;
  t8212 = t5157*t8201;
  t8214 = -1.*t5162*t8205;
  t8216 = t8212 + t8214;
  t8220 = -1.*t5231*t8209;
  t8221 = t5209*t8216;
  t8224 = t8220 + t8221;
  t8226 = t5209*t8209;
  t8228 = t5231*t8216;
  t8229 = t8226 + t8228;
  t8280 = -1.*t4845*t4348*t6401;
  t8281 = -1.*t4302*t4969*t6401;
  t8286 = t8280 + t8281;
  t8296 = t4302*t4845*t6401;
  t8298 = -1.*t4348*t4969*t6401;
  t8300 = t8296 + t8298;
  t8305 = t5162*t8286;
  t8308 = t5157*t8300;
  t8310 = t8305 + t8308;
  t8318 = t5157*t8286;
  t8320 = -1.*t5162*t8300;
  t8321 = t8318 + t8320;
  t8327 = -1.*t5231*t8310;
  t8330 = t5209*t8321;
  t8332 = t8327 + t8330;
  t8339 = t5209*t8310;
  t8340 = t5231*t8321;
  t8342 = t8339 + t8340;
  t8350 = t5309*t8332;
  t8358 = t5300*t8342;
  t8359 = t8350 + t8358;
  t8362 = t5300*t8332;
  t8364 = -1.*t5309*t8342;
  t8372 = t8362 + t8364;
  t8267 = -1.*t4182*t6010;
  t8268 = t8267 + t4745;
  t8138 = t5309*t8126;
  t8144 = t5300*t8133;
  t8148 = t8138 + t8144;
  t8151 = t5300*t8126;
  t8158 = -1.*t5309*t8133;
  t8164 = t8151 + t8158;
  t8234 = t5309*t8224;
  t8238 = t5300*t8229;
  t8239 = t8234 + t8238;
  t8247 = t5300*t8224;
  t8248 = -1.*t5309*t8229;
  t8250 = t8247 + t8248;
  t8380 = -0.766044*t8359;
  t8383 = 0.642788*t8372;
  t8384 = t8380 + t8383;
  t8409 = 2.*t8268*t6401;
  t8410 = 2.*t8384*t6392;
  t8411 = t8409 + t8410;
  t8181 = -1.*t4182*t5544;
  t8183 = -1.*t3998*t3860*t4691;
  t8185 = t8181 + t8183;
  t8087 = -1.*t3998*t1769;
  t8088 = -1.*t1997*t4182*t4691;
  t8089 = t8087 + t8088;
  t8506 = -1.*t3218*t4348*t4691;
  t8510 = -1.*t4302*t6615;
  t8511 = t8506 + t8510;
  t8521 = t4969*t8511;
  t8523 = t8521 + t6787;
  t8527 = t4845*t8511;
  t8528 = -1.*t4969*t6776;
  t8529 = t8527 + t8528;
  t8531 = -1.*t5162*t8523;
  t8532 = t5157*t8529;
  t8533 = t8531 + t8532;
  t8535 = t5157*t8523;
  t8536 = t5162*t8529;
  t8537 = t8535 + t8536;
  t8539 = t5231*t8533;
  t8540 = t5209*t8537;
  t8541 = t8539 + t8540;
  t8545 = t5209*t8533;
  t8546 = -1.*t5231*t8537;
  t8547 = t8545 + t8546;
  t8473 = 0.049*t4302;
  t8485 = t8473 + t4716;
  t8489 = -0.09*t4302;
  t8497 = -0.049*t4348;
  t8502 = t8489 + t8497;
  t8568 = -1.*t4348*t5538;
  t8570 = -1.*t4302*t5550;
  t8572 = t8568 + t8570;
  t8578 = t4969*t8572;
  t8582 = t8578 + t5690;
  t8588 = t4845*t8572;
  t8589 = -1.*t4969*t5675;
  t8601 = t8588 + t8589;
  t8613 = -1.*t5162*t8582;
  t8617 = t5157*t8601;
  t8618 = t8613 + t8617;
  t8623 = t5157*t8582;
  t8625 = t5162*t8601;
  t8629 = t8623 + t8625;
  t8635 = t5231*t8618;
  t8637 = t5209*t8629;
  t8638 = t8635 + t8637;
  t8641 = t5209*t8618;
  t8642 = -1.*t5231*t8629;
  t8648 = t8641 + t8642;
  t8676 = -1.*t4348*t5872;
  t8682 = -1.*t4302*t6072;
  t8683 = t8676 + t8682;
  t8688 = t4969*t8683;
  t8689 = t8688 + t6119;
  t8695 = t4845*t8683;
  t8696 = -1.*t4969*t6118;
  t8697 = t8695 + t8696;
  t8703 = -1.*t5162*t8689;
  t8704 = t5157*t8697;
  t8711 = t8703 + t8704;
  t8713 = t5157*t8689;
  t8714 = t5162*t8697;
  t8717 = t8713 + t8714;
  t8720 = t5231*t8711;
  t8723 = t5209*t8717;
  t8724 = t8720 + t8723;
  t8726 = t5209*t8711;
  t8727 = -1.*t5231*t8717;
  t8728 = t8726 + t8727;
  t8730 = -1.*t5309*t8724;
  t8731 = t5300*t8728;
  t8733 = t8730 + t8731;
  t8738 = t5300*t8724;
  t8741 = t5309*t8728;
  t8742 = t8738 + t8741;
  t8552 = -1.*t5309*t8541;
  t8553 = t5300*t8547;
  t8554 = t8552 + t8553;
  t8557 = t5300*t8541;
  t8560 = t5309*t8547;
  t8561 = t8557 + t8560;
  t8652 = -1.*t5309*t8638;
  t8657 = t5300*t8648;
  t8659 = t8652 + t8657;
  t8661 = t5300*t8638;
  t8663 = t5309*t8648;
  t8664 = t8661 + t8663;
  t8746 = 0.642788*t8733;
  t8747 = -0.766044*t8742;
  t8749 = t8746 + t8747;
  t8854 = -1.*t4845*t6627;
  t8855 = t8854 + t8528;
  t8858 = -1.*t5162*t6790;
  t8859 = t5157*t8855;
  t8860 = t8858 + t8859;
  t8862 = t5162*t8855;
  t8865 = t6818 + t8862;
  t8868 = t5231*t8860;
  t8874 = t5209*t8865;
  t8879 = t8868 + t8874;
  t8884 = t5209*t8860;
  t8885 = -1.*t5231*t8865;
  t8886 = t8884 + t8885;
  t8838 = -0.21*t4845;
  t8842 = -0.049*t4969;
  t8843 = t8838 + t8842;
  t8847 = 0.049*t4845;
  t8848 = t8847 + t5004;
  t8919 = -1.*t4845*t5627;
  t8920 = t8919 + t8589;
  t8930 = -1.*t5162*t5695;
  t8937 = t5157*t8920;
  t8939 = t8930 + t8937;
  t8943 = t5162*t8920;
  t8944 = t5754 + t8943;
  t8957 = t5231*t8939;
  t8958 = t5209*t8944;
  t8959 = t8957 + t8958;
  t8965 = t5209*t8939;
  t8966 = -1.*t5231*t8944;
  t8969 = t8965 + t8966;
  t8993 = -1.*t4845*t6083;
  t8994 = t8993 + t8696;
  t8997 = -1.*t5162*t6131;
  t8998 = t5157*t8994;
  t9000 = t8997 + t8998;
  t9002 = t5162*t8994;
  t9004 = t6182 + t9002;
  t9008 = t5231*t9000;
  t9009 = t5209*t9004;
  t9010 = t9008 + t9009;
  t9015 = t5209*t9000;
  t9016 = -1.*t5231*t9004;
  t9017 = t9015 + t9016;
  t9021 = -1.*t5309*t9010;
  t9022 = t5300*t9017;
  t9023 = t9021 + t9022;
  t9027 = t5300*t9010;
  t9028 = t5309*t9017;
  t9029 = t9027 + t9028;
  t8889 = -1.*t5309*t8879;
  t8890 = t5300*t8886;
  t8891 = t8889 + t8890;
  t8900 = t5300*t8879;
  t8903 = t5309*t8886;
  t8907 = t8900 + t8903;
  t8971 = -1.*t5309*t8959;
  t8972 = t5300*t8969;
  t8976 = t8971 + t8972;
  t8979 = t5300*t8959;
  t8981 = t5309*t8969;
  t8985 = t8979 + t8981;
  t9033 = 0.642788*t9023;
  t9037 = -0.766044*t9029;
  t9039 = t9033 + t9037;
  t9142 = -1.*t5157*t6802;
  t9149 = t8858 + t9142;
  t9155 = t5231*t9149;
  t9156 = t9155 + t6828;
  t9158 = t5209*t9149;
  t9160 = -1.*t5231*t6823;
  t9161 = t9158 + t9160;
  t9124 = 0.00159*t5157;
  t9125 = t9124 + t5181;
  t9130 = -0.27068*t5157;
  t9131 = -0.00159*t5162;
  t9139 = t9130 + t9131;
  t9194 = -1.*t5157*t5701;
  t9195 = t8930 + t9194;
  t9205 = t5231*t9195;
  t9207 = t9205 + t5799;
  t9209 = t5209*t9195;
  t9214 = -1.*t5231*t5777;
  t9216 = t9209 + t9214;
  t9254 = -1.*t5157*t6154;
  t9257 = t8997 + t9254;
  t9264 = t5231*t9257;
  t9265 = t9264 + t6192;
  t9268 = t5209*t9257;
  t9270 = -1.*t5231*t6189;
  t9273 = t9268 + t9270;
  t9275 = -1.*t5309*t9265;
  t9276 = t5300*t9273;
  t9277 = t9275 + t9276;
  t9279 = t5300*t9265;
  t9280 = t5309*t9273;
  t9281 = t9279 + t9280;
  t9163 = -1.*t5309*t9156;
  t9166 = t5300*t9161;
  t9167 = t9163 + t9166;
  t9170 = t5300*t9156;
  t9173 = t5309*t9161;
  t9178 = t9170 + t9173;
  t9219 = -1.*t5309*t9207;
  t9223 = t5300*t9216;
  t9226 = t9219 + t9223;
  t9231 = t5300*t9207;
  t9232 = t5309*t9216;
  t9235 = t9231 + t9232;
  t9284 = 0.642788*t9277;
  t9285 = -0.766044*t9281;
  t9286 = t9284 + t9285;
  t9385 = -1.*t5209*t6808;
  t9387 = t9385 + t9160;
  t9360 = -0.70544*t5209;
  t9361 = 0.01841*t5231;
  t9370 = t9360 + t9361;
  t9374 = -0.01841*t5209;
  t9377 = t9374 + t5234;
  t9411 = -1.*t5209*t5731;
  t9412 = t9411 + t9214;
  t9439 = -1.*t5209*t6167;
  t9440 = t9439 + t9270;
  t9443 = -1.*t5309*t6197;
  t9444 = t5300*t9440;
  t9446 = t9443 + t9444;
  t9451 = t5309*t9440;
  t9452 = t6332 + t9451;
  t9391 = -1.*t5309*t6831;
  t9392 = t5300*t9387;
  t9393 = t9391 + t9392;
  t9401 = t5309*t9387;
  t9402 = t6859 + t9401;
  t9415 = -1.*t5309*t5814;
  t9417 = t5300*t9412;
  t9419 = t9415 + t9417;
  t9421 = t5309*t9412;
  t9422 = t5844 + t9421;
  t9457 = 0.642788*t9446;
  t9458 = -0.766044*t9452;
  t9461 = t9457 + t9458;
  t9522 = 0.02159*t5300;
  t9525 = t9522 + t5403;
  t9539 = -1.11344*t5300;
  t9540 = -0.02159*t5309;
  t9541 = t9539 + t9540;
  t9593 = -1.*t5300*t6230;
  t9594 = t9443 + t9593;
  t9544 = -1.*t5300*t6849;
  t9548 = t9391 + t9544;
  t9565 = -1.*t5300*t5836;
  t9574 = t9415 + t9565;
  t9610 = 0.642788*t9594;
  t9615 = t9610 + t6969;
  t6996 = -0.766044*t5846;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=1.;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=1.;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=-0.135*t1769*t199*t1997 + 0.135*t3714*t3860 + t4221*t4293 + t4440*t4476 + t199*t4650*t4691 + t4720*t4752 - 0.1305*t4824 + t5027*t5079 + t5131*t5152 + t5165*t5178 + t5185*t5197 + t5240*t5263 + t5277*t5291 + t5345*t5379 + t5412*t5418 + 0.0306*t5430 - 1.13106*t5495;
  p_output1[20]=-0.135*t199*t3714 - 0.135*t1769*t1997*t3860 + t3860*t4650*t4691 + t4440*t5538 + t4221*t5544 + t4720*t5550 - 0.1305*t5570 + t5027*t5627 + t5131*t5675 + t5165*t5695 + t5185*t5701 + t5240*t5731 + t5277*t5777 + t5345*t5814 + t5412*t5836 + 0.0306*t5841 - 1.13106*t5846;
  p_output1[21]=t5570*t6392*t6412 + t6412*t6417*t6439;
  p_output1[22]=(0.642788*t5430 + 0.766044*t5495)*t6523*t6580*t6937*t6981 + t6981*(-0.642788*t5841 + t6996)*t7003;
  p_output1[23]=t7041*(t5570*t7032*t7051 - 1.*t6439*t7032*t7058 - 0.5*t6401*t7051*t7060*t7067 + 0.5*t6392*t7058*t7060*t7067)*t7108 + (t4824*t6392*t7032 - 1.*(-0.766044*t5430 + 0.642788*t5495)*t6401*t7032 - 0.5*t5570*t6392*t7060*t7067 + 0.5*t6401*t6439*t7060*t7067)*t7108*t7131;
  p_output1[24]=0.135*t1769*t1997 + t1769*t1997*t4221 + t1769*t3218*t4440 - 1.*t4650*t4691 + t4720*t7207 - 0.1305*t7226 + t5027*t7245 + t5131*t7257 + t5165*t7264 + t5185*t7271 + t5240*t7277 + t5277*t7281 + t5345*t7285 + t5412*t7289 + 0.0306*t7293 - 1.13106*t7299;
  p_output1[25]=t1769*t3860*t4650 + 0.135*t1997*t3860*t4691 + t1997*t3860*t4221*t4691 + t3218*t3860*t4440*t4691 - 0.1305*t7321 + t4720*t7331 + t5027*t7344 + t5131*t7356 + t5165*t7364 + t5185*t7376 + t5240*t7387 + t5277*t7396 + t5345*t7405 + t5412*t7415 + 0.0306*t7429 - 1.13106*t7439;
  p_output1[26]=-1.*t1769*t199*t4650 - 0.135*t199*t1997*t4691 - 1.*t199*t1997*t4221*t4691 - 1.*t199*t3218*t4440*t4691 - 0.1305*t7454 + t4720*t7459 + t5027*t7467 + t5131*t7478 + t5165*t7486 + t5185*t7495 + t5240*t7503 + t5277*t7510 + t5345*t7516 + t5412*t7523 + 0.0306*t7536 - 1.13106*t7550;
  p_output1[27]=t6392*t6412*t7454 + t6412*t6417*t7572;
  p_output1[28]=0.5*t6523*t6937*t6981*(2.*t6867*(0.642788*t7293 + 0.766044*t7299) + 2.*t6580*(0.642788*t7429 + 0.766044*t7439)) + t6981*t7003*(-0.642788*t7536 - 0.766044*t7550);
  p_output1[29]=t7108*t7131*(t6392*t7032*t7321 - 1.*t6401*t7032*(-0.766044*t7429 + 0.642788*t7439) - 1.*t6439*t7032*t7454 + t5570*t7032*t7572 - 0.5*t5570*t6392*t7060*t7611 + 0.5*t6401*t6439*t7060*t7611) + t7041*t7108*(-1.*t6392*t7032*t7226 + t6401*t7032*(-0.766044*t7293 + 0.642788*t7299) + t7032*t7051*t7454 - 1.*t7032*t7058*t7572 - 0.5*t6401*t7051*t7060*t7611 + 0.5*t6392*t7058*t7060*t7611);
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0.135*t3218*t4691 - 0.1305*t3218*t3998*t4691 + t3218*t4221*t4691 - 1.*t1997*t4440*t4691 + t3218*t4182*t4691*t4720 + t5027*t7666 + t5131*t7680 + t5165*t7691 + t5185*t7705 + t5240*t7718 + t5277*t7730 + t5345*t7739 + t5412*t7749 + 0.0306*t7753 - 1.13106*t7759;
  p_output1[85]=-0.135*t199*t1997 - 0.135*t1769*t3218*t3860 - 0.1305*t3998*t5538 + t4221*t5538 + t4182*t4720*t5538 + t4440*t7771 + t5131*t7775 + t5027*t7780 + t5185*t7787 + t5165*t7803 + t5277*t7821 + t5240*t7830 + t5412*t7837 + t5345*t7843 - 1.13106*t7851 + 0.0306*t7857;
  p_output1[86]=0.135*t1769*t199*t3218 - 0.135*t1997*t3860 + t4293*t4440 - 0.1305*t3998*t5872 + t4221*t5872 + t4182*t4720*t5872 + t5027*t7880 + t5131*t7886 + t5165*t7897 + t5185*t7910 + t5240*t7916 + t5277*t7920 + t5345*t7926 + t5412*t7932 + 0.0306*t7938 - 1.13106*t7942;
  p_output1[87]=t3998*t5872*t6392*t6412 + t6412*t6417*t7947;
  p_output1[88]=0.5*t6523*t6937*t6981*(2.*t6867*(0.642788*t7753 + 0.766044*t7759) + 2.*t6580*(0.766044*t7851 + 0.642788*t7857)) + t6981*t7003*(-0.642788*t7938 - 0.766044*t7942);
  p_output1[89]=t7108*t7131*(t3998*t5538*t6392*t7032 - 1.*t3998*t5872*t6439*t7032 - 1.*t6401*t7032*(0.642788*t7851 - 0.766044*t7857) + t5570*t7032*t7947 - 0.5*t5570*t6392*t7060*t8009 + 0.5*t6401*t6439*t7060*t8009) + t7041*t7108*(-1.*t3218*t3998*t4691*t6392*t7032 + t3998*t5872*t7032*t7051 + t6401*t7032*(-0.766044*t7753 + 0.642788*t7759) - 1.*t7032*t7058*t7947 - 0.5*t6401*t7051*t7060*t8009 + 0.5*t6392*t7058*t7060*t8009);
  p_output1[90]=t4720*t7058 + t4302*t5027*t7058 - 1.*t4348*t5131*t7058 + t1769*t8079 + t1997*t4691*t8082 - 0.1305*t8089 + t5165*t8093 + t5185*t8100 + t5240*t8108 + t5277*t8121 + t5345*t8126 + t5412*t8133 + 0.0306*t8148 - 1.13106*t8164;
  p_output1[91]=t4720*t5570 + t4302*t5027*t5570 - 1.*t4348*t5131*t5570 + t3860*t4691*t8079 + t5544*t8082 - 0.1305*t8185 + t5165*t8201 + t5185*t8205 + t5240*t8209 + t5277*t8216 + t5345*t8224 + t5412*t8229 + 0.0306*t8239 - 1.13106*t8250;
  p_output1[92]=t4720*t6401 + t4302*t5027*t6401 - 1.*t4348*t5131*t6401 - 1.*t199*t4691*t8079 + t6010*t8082 - 0.1305*t8268 + t5165*t8286 + t5185*t8300 + t5240*t8310 + t5277*t8321 + t5345*t8332 + t5412*t8342 + 0.0306*t8359 - 1.13106*t8372;
  p_output1[93]=t6392*t6412*t8268 + t6412*t6417*t8384;
  p_output1[94]=0.5*t6523*t6937*t6981*(2.*t6867*(0.642788*t8148 + 0.766044*t8164) + 2.*t6580*(0.642788*t8239 + 0.766044*t8250)) + t6981*t7003*(-0.642788*t8359 - 0.766044*t8372);
  p_output1[95]=t7108*t7131*(t6392*t7032*t8185 - 1.*t6401*t7032*(-0.766044*t8239 + 0.642788*t8250) - 1.*t6439*t7032*t8268 + t5570*t7032*t8384 - 0.5*t5570*t6392*t7060*t8411 + 0.5*t6401*t6439*t7060*t8411) + t7041*t7108*(-1.*t6392*t7032*t8089 + t6401*t7032*(-0.766044*t8148 + 0.642788*t8164) + t7032*t7051*t8268 - 1.*t7032*t7058*t8384 - 0.5*t6401*t7051*t7060*t8411 + 0.5*t6392*t7058*t7060*t8411);
  p_output1[96]=t5027*t6776 + t3218*t4691*t8485 + t6615*t8502 + t5131*t8511 + t5185*t8523 + t5165*t8529 + t5277*t8533 + t5240*t8537 + t5412*t8541 + t5345*t8547 - 1.13106*t8554 + 0.0306*t8561;
  p_output1[97]=t5027*t5675 + t5538*t8485 + t5550*t8502 + t5131*t8572 + t5185*t8582 + t5165*t8601 + t5277*t8618 + t5240*t8629 + t5412*t8638 + t5345*t8648 - 1.13106*t8659 + 0.0306*t8664;
  p_output1[98]=t5027*t6118 + t5872*t8485 + t6072*t8502 + t5131*t8683 + t5185*t8689 + t5165*t8697 + t5277*t8711 + t5240*t8717 + t5412*t8724 + t5345*t8728 - 1.13106*t8733 + 0.0306*t8742;
  p_output1[99]=t6412*t6417*t8749;
  p_output1[100]=0.5*t6523*t6937*t6981*(2.*t6867*(0.766044*t8554 + 0.642788*t8561) + 2.*t6580*(0.766044*t8659 + 0.642788*t8664)) + t6981*t7003*(-0.766044*t8733 - 0.642788*t8742);
  p_output1[101]=t7108*t7131*(-1.*t6401*t7032*(0.642788*t8659 - 0.766044*t8664) + t5570*t7032*t8749 - 1.*t5570*t6403*t7060*t8749 + t6392*t6401*t6439*t7060*t8749) + t7041*t7108*(t6401*t7032*(0.642788*t8554 - 0.766044*t8561) - 1.*t7032*t7058*t8749 - 1.*t6392*t6401*t7051*t7060*t8749 + t6403*t7058*t7060*t8749);
  p_output1[102]=t5185*t6790 + t6627*t8843 + t6776*t8848 + t5165*t8855 + t5277*t8860 + t5240*t8865 + t5412*t8879 + t5345*t8886 - 1.13106*t8891 + 0.0306*t8907;
  p_output1[103]=t5185*t5695 + t5627*t8843 + t5675*t8848 + t5165*t8920 + t5277*t8939 + t5240*t8944 + t5412*t8959 + t5345*t8969 - 1.13106*t8976 + 0.0306*t8985;
  p_output1[104]=t5185*t6131 + t6083*t8843 + t6118*t8848 + t5165*t8994 + t5277*t9000 + t5240*t9004 + t5412*t9010 + t5345*t9017 - 1.13106*t9023 + 0.0306*t9029;
  p_output1[105]=t6412*t6417*t9039;
  p_output1[106]=0.5*t6523*t6937*t6981*(2.*t6867*(0.766044*t8891 + 0.642788*t8907) + 2.*t6580*(0.766044*t8976 + 0.642788*t8985)) + t6981*t7003*(-0.766044*t9023 - 0.642788*t9029);
  p_output1[107]=t7108*t7131*(-1.*t6401*t7032*(0.642788*t8976 - 0.766044*t8985) + t5570*t7032*t9039 - 1.*t5570*t6403*t7060*t9039 + t6392*t6401*t6439*t7060*t9039) + t7041*t7108*(t6401*t7032*(0.642788*t8891 - 0.766044*t8907) - 1.*t7032*t7058*t9039 - 1.*t6392*t6401*t7051*t7060*t9039 + t6403*t7058*t7060*t9039);
  p_output1[108]=t5240*t6823 + t6790*t9125 + t6802*t9139 + t5277*t9149 + t5412*t9156 + t5345*t9161 - 1.13106*t9167 + 0.0306*t9178;
  p_output1[109]=t5240*t5777 + t5695*t9125 + t5701*t9139 + t5277*t9195 + t5412*t9207 + t5345*t9216 - 1.13106*t9226 + 0.0306*t9235;
  p_output1[110]=t5240*t6189 + t6131*t9125 + t6154*t9139 + t5277*t9257 + t5412*t9265 + t5345*t9273 - 1.13106*t9277 + 0.0306*t9281;
  p_output1[111]=t6412*t6417*t9286;
  p_output1[112]=0.5*t6523*t6937*t6981*(2.*t6867*(0.766044*t9167 + 0.642788*t9178) + 2.*t6580*(0.766044*t9226 + 0.642788*t9235)) + t6981*t7003*(-0.766044*t9277 - 0.642788*t9281);
  p_output1[113]=t7108*t7131*(-1.*t6401*t7032*(0.642788*t9226 - 0.766044*t9235) + t5570*t7032*t9286 - 1.*t5570*t6403*t7060*t9286 + t6392*t6401*t6439*t7060*t9286) + t7041*t7108*(t6401*t7032*(0.642788*t9167 - 0.766044*t9178) - 1.*t7032*t7058*t9286 - 1.*t6392*t6401*t7051*t7060*t9286 + t6403*t7058*t7060*t9286);
  p_output1[114]=t5412*t6831 + t6808*t9370 + t6823*t9377 + t5345*t9387 - 1.13106*t9393 + 0.0306*t9402;
  p_output1[115]=t5412*t5814 + t5731*t9370 + t5777*t9377 + t5345*t9412 - 1.13106*t9419 + 0.0306*t9422;
  p_output1[116]=t5412*t6197 + t6167*t9370 + t6189*t9377 + t5345*t9440 - 1.13106*t9446 + 0.0306*t9452;
  p_output1[117]=t6412*t6417*t9461;
  p_output1[118]=0.5*t6523*t6937*t6981*(2.*t6867*(0.766044*t9393 + 0.642788*t9402) + 2.*t6580*(0.766044*t9419 + 0.642788*t9422)) + t6981*t7003*(-0.766044*t9446 - 0.642788*t9452);
  p_output1[119]=t7108*t7131*(-1.*t6401*t7032*(0.642788*t9419 - 0.766044*t9422) + t5570*t7032*t9461 - 1.*t5570*t6403*t7060*t9461 + t6392*t6401*t6439*t7060*t9461) + t7041*t7108*(t6401*t7032*(0.642788*t9393 - 0.766044*t9402) - 1.*t7032*t7058*t9461 - 1.*t6392*t6401*t7051*t7060*t9461 + t6403*t7058*t7060*t9461);
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0.0306*t6861 + t6831*t9525 + t6849*t9541 - 1.13106*t9548;
  p_output1[127]=0.0306*t5846 + t5814*t9525 + t5836*t9541 - 1.13106*t9574;
  p_output1[128]=0.0306*t6349 + t6197*t9525 + t6230*t9541 - 1.13106*t9594;
  p_output1[129]=t6412*t6417*t9615;
  p_output1[130]=0.5*t6523*t6937*t6981*(2.*t6867*(t7047 + 0.766044*t9548) + 2.*t6580*(t6438 + 0.766044*t9574)) + t6981*t7003*(-0.642788*t6349 - 0.766044*t9594);
  p_output1[131]=t7108*t7131*(-1.*t6401*t7032*(t6996 + 0.642788*t9574) + t5570*t7032*t9615 - 1.*t5570*t6403*t7060*t9615 + t6392*t6401*t6439*t7060*t9615) + t7041*t7108*(t6401*t7032*(-0.766044*t6861 + 0.642788*t9548) - 1.*t7032*t7058*t9615 - 1.*t6392*t6401*t7051*t7060*t9615 + t6403*t7058*t7060*t9615);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightFoot_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




