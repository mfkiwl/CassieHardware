/*
 * Automatically Generated from Mathematica.
 * Fri 15 Oct 2021 13:09:09 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "dyaLeftStance_new.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t64;
  double t87;
  double t112;
  double t281;
  double t124;
  double t78;
  double t741;
  double t772;
  double t812;
  double t829;
  double t850;
  double t912;
  double t938;
  double t976;
  double t986;
  double t989;
  double t1002;
  double t1018;
  double t1043;
  double t1050;
  double t1059;
  double t1073;
  double t1076;
  double t1095;
  double t747;
  double t780;
  double t785;
  double t894;
  double t895;
  double t902;
  double t911;
  double t1048;
  double t1115;
  double t1116;
  double t1121;
  double t1079;
  double t1086;
  double t1090;
  double t1099;
  double t1103;
  double t1110;
  double t1178;
  double t1186;
  double t1196;
  double t1205;
  double t1202;
  double t1206;
  double t1212;
  double t1215;
  double t1216;
  double t1258;
  double t1282;
  double t1297;
  double t1303;
  double t1308;
  double t1334;
  double t1344;
  double t1348;
  double t1349;
  double t1416;
  double t1420;
  double t1424;
  double t1425;
  double t1433;
  double t1441;
  double t1562;
  double t1568;
  double t1569;
  double t1579;
  double t1440;
  double t1442;
  double t1450;
  double t1456;
  double t1461;
  double t1463;
  double t1464;
  double t1476;
  double t1576;
  double t1480;
  double t1488;
  double t1505;
  double t1634;
  double t1608;
  double t1513;
  double t1514;
  double t1531;
  double t1663;
  double t1660;
  double t1580;
  double t1671;
  double t1609;
  double t1719;
  double t1630;
  double t1676;
  double t1643;
  double t1906;
  double t1914;
  double t1915;
  double t1927;
  double t2152;
  double t2262;
  double t2263;
  double t2265;
  double t2272;
  double t2273;
  double t2274;
  double t2267;
  double t2275;
  double t2278;
  double t2283;
  double t2286;
  double t2287;
  double t2222;
  double t2108;
  double t2281;
  double t2295;
  double t2297;
  double t2309;
  double t2310;
  double t2312;
  double t2130;
  double t2298;
  double t2317;
  double t2321;
  double t2065;
  double t2390;
  double t2391;
  double t2394;
  double t2249;
  double t2423;
  double t2218;
  double t2353;
  double t2436;
  double t2332;
  double t2463;
  double t1959;
  double t2602;
  double t2606;
  double t2607;
  double t2610;
  double t2616;
  double t2650;
  double t2655;
  double t2656;
  double t2658;
  double t2666;
  double t2674;
  double t2696;
  double t2699;
  double t2706;
  double t2707;
  double t2713;
  double t2714;
  double t2715;
  double t2719;
  double t2721;
  double t2722;
  double t2723;
  double t2733;
  double t2734;
  double t2736;
  double t2737;
  double t2743;
  double t2754;
  double t2755;
  double t2757;
  double t1558;
  double t1573;
  double t1599;
  double t1601;
  double t1610;
  double t1611;
  double t1619;
  double t2789;
  double t2792;
  double t1626;
  double t1628;
  double t1631;
  double t1632;
  double t1651;
  double t1652;
  double t1654;
  double t2794;
  double t2798;
  double t2799;
  double t1658;
  double t1659;
  double t1661;
  double t1662;
  double t1667;
  double t1668;
  double t1669;
  double t2806;
  double t2808;
  double t2810;
  double t1672;
  double t1678;
  double t1681;
  double t1684;
  double t1708;
  double t1712;
  double t1730;
  double t1733;
  double t1785;
  double t1821;
  double t1829;
  double t1835;
  double t1918;
  double t1988;
  double t1996;
  double t1997;
  double t1998;
  double t2954;
  double t2955;
  double t2961;
  double t2964;
  double t2967;
  double t2970;
  double t2971;
  double t2972;
  double t2974;
  double t2978;
  double t2997;
  double t3000;
  double t3001;
  double t3002;
  double t3005;
  double t3010;
  double t3012;
  double t3049;
  double t3050;
  double t3063;
  double t3074;
  double t3075;
  double t3082;
  double t3090;
  double t3091;
  double t3208;
  double t3214;
  double t3224;
  double t3232;
  double t3235;
  double t3238;
  double t3240;
  double t3248;
  double t3257;
  double t3294;
  double t3300;
  double t3305;
  double t3306;
  double t3308;
  double t3309;
  double t3314;
  double t3315;
  double t3316;
  double t3317;
  double t3319;
  double t3322;
  double t3324;
  double t3330;
  double t3444;
  double t3448;
  double t3455;
  double t3456;
  double t3457;
  double t3459;
  double t3461;
  double t3445;
  double t3452;
  double t3453;
  double t3454;
  double t3463;
  double t3465;
  double t3466;
  double t3468;
  double t3469;
  double t3470;
  double t3471;
  double t3474;
  double t3475;
  double t3476;
  double t3483;
  double t3489;
  double t3486;
  double t3487;
  double t3488;
  double t3492;
  double t3494;
  double t3495;
  double t3503;
  double t3504;
  double t3505;
  double t3509;
  double t3507;
  double t3510;
  double t3511;
  double t3512;
  double t3515;
  double t3517;
  double t3518;
  double t3524;
  double t3526;
  double t3529;
  double t3532;
  double t3544;
  double t3546;
  double t3550;
  double t3552;
  double t3534;
  double t3536;
  double t3537;
  double t3551;
  double t3553;
  double t3555;
  double t3556;
  double t3559;
  double t3560;
  double t3562;
  double t3564;
  double t3565;
  double t3566;
  double t3567;
  double t3598;
  double t3605;
  double t3606;
  double t3612;
  double t3573;
  double t3576;
  double t3589;
  double t3671;
  double t3680;
  double t3681;
  double t3691;
  double t3609;
  double t3616;
  double t3618;
  double t3626;
  double t3628;
  double t3635;
  double t3636;
  double t3637;
  double t3686;
  double t3640;
  double t3644;
  double t3645;
  double t3698;
  double t3721;
  double t3650;
  double t3651;
  double t3652;
  double t3753;
  double t3761;
  double t3734;
  double t3784;
  double t3723;
  double t3812;
  double t3692;
  double t3773;
  double t3699;
  double t3875;
  double t3882;
  double t3889;
  double t3893;
  double t3990;
  double t4046;
  double t4047;
  double t4049;
  double t4033;
  double t4036;
  double t4038;
  double t4043;
  double t4050;
  double t4052;
  double t4059;
  double t4060;
  double t4063;
  double t4057;
  double t4068;
  double t4070;
  double t4074;
  double t4075;
  double t4077;
  double t3976;
  double t4017;
  double t4073;
  double t4078;
  double t4082;
  double t4098;
  double t4102;
  double t4103;
  double t4004;
  double t4096;
  double t4105;
  double t4107;
  double t4016;
  double t4145;
  double t4151;
  double t4161;
  double t3988;
  double t4169;
  double t3975;
  double t4113;
  double t4201;
  double t4127;
  double t4180;
  double t3902;
  double t4281;
  double t4284;
  double t4285;
  double t4286;
  double t4287;
  double t4300;
  double t4301;
  double t4305;
  double t4306;
  double t4310;
  double t4312;
  double t4325;
  double t4326;
  double t4328;
  double t4330;
  double t4332;
  double t4333;
  double t4336;
  double t4338;
  double t4342;
  double t4347;
  double t4352;
  double t4361;
  double t4363;
  double t4364;
  double t4366;
  double t4367;
  double t4373;
  double t4376;
  double t4379;
  double t4396;
  double t4405;
  double t4407;
  double t4409;
  double t4411;
  double t4415;
  double t4418;
  double t4421;
  double t3669;
  double t3683;
  double t3693;
  double t3696;
  double t3701;
  double t3704;
  double t3705;
  double t4433;
  double t4435;
  double t3716;
  double t3720;
  double t3726;
  double t3727;
  double t3738;
  double t3740;
  double t3746;
  double t4438;
  double t4439;
  double t4443;
  double t3751;
  double t3752;
  double t3757;
  double t3759;
  double t3763;
  double t3764;
  double t3768;
  double t4447;
  double t4449;
  double t4451;
  double t3781;
  double t3787;
  double t3793;
  double t3794;
  double t3817;
  double t3824;
  double t3826;
  double t3828;
  double t3838;
  double t3841;
  double t3849;
  double t3854;
  double t3891;
  double t3895;
  double t3896;
  double t3901;
  double t3905;
  double t131;
  double t293;
  double t334;
  double t4581;
  double t4582;
  double t4583;
  double t4616;
  double t4617;
  double t4620;
  double t4624;
  double t4631;
  double t4632;
  double t4635;
  double t4638;
  double t4639;
  double t4640;
  double t4648;
  double t4651;
  double t4653;
  double t4656;
  double t4664;
  double t4668;
  double t4671;
  double t4674;
  double t4694;
  double t4695;
  double t4698;
  double t4699;
  double t4703;
  double t4707;
  double t4709;
  double t4711;
  double t4750;
  double t4754;
  double t4758;
  double t4759;
  double t4769;
  double t4774;
  double t4778;
  double t4780;
  double t4587;
  double t4937;
  double t4938;
  double t4940;
  double t4948;
  double t4954;
  double t4963;
  double t4966;
  double t4975;
  double t4981;
  double t4985;
  double t4967;
  double t4972;
  double t4973;
  double t5001;
  double t5004;
  double t5009;
  double t5012;
  double t5013;
  double t5017;
  double t5020;
  double t5023;
  double t5035;
  double t5036;
  double t5037;
  double t5039;
  double t5044;
  double t5049;
  double t5054;
  double t5055;
  double t5069;
  double t5070;
  double t5073;
  double t5076;
  double t5078;
  double t5096;
  double t5101;
  double t5102;
  double t5130;
  double t5135;
  double t5145;
  double t5147;
  double t5148;
  double t5152;
  double t5155;
  double t5157;
  double t5293;
  double t5294;
  double t5297;
  double t5298;
  double t5306;
  double t5308;
  double t5309;
  double t5318;
  double t5321;
  double t5322;
  double t5328;
  double t5330;
  double t5331;
  double t5334;
  double t5336;
  double t5337;
  double t5339;
  double t5346;
  double t5350;
  double t5351;
  double t5352;
  double t5354;
  double t5359;
  double t5361;
  double t5362;
  double t5370;
  double t5371;
  double t5372;
  double t5373;
  double t5374;
  double t5378;
  double t5379;
  double t5382;
  double t5452;
  double t5454;
  double t5456;
  double t5458;
  double t5459;
  double t5460;
  double t5461;
  double t5463;
  double t5464;
  double t5470;
  double t5471;
  double t5473;
  double t5477;
  double t5481;
  double t5483;
  double t5486;
  double t5494;
  double t5495;
  double t5499;
  double t5500;
  double t5501;
  double t5504;
  double t5505;
  double t5506;
  double t5581;
  double t5582;
  double t5583;
  double t5584;
  double t5585;
  double t5586;
  double t5587;
  double t5588;
  double t5589;
  double t5607;
  double t5610;
  double t5611;
  double t5615;
  double t5626;
  double t5627;
  double t5629;
  double t5722;
  double t5724;
  double t5726;
  double t5733;
  double t5734;
  double t5737;
  double t5738;
  double t5745;
  double t5747;
  double t4260;
  double t4270;
  double t341;
  double t351;
  double t440;
  double t5798;
  double t5800;
  double t5802;
  double t5812;
  double t5817;
  double t5819;
  double t5820;
  double t5821;
  double t5835;
  double t5836;
  double t5837;
  double t5842;
  double t5844;
  double t5847;
  double t5848;
  double t5850;
  double t5854;
  double t5855;
  double t5856;
  double t5867;
  double t5872;
  double t5873;
  double t5876;
  double t5879;
  double t5881;
  double t5883;
  double t5892;
  double t5900;
  double t5902;
  double t5903;
  double t5904;
  double t5905;
  double t5910;
  double t5914;
  double t5922;
  double t5943;
  double t5944;
  double t5945;
  double t5950;
  double t5951;
  double t5953;
  double t5958;
  double t5960;
  double t5813;
  double t6044;
  double t6045;
  double t6062;
  double t6065;
  double t6067;
  double t6053;
  double t6055;
  double t6058;
  double t6082;
  double t6088;
  double t6098;
  double t6100;
  double t6101;
  double t6107;
  double t6109;
  double t6111;
  double t6122;
  double t6123;
  double t6126;
  double t6133;
  double t6135;
  double t6137;
  double t6142;
  double t6143;
  double t6153;
  double t6156;
  double t6157;
  double t6159;
  double t6161;
  double t6165;
  double t6169;
  double t6170;
  double t6189;
  double t6194;
  double t6195;
  double t6205;
  double t6210;
  double t6212;
  double t6214;
  double t6215;
  double t6230;
  double t6234;
  double t6238;
  double t6242;
  double t6244;
  double t6250;
  double t6251;
  double t6265;
  double t6368;
  double t6369;
  double t6370;
  double t6374;
  double t6375;
  double t6379;
  double t6380;
  double t6383;
  double t6388;
  double t6391;
  double t6393;
  double t6394;
  double t6397;
  double t6399;
  double t6401;
  double t6402;
  double t6408;
  double t6415;
  double t6416;
  double t6417;
  double t6419;
  double t6425;
  double t6428;
  double t6429;
  double t6440;
  double t6441;
  double t6442;
  double t6449;
  double t6450;
  double t6454;
  double t6461;
  double t6466;
  double t6487;
  double t6488;
  double t6491;
  double t6496;
  double t6497;
  double t6500;
  double t6509;
  double t6511;
  double t6367;
  double t6625;
  double t6630;
  double t6639;
  double t6640;
  double t6641;
  double t6631;
  double t6634;
  double t6635;
  double t6648;
  double t6650;
  double t6652;
  double t6654;
  double t6656;
  double t6659;
  double t6660;
  double t6661;
  double t6669;
  double t6670;
  double t6676;
  double t6677;
  double t6679;
  double t6683;
  double t6684;
  double t6685;
  double t6690;
  double t6691;
  double t6692;
  double t6695;
  double t6696;
  double t6702;
  double t6703;
  double t6704;
  double t6718;
  double t6720;
  double t6722;
  double t6723;
  double t6728;
  double t6732;
  double t6735;
  double t6740;
  double t6749;
  double t6750;
  double t6751;
  double t6753;
  double t6754;
  double t6757;
  double t6759;
  double t6760;
  double t6854;
  double t6855;
  double t6849;
  double t6852;
  double t6861;
  double t6862;
  double t6866;
  double t6868;
  double t6869;
  double t6870;
  double t6874;
  double t6875;
  double t6877;
  double t6879;
  double t6881;
  double t6883;
  double t6887;
  double t6888;
  double t6890;
  double t6896;
  double t6898;
  double t6900;
  double t6928;
  double t6929;
  double t6945;
  double t6947;
  double t6948;
  double t6952;
  double t6956;
  double t6957;
  double t6959;
  double t6960;
  double t6961;
  double t6967;
  double t6969;
  double t6970;
  double t6973;
  double t6974;
  double t6976;
  double t7011;
  double t7012;
  double t7015;
  double t7017;
  double t7018;
  double t7019;
  double t7023;
  double t7025;
  double t7026;
  double t7029;
  double t7031;
  double t7034;
  double t7041;
  double t7042;
  double t7043;
  double t7049;
  double t7052;
  double t7054;
  double t7056;
  double t7057;
  double t7058;
  double t2535;
  double t2536;
  double t2539;
  double t7093;
  double t7095;
  double t7100;
  double t2544;
  double t2547;
  double t7102;
  double t7103;
  double t7106;
  double t7107;
  double t7108;
  double t7104;
  double t7109;
  double t7110;
  double t7113;
  double t7114;
  double t7115;
  double t7159;
  double t7162;
  double t7165;
  double t7167;
  double t7175;
  double t7177;
  double t7181;
  double t7221;
  double t7222;
  double t7223;
  double t7225;
  double t7226;
  double t7227;
  double t7233;
  double t7235;
  double t7237;
  double t7241;
  double t7242;
  double t7244;
  double t7248;
  double t7249;
  double t7251;
  double t7253;
  double t7254;
  double t7255;
  double t7258;
  double t7260;
  double t7261;
  double t7288;
  double t7289;
  double t7282;
  double t7283;
  double t7293;
  double t7294;
  double t7295;
  double t7308;
  double t7309;
  double t7315;
  double t7317;
  double t7320;
  double t7321;
  double t7323;
  double t7324;
  double t7326;
  double t7329;
  double t7330;
  double t7333;
  double t7338;
  double t7341;
  double t7342;
  double t7344;
  double t7345;
  double t7346;
  double t7389;
  double t7391;
  double t7393;
  double t7416;
  double t7417;
  double t7418;
  double t7421;
  double t7424;
  double t7426;
  double t7428;
  double t7429;
  double t7431;
  double t7434;
  double t7436;
  double t7437;
  double t7483;
  double t7484;
  double t7489;
  double t7493;
  double t7494;
  double t7495;
  double t7504;
  double t7505;
  double t7506;
  double t7512;
  double t7513;
  double t7517;
  double t7531;
  double t7532;
  double t7533;
  double t7542;
  double t7547;
  double t7550;
  double t7591;
  double t7592;
  double t7594;
  double t7610;
  double t7612;
  double t7614;
  double t7620;
  double t7624;
  double t7625;
  double t7629;
  double t7637;
  double t7638;
  double t7641;
  double t7644;
  double t7645;
  double t7654;
  double t7658;
  double t7660;
  double t7665;
  double t7669;
  double t7670;
  double t7709;
  double t7713;
  double t7716;
  double t7722;
  double t7725;
  double t7728;
  double t7735;
  double t7739;
  double t7743;
  double t7748;
  double t7749;
  double t7751;
  double t7756;
  double t7758;
  double t7761;
  double t7775;
  double t7778;
  double t7782;
  double t7789;
  double t7791;
  double t7795;
  double t7814;
  double t7816;
  double t7824;
  double t7825;
  double t7827;
  double t7830;
  double t7831;
  double t7832;
  double t7829;
  double t7833;
  double t7839;
  double t7842;
  double t7844;
  double t7847;
  double t7888;
  double t7892;
  double t7903;
  double t7908;
  double t7917;
  double t7918;
  double t7919;
  double t7960;
  double t7963;
  double t7967;
  double t7971;
  double t7976;
  double t7984;
  double t7991;
  double t7992;
  double t7993;
  double t8001;
  double t8002;
  double t8003;
  double t8005;
  double t8007;
  double t8011;
  double t8014;
  double t8015;
  double t8020;
  double t8022;
  double t8023;
  double t8024;
  double t7298;
  double t7299;
  double t7300;
  double t8071;
  double t8074;
  double t8081;
  double t8084;
  double t8085;
  double t8086;
  double t8090;
  double t8091;
  double t8097;
  double t8100;
  double t8102;
  double t8103;
  double t6939;
  double t8134;
  double t8135;
  double t8136;
  double t8144;
  double t8149;
  double t8171;
  double t8177;
  double t8179;
  double t8188;
  double t8191;
  double t8194;
  double t8201;
  double t8202;
  double t8203;
  double t8207;
  double t8210;
  double t8220;
  double t8222;
  double t8223;
  double t8224;
  double t8227;
  double t8228;
  double t8236;
  double t8276;
  double t8278;
  double t8279;
  double t8287;
  double t8289;
  double t8300;
  double t8301;
  double t8308;
  double t8315;
  double t8317;
  double t8318;
  double t8321;
  double t8323;
  double t8324;
  double t7348;
  double t7351;
  double t7352;
  double t8394;
  double t8396;
  double t8405;
  double t8411;
  double t8415;
  double t8416;
  double t8417;
  double t8475;
  double t8479;
  double t8480;
  double t8485;
  double t8486;
  double t8487;
  double t8491;
  double t8494;
  double t8498;
  double t8507;
  double t8509;
  double t8510;
  double t8517;
  double t8519;
  double t8521;
  double t8524;
  double t8525;
  double t8528;
  double t8533;
  double t8534;
  double t8535;
  double t6586;
  double t6590;
  double t6591;
  double t6596;
  double t6599;
  double t6602;
  double t2004;
  double t2013;
  double t2028;
  double t2044;
  double t2047;
  double t2048;
  double t4912;
  double t4914;
  double t4917;
  double t4922;
  double t4924;
  double t4927;
  double t2890;
  double t2892;
  double t2899;
  double t2910;
  double t2916;
  double t2927;
  double t3184;
  double t3186;
  double t3187;
  double t3192;
  double t3193;
  double t3194;
  double t2557;
  double t2559;
  double t2565;
  double t2567;
  double t2572;
  double t2581;
  double t3401;
  double t3403;
  double t3407;
  double t3410;
  double t3412;
  double t3423;
  double t6015;
  double t6018;
  double t6020;
  double t6024;
  double t6026;
  double t6035;
  t64 = Cos(var1[3]);
  t87 = Sin(var1[5]);
  t112 = Cos(var1[5]);
  t281 = Sin(var1[3]);
  t124 = Sin(var1[4]);
  t78 = Cos(var1[4]);
  t741 = Cos(var1[15]);
  t772 = Sin(var1[15]);
  t812 = -1.*t64*t112*t124;
  t829 = t281*t87;
  t850 = t812 + t829;
  t912 = Sin(var1[14]);
  t938 = t64*t78*t912;
  t976 = Cos(var1[14]);
  t986 = t112*t281;
  t989 = t64*t124*t87;
  t1002 = t986 + t989;
  t1018 = t976*t1002;
  t1043 = t938 + t1018;
  t1050 = Cos(var1[16]);
  t1059 = -1.*t772*t850;
  t1073 = t741*t1043;
  t1076 = t1059 + t1073;
  t1095 = Sin(var1[16]);
  t747 = -0.135*t741;
  t780 = -0.049*t772;
  t785 = t747 + t780;
  t894 = t785*t850;
  t895 = 0.049*t741;
  t902 = -0.135*t772;
  t911 = t895 + t902;
  t1048 = t911*t1043;
  t1115 = -1.*t741*t850;
  t1116 = -1.*t772*t1043;
  t1121 = t1115 + t1116;
  t1079 = -1.*t1050;
  t1086 = 1. + t1079;
  t1090 = -0.049*t1086;
  t1099 = -0.09*t1095;
  t1103 = t1090 + t1099;
  t1110 = t1103*t1076;
  t1178 = Cos(var1[17]);
  t1186 = -1.*t1178;
  t1196 = 1. + t1186;
  t1205 = Sin(var1[17]);
  t1202 = -0.049*t1196;
  t1206 = -0.21*t1205;
  t1212 = t1202 + t1206;
  t1215 = t1050*t1212*t1076;
  t1216 = -0.21*t1196;
  t1258 = 0.049*t1205;
  t1282 = t1216 + t1258;
  t1297 = -1.*t1095*t1282*t1076;
  t1303 = -1.*t1178*t1095*t1076;
  t1308 = -1.*t1050*t1205*t1076;
  t1334 = t1303 + t1308;
  t1344 = t1050*t1178*t1076;
  t1348 = -1.*t1095*t1205*t1076;
  t1349 = t1344 + t1348;
  t1416 = -1.*var1[17];
  t1420 = 0.226893 + t1416;
  t1424 = Cos(t1420);
  t1425 = -1.*t1424;
  t1433 = 1. + t1425;
  t1441 = Sin(t1420);
  t1562 = Cos(var1[20]);
  t1568 = -1.*t1562;
  t1569 = 1. + t1568;
  t1579 = Sin(var1[20]);
  t1440 = -0.70544*t1433;
  t1442 = -0.01841*t1441;
  t1450 = t1440 + t1442;
  t1456 = t1450*t1334;
  t1461 = 0.01841*t1433;
  t1463 = -0.70544*t1441;
  t1464 = t1461 + t1463;
  t1476 = t1464*t1349;
  t1576 = 0.07769774964800001*t1569;
  t1480 = t1441*t1334;
  t1488 = t1424*t1349;
  t1505 = t1480 + t1488;
  t1634 = -0.0004284921280000001*t1569;
  t1608 = 0.005481192614*t1569;
  t1513 = t1424*t1334;
  t1514 = -1.*t1441*t1349;
  t1531 = t1513 + t1514;
  t1663 = -0.077936*t1579;
  t1660 = -0.996943*t1579;
  t1580 = -0.005498*t1579;
  t1671 = -0.005481192614*t1569;
  t1609 = 0.077936*t1579;
  t1719 = -0.07769774964800001*t1569;
  t1630 = 0.005498*t1579;
  t1676 = 0.0004284921280000001*t1569;
  t1643 = 0.996943*t1579;
  t1906 = Cos(var1[21]);
  t1914 = -1.*t1906;
  t1915 = 1. + t1914;
  t1927 = Sin(var1[21]);
  t2152 = 0.07769774964800001*t1579;
  t2262 = t976*t64*t78;
  t2263 = -1.*t912*t1002;
  t2265 = t2262 + t2263;
  t2272 = t741*t850;
  t2273 = t772*t1043;
  t2274 = t2272 + t2273;
  t2267 = t1095*t2265;
  t2275 = t1050*t2274;
  t2278 = t2267 + t2275;
  t2283 = t1050*t2265;
  t2286 = -1.*t1095*t2274;
  t2287 = t2283 + t2286;
  t2222 = -0.0004284921280000001*t1579;
  t2108 = 0.005481192614*t1579;
  t2281 = -1.*t1205*t2278;
  t2295 = t1178*t2287;
  t2297 = t2281 + t2295;
  t2309 = t1178*t2278;
  t2310 = t1205*t2287;
  t2312 = t2309 + t2310;
  t2130 = -0.005498*t1562;
  t2298 = t1441*t2297;
  t2317 = t1424*t2312;
  t2321 = t2298 + t2317;
  t2065 = 0.077936*t1562;
  t2390 = t1424*t2297;
  t2391 = -1.*t1441*t2312;
  t2394 = t2390 + t2391;
  t2249 = 0.005498*t1562;
  t2423 = -0.07769774964800001*t1579;
  t2218 = 0.996943*t1562;
  t2353 = -0.077936*t1562;
  t2436 = -0.005481192614*t1579;
  t2332 = -0.996943*t1562;
  t2463 = 0.0004284921280000001*t1579;
  t1959 = -1.11344*t1927;
  t2602 = 0.135*t976*t64*t78;
  t2606 = -0.135*t912*t1002;
  t2607 = -1.*t64*t78*t912;
  t2610 = -1.*t976*t1002;
  t2616 = t2607 + t2610;
  t2650 = -1.*t741;
  t2655 = 1. + t2650;
  t2656 = -0.135*t2655;
  t2658 = 0.049*t772;
  t2666 = t2656 + t2658;
  t2674 = t2666*t2265;
  t2696 = -0.09*t1086;
  t2699 = 0.049*t1095;
  t2706 = t2696 + t2699;
  t2707 = t2706*t2616;
  t2713 = t772*t1103*t2265;
  t2714 = t1095*t2616;
  t2715 = t1050*t772*t2265;
  t2719 = t2714 + t2715;
  t2721 = t1050*t2616;
  t2722 = -1.*t772*t1095*t2265;
  t2723 = t2721 + t2722;
  t2733 = t1212*t2719;
  t2734 = t1282*t2723;
  t2736 = -1.*t1205*t2719;
  t2737 = t1178*t2723;
  t2743 = t2736 + t2737;
  t2754 = t1178*t2719;
  t2755 = t1205*t2723;
  t2757 = t2754 + t2755;
  t1558 = 2.1934241414728571e-7*var1[20];
  t1573 = -0.000033783761634830594*t1569;
  t1599 = t1576 + t1580;
  t1601 = -0.021877537552*t1599;
  t1610 = t1608 + t1609;
  t1611 = -0.6934341012630001*t1610;
  t1619 = t1558 + t1573 + t1601 + t1611;
  t2789 = t1450*t2743;
  t2792 = t1464*t2757;
  t1626 = -1.7147089040178687e-8*var1[20];
  t1628 = -0.021744644052735636*t1569;
  t1631 = t1576 + t1630;
  t1632 = -0.005534467322*t1631;
  t1651 = t1634 + t1643;
  t1652 = -0.6934341012630001*t1651;
  t1654 = t1626 + t1628 + t1632 + t1652;
  t2794 = t1441*t2743;
  t2798 = t1424*t2757;
  t2799 = t2794 + t2798;
  t1658 = -1.2096424700126054e-9*var1[20];
  t1659 = -0.6934128581485427*t1569;
  t1661 = t1634 + t1660;
  t1662 = -0.021877537552*t1661;
  t1667 = t1608 + t1663;
  t1668 = -0.005534467322*t1667;
  t1669 = t1658 + t1659 + t1662 + t1668;
  t2806 = t1424*t2743;
  t2808 = -1.*t1441*t2757;
  t2810 = t2806 + t2808;
  t1672 = t1671 + t1663;
  t1678 = t1676 + t1660;
  t1681 = -0.999969365345*t1569;
  t1684 = 1. + t1681;
  t1708 = -0.006104248100000001*t1569;
  t1712 = 1. + t1708;
  t1730 = t1719 + t1580;
  t1733 = t1671 + t1609;
  t1785 = t1719 + t1630;
  t1821 = -0.993925573253*t1569;
  t1829 = 1. + t1821;
  t1835 = t1676 + t1643;
  t1918 = -0.02159*t1915;
  t1988 = t1918 + t1959;
  t1996 = -1.11344*t1915;
  t1997 = 0.02159*t1927;
  t1998 = t1996 + t1997;
  t2954 = 0.049*t1050;
  t2955 = t2954 + t1099;
  t2961 = t2955*t2265;
  t2964 = -0.09*t1050;
  t2967 = -0.049*t1095;
  t2970 = t2964 + t2967;
  t2971 = t2970*t2274;
  t2972 = -1.*t1095*t2265;
  t2974 = -1.*t1050*t2274;
  t2978 = t2972 + t2974;
  t2997 = t1282*t2978;
  t3000 = t1212*t2287;
  t3001 = t1205*t2978;
  t3002 = t3001 + t2295;
  t3005 = t1178*t2978;
  t3010 = -1.*t1205*t2287;
  t3012 = t3005 + t3010;
  t3049 = t1464*t3002;
  t3050 = t1450*t3012;
  t3063 = -1.*t1441*t3002;
  t3074 = t1424*t3012;
  t3075 = t3063 + t3074;
  t3082 = t1424*t3002;
  t3090 = t1441*t3012;
  t3091 = t3082 + t3090;
  t3208 = -0.21*t1178;
  t3214 = -0.049*t1205;
  t3224 = t3208 + t3214;
  t3232 = t3224*t2278;
  t3235 = 0.049*t1178;
  t3238 = t3235 + t1206;
  t3240 = t3238*t2287;
  t3248 = -1.*t1178*t2278;
  t3257 = t3248 + t3010;
  t3294 = t1464*t2297;
  t3300 = 0.01841*t1424;
  t3305 = 0.70544*t1441;
  t3306 = t3300 + t3305;
  t3308 = t3306*t2297;
  t3309 = t1450*t3257;
  t3314 = 0.70544*t1424;
  t3315 = t3314 + t1442;
  t3316 = t3315*t2312;
  t3317 = t1424*t3257;
  t3319 = t3317 + t2317;
  t3322 = t1441*t3257;
  t3324 = t1441*t2312;
  t3330 = t3322 + t3324;
  t3444 = Cos(var1[7]);
  t3448 = Sin(var1[7]);
  t3455 = Cos(var1[6]);
  t3456 = t3455*t1002;
  t3457 = Sin(var1[6]);
  t3459 = t64*t78*t3457;
  t3461 = t3456 + t3459;
  t3445 = 0.135*t3444;
  t3452 = -0.049*t3448;
  t3453 = t3445 + t3452;
  t3454 = t850*t3453;
  t3463 = 0.049*t3444;
  t3465 = 0.135*t3448;
  t3466 = t3463 + t3465;
  t3468 = t3461*t3466;
  t3469 = t3444*t3461;
  t3470 = -1.*t850*t3448;
  t3471 = t3469 + t3470;
  t3474 = -1.*t3444*t850;
  t3475 = -1.*t3461*t3448;
  t3476 = t3474 + t3475;
  t3483 = Cos(var1[8]);
  t3489 = Sin(var1[8]);
  t3486 = -1.*t3483;
  t3487 = 1. + t3486;
  t3488 = -0.049*t3487;
  t3492 = -0.09*t3489;
  t3494 = t3488 + t3492;
  t3495 = t3471*t3494;
  t3503 = Cos(var1[9]);
  t3504 = -1.*t3503;
  t3505 = 1. + t3504;
  t3509 = Sin(var1[9]);
  t3507 = -0.049*t3505;
  t3510 = -0.21*t3509;
  t3511 = t3507 + t3510;
  t3512 = t3483*t3511*t3471;
  t3515 = -0.21*t3505;
  t3517 = 0.049*t3509;
  t3518 = t3515 + t3517;
  t3524 = -1.*t3518*t3471*t3489;
  t3526 = -1.*t3483*t3509*t3471;
  t3529 = -1.*t3503*t3471*t3489;
  t3532 = t3526 + t3529;
  t3544 = Cos(var1[10]);
  t3546 = -1.*t3544;
  t3550 = 1. + t3546;
  t3552 = Sin(var1[10]);
  t3534 = t3503*t3483*t3471;
  t3536 = -1.*t3509*t3471*t3489;
  t3537 = t3534 + t3536;
  t3551 = -0.27068*t3550;
  t3553 = 0.00159*t3552;
  t3555 = t3551 + t3553;
  t3556 = t3555*t3532;
  t3559 = -0.00159*t3550;
  t3560 = -0.27068*t3552;
  t3562 = t3559 + t3560;
  t3564 = t3562*t3537;
  t3565 = t3552*t3532;
  t3566 = t3544*t3537;
  t3567 = t3565 + t3566;
  t3598 = Cos(var1[11]);
  t3605 = -1.*t3598;
  t3606 = 1. + t3605;
  t3612 = Sin(var1[11]);
  t3573 = t3544*t3532;
  t3576 = -1.*t3552*t3537;
  t3589 = t3573 + t3576;
  t3671 = Cos(var1[12]);
  t3680 = -1.*t3671;
  t3681 = 1. + t3680;
  t3691 = Sin(var1[12]);
  t3609 = 0.01841*t3606;
  t3616 = -0.70544*t3612;
  t3618 = t3609 + t3616;
  t3626 = t3618*t3567;
  t3628 = -0.70544*t3606;
  t3635 = -0.01841*t3612;
  t3636 = t3628 + t3635;
  t3637 = t3636*t3589;
  t3686 = -0.005481192614*t3681;
  t3640 = -1.*t3612*t3567;
  t3644 = t3598*t3589;
  t3645 = t3640 + t3644;
  t3698 = -0.07769774964800001*t3681;
  t3721 = -0.0004284921280000001*t3681;
  t3650 = t3598*t3567;
  t3651 = t3612*t3589;
  t3652 = t3650 + t3651;
  t3753 = -0.005498*t3691;
  t3761 = 0.996943*t3691;
  t3734 = 0.077936*t3691;
  t3784 = 0.0004284921280000001*t3681;
  t3723 = -0.996943*t3691;
  t3812 = 0.005481192614*t3681;
  t3692 = -0.077936*t3691;
  t3773 = 0.07769774964800001*t3681;
  t3699 = 0.005498*t3691;
  t3875 = Cos(var1[13]);
  t3882 = -1.*t3875;
  t3889 = 1. + t3882;
  t3893 = Sin(var1[13]);
  t3990 = -0.005481192614*t3691;
  t4046 = t64*t78*t3455;
  t4047 = -1.*t1002*t3457;
  t4049 = t4046 + t4047;
  t4033 = t3444*t850;
  t4036 = t3461*t3448;
  t4038 = t4033 + t4036;
  t4043 = t3483*t4038;
  t4050 = t4049*t3489;
  t4052 = t4043 + t4050;
  t4059 = t3483*t4049;
  t4060 = -1.*t4038*t3489;
  t4063 = t4059 + t4060;
  t4057 = -1.*t3509*t4052;
  t4068 = t3503*t4063;
  t4070 = t4057 + t4068;
  t4074 = t3503*t4052;
  t4075 = t3509*t4063;
  t4077 = t4074 + t4075;
  t3976 = -0.07769774964800001*t3691;
  t4017 = -0.0004284921280000001*t3691;
  t4073 = t3552*t4070;
  t4078 = t3544*t4077;
  t4082 = t4073 + t4078;
  t4098 = t3544*t4070;
  t4102 = -1.*t3552*t4077;
  t4103 = t4098 + t4102;
  t4004 = 0.077936*t3671;
  t4096 = -1.*t3612*t4082;
  t4105 = t3598*t4103;
  t4107 = t4096 + t4105;
  t4016 = -0.996943*t3671;
  t4145 = t3598*t4082;
  t4151 = t3612*t4103;
  t4161 = t4145 + t4151;
  t3988 = -0.077936*t3671;
  t4169 = 0.005481192614*t3691;
  t3975 = 0.005498*t3671;
  t4113 = -0.005498*t3671;
  t4201 = 0.07769774964800001*t3691;
  t4127 = 0.996943*t3671;
  t4180 = 0.0004284921280000001*t3691;
  t3902 = -1.11344*t3893;
  t4281 = -0.135*t64*t78*t3455;
  t4284 = 0.135*t1002*t3457;
  t4285 = -1.*t3455*t1002;
  t4286 = -1.*t64*t78*t3457;
  t4287 = t4285 + t4286;
  t4300 = -1.*t3444;
  t4301 = 1. + t4300;
  t4305 = 0.135*t4301;
  t4306 = 0.049*t3448;
  t4310 = t4305 + t4306;
  t4312 = t4049*t4310;
  t4325 = t4049*t3448*t3494;
  t4326 = -0.09*t3487;
  t4328 = 0.049*t3489;
  t4330 = t4326 + t4328;
  t4332 = t4287*t4330;
  t4333 = t3483*t4049*t3448;
  t4336 = t4287*t3489;
  t4338 = t4333 + t4336;
  t4342 = t3483*t4287;
  t4347 = -1.*t4049*t3448*t3489;
  t4352 = t4342 + t4347;
  t4361 = t3511*t4338;
  t4363 = t3518*t4352;
  t4364 = -1.*t3509*t4338;
  t4366 = t3503*t4352;
  t4367 = t4364 + t4366;
  t4373 = t3503*t4338;
  t4376 = t3509*t4352;
  t4379 = t4373 + t4376;
  t4396 = t3555*t4367;
  t4405 = t3562*t4379;
  t4407 = t3552*t4367;
  t4409 = t3544*t4379;
  t4411 = t4407 + t4409;
  t4415 = t3544*t4367;
  t4418 = -1.*t3552*t4379;
  t4421 = t4415 + t4418;
  t3669 = -2.1934241414728571e-7*var1[12];
  t3683 = 0.000033783761634830594*t3681;
  t3693 = t3686 + t3692;
  t3696 = -0.6934341012630001*t3693;
  t3701 = t3698 + t3699;
  t3704 = -0.021877537552*t3701;
  t3705 = t3669 + t3683 + t3696 + t3704;
  t4433 = t3618*t4411;
  t4435 = t3636*t4421;
  t3716 = -1.2096424700126054e-9*var1[12];
  t3720 = -0.6934128581485427*t3681;
  t3726 = t3721 + t3723;
  t3727 = -0.021877537552*t3726;
  t3738 = t3686 + t3734;
  t3740 = 0.005534467322*t3738;
  t3746 = t3716 + t3720 + t3727 + t3740;
  t4438 = -1.*t3612*t4411;
  t4439 = t3598*t4421;
  t4443 = t4438 + t4439;
  t3751 = -1.7147089040178687e-8*var1[12];
  t3752 = -0.021744644052735636*t3681;
  t3757 = t3698 + t3753;
  t3759 = 0.005534467322*t3757;
  t3763 = t3721 + t3761;
  t3764 = -0.6934341012630001*t3763;
  t3768 = t3751 + t3752 + t3759 + t3764;
  t4447 = t3598*t4411;
  t4449 = t3612*t4421;
  t4451 = t4447 + t4449;
  t3781 = t3773 + t3753;
  t3787 = t3784 + t3761;
  t3793 = -0.993925573253*t3681;
  t3794 = 1. + t3793;
  t3817 = t3812 + t3734;
  t3824 = -0.999969365345*t3681;
  t3826 = 1. + t3824;
  t3828 = t3784 + t3723;
  t3838 = -0.006104248100000001*t3681;
  t3841 = 1. + t3838;
  t3849 = t3812 + t3692;
  t3854 = t3773 + t3699;
  t3891 = -1.11344*t3889;
  t3895 = 0.02159*t3893;
  t3896 = t3891 + t3895;
  t3901 = -0.02159*t3889;
  t3905 = t3901 + t3902;
  t131 = t64*t112*t124;
  t293 = -1.*t281*t87;
  t334 = t131 + t293;
  t4581 = -1.*t976;
  t4582 = 1. + t4581;
  t4583 = -0.135*t4582*t334;
  t4616 = t976*t2666*t334;
  t4617 = -0.049*t2655;
  t4620 = t4617 + t902;
  t4624 = t4620*t1002;
  t4631 = t976*t772*t334;
  t4632 = t741*t1002;
  t4635 = t4631 + t4632;
  t4638 = t976*t741*t334;
  t4639 = -1.*t772*t1002;
  t4640 = t4638 + t4639;
  t4648 = -1.*t912*t2706*t334;
  t4651 = t1103*t4635;
  t4653 = -1.*t912*t1095*t334;
  t4656 = t1050*t4635;
  t4664 = t4653 + t4656;
  t4668 = -1.*t1050*t912*t334;
  t4671 = -1.*t1095*t4635;
  t4674 = t4668 + t4671;
  t4694 = t1212*t4664;
  t4695 = t1282*t4674;
  t4698 = -1.*t1205*t4664;
  t4699 = t1178*t4674;
  t4703 = t4698 + t4699;
  t4707 = t1178*t4664;
  t4709 = t1205*t4674;
  t4711 = t4707 + t4709;
  t4750 = t1450*t4703;
  t4754 = t1464*t4711;
  t4758 = t1441*t4703;
  t4759 = t1424*t4711;
  t4769 = t4758 + t4759;
  t4774 = t1424*t4703;
  t4778 = -1.*t1441*t4711;
  t4780 = t4774 + t4778;
  t4587 = -0.0233*t1002;
  t4937 = -1.*t3455;
  t4938 = 1. + t4937;
  t4940 = 0.135*t4938*t334;
  t4948 = t3455*t334*t4310;
  t4954 = -0.049*t4301;
  t4963 = t4954 + t3465;
  t4966 = t1002*t4963;
  t4975 = t3455*t3444*t334;
  t4981 = -1.*t1002*t3448;
  t4985 = t4975 + t4981;
  t4967 = t3444*t1002;
  t4972 = t3455*t334*t3448;
  t4973 = t4967 + t4972;
  t5001 = t4973*t3494;
  t5004 = -1.*t334*t3457*t4330;
  t5009 = t3483*t4973;
  t5012 = -1.*t334*t3457*t3489;
  t5013 = t5009 + t5012;
  t5017 = -1.*t3483*t334*t3457;
  t5020 = -1.*t4973*t3489;
  t5023 = t5017 + t5020;
  t5035 = t3511*t5013;
  t5036 = t3518*t5023;
  t5037 = -1.*t3509*t5013;
  t5039 = t3503*t5023;
  t5044 = t5037 + t5039;
  t5049 = t3503*t5013;
  t5054 = t3509*t5023;
  t5055 = t5049 + t5054;
  t5069 = t3555*t5044;
  t5070 = t3562*t5055;
  t5073 = t3552*t5044;
  t5076 = t3544*t5055;
  t5078 = t5073 + t5076;
  t5096 = t3544*t5044;
  t5101 = -1.*t3552*t5055;
  t5102 = t5096 + t5101;
  t5130 = t3618*t5078;
  t5135 = t3636*t5102;
  t5145 = -1.*t3612*t5078;
  t5147 = t3598*t5102;
  t5148 = t5145 + t5147;
  t5152 = t3598*t5078;
  t5155 = t3612*t5102;
  t5157 = t5152 + t5155;
  t5293 = 0.049*t3483;
  t5294 = t5293 + t3492;
  t5297 = t4049*t5294;
  t5298 = -0.09*t3483;
  t5306 = -0.049*t3489;
  t5308 = t5298 + t5306;
  t5309 = t4038*t5308;
  t5318 = -1.*t3483*t4038;
  t5321 = -1.*t4049*t3489;
  t5322 = t5318 + t5321;
  t5328 = t3518*t5322;
  t5330 = t3511*t4063;
  t5331 = t3509*t5322;
  t5334 = t5331 + t4068;
  t5336 = t3503*t5322;
  t5337 = -1.*t3509*t4063;
  t5339 = t5336 + t5337;
  t5346 = t3562*t5334;
  t5350 = t3555*t5339;
  t5351 = -1.*t3552*t5334;
  t5352 = t3544*t5339;
  t5354 = t5351 + t5352;
  t5359 = t3544*t5334;
  t5361 = t3552*t5339;
  t5362 = t5359 + t5361;
  t5370 = t3636*t5354;
  t5371 = t3618*t5362;
  t5372 = t3612*t5354;
  t5373 = t3598*t5362;
  t5374 = t5372 + t5373;
  t5378 = t3598*t5354;
  t5379 = -1.*t3612*t5362;
  t5382 = t5378 + t5379;
  t5452 = -0.21*t3503;
  t5454 = -0.049*t3509;
  t5456 = t5452 + t5454;
  t5458 = t5456*t4052;
  t5459 = 0.049*t3503;
  t5460 = t5459 + t3510;
  t5461 = t5460*t4063;
  t5463 = -1.*t3503*t4052;
  t5464 = t5463 + t5337;
  t5470 = t3562*t4070;
  t5471 = t3555*t5464;
  t5473 = -1.*t3552*t4070;
  t5477 = t3544*t5464;
  t5481 = t5473 + t5477;
  t5483 = t3552*t5464;
  t5486 = t4098 + t5483;
  t5494 = t3636*t5481;
  t5495 = t3618*t5486;
  t5499 = t3612*t5481;
  t5500 = t3598*t5486;
  t5501 = t5499 + t5500;
  t5504 = t3598*t5481;
  t5505 = -1.*t3612*t5486;
  t5506 = t5504 + t5505;
  t5581 = 0.00159*t3544;
  t5582 = t5581 + t3560;
  t5583 = t5582*t4070;
  t5584 = -0.27068*t3544;
  t5585 = -0.00159*t3552;
  t5586 = t5584 + t5585;
  t5587 = t5586*t4077;
  t5588 = -1.*t3544*t4077;
  t5589 = t5473 + t5588;
  t5607 = t3636*t5589;
  t5610 = t3618*t4103;
  t5611 = t3612*t5589;
  t5615 = t5611 + t4105;
  t5626 = t3598*t5589;
  t5627 = -1.*t3612*t4103;
  t5629 = t5626 + t5627;
  t5722 = -0.70544*t3598;
  t5724 = 0.01841*t3612;
  t5726 = t5722 + t5724;
  t5733 = t5726*t4082;
  t5734 = -0.01841*t3598;
  t5737 = t5734 + t3616;
  t5738 = t5737*t4103;
  t5745 = -1.*t3598*t4082;
  t5747 = t5745 + t5627;
  t4260 = -1.*t3893*t4107;
  t4270 = t3875*t4107;
  t341 = t64*t112;
  t351 = -1.*t281*t124*t87;
  t440 = t341 + t351;
  t5798 = t112*t281*t124;
  t5800 = t64*t87;
  t5802 = t5798 + t5800;
  t5812 = -0.135*t78*t912*t281;
  t5817 = -0.135*t4582*t440;
  t5819 = -1.*t78*t912*t281;
  t5820 = t976*t440;
  t5821 = t5819 + t5820;
  t5835 = -1.*t976*t78*t281;
  t5836 = -1.*t912*t440;
  t5837 = t5835 + t5836;
  t5842 = t4620*t5802;
  t5844 = t2666*t5821;
  t5847 = -1.*t772*t5802;
  t5848 = t741*t5821;
  t5850 = t5847 + t5848;
  t5854 = t741*t5802;
  t5855 = t772*t5821;
  t5856 = t5854 + t5855;
  t5867 = t2706*t5837;
  t5872 = t1103*t5856;
  t5873 = t1095*t5837;
  t5876 = t1050*t5856;
  t5879 = t5873 + t5876;
  t5881 = t1050*t5837;
  t5883 = -1.*t1095*t5856;
  t5892 = t5881 + t5883;
  t5900 = t1212*t5879;
  t5902 = t1282*t5892;
  t5903 = -1.*t1205*t5879;
  t5904 = t1178*t5892;
  t5905 = t5903 + t5904;
  t5910 = t1178*t5879;
  t5914 = t1205*t5892;
  t5922 = t5910 + t5914;
  t5943 = t1450*t5905;
  t5944 = t1464*t5922;
  t5945 = t1441*t5905;
  t5950 = t1424*t5922;
  t5951 = t5945 + t5950;
  t5953 = t1424*t5905;
  t5958 = -1.*t1441*t5922;
  t5960 = t5953 + t5958;
  t5813 = -0.0233*t5802;
  t6044 = 0.135*t4938*t440;
  t6045 = 0.135*t78*t281*t3457;
  t6062 = -1.*t78*t3455*t281;
  t6065 = -1.*t440*t3457;
  t6067 = t6062 + t6065;
  t6053 = t3455*t440;
  t6055 = -1.*t78*t281*t3457;
  t6058 = t6053 + t6055;
  t6082 = t6058*t4310;
  t6088 = t5802*t4963;
  t6098 = t3444*t6058;
  t6100 = -1.*t5802*t3448;
  t6101 = t6098 + t6100;
  t6107 = t3444*t5802;
  t6109 = t6058*t3448;
  t6111 = t6107 + t6109;
  t6122 = t6111*t3494;
  t6123 = t6067*t4330;
  t6126 = t3483*t6111;
  t6133 = t6067*t3489;
  t6135 = t6126 + t6133;
  t6137 = t3483*t6067;
  t6142 = -1.*t6111*t3489;
  t6143 = t6137 + t6142;
  t6153 = t3511*t6135;
  t6156 = t3518*t6143;
  t6157 = -1.*t3509*t6135;
  t6159 = t3503*t6143;
  t6161 = t6157 + t6159;
  t6165 = t3503*t6135;
  t6169 = t3509*t6143;
  t6170 = t6165 + t6169;
  t6189 = t3555*t6161;
  t6194 = t3562*t6170;
  t6195 = t3552*t6161;
  t6205 = t3544*t6170;
  t6210 = t6195 + t6205;
  t6212 = t3544*t6161;
  t6214 = -1.*t3552*t6170;
  t6215 = t6212 + t6214;
  t6230 = t3618*t6210;
  t6234 = t3636*t6215;
  t6238 = -1.*t3612*t6210;
  t6242 = t3598*t6215;
  t6244 = t6238 + t6242;
  t6250 = t3598*t6210;
  t6251 = t3612*t6215;
  t6265 = t6250 + t6251;
  t6368 = -0.135*t64*t912*t124;
  t6369 = -0.135*t4582*t64*t78*t87;
  t6370 = -1.*t64*t912*t124;
  t6374 = t976*t64*t78*t87;
  t6375 = t6370 + t6374;
  t6379 = -1.*t976*t64*t124;
  t6380 = -1.*t64*t78*t912*t87;
  t6383 = t6379 + t6380;
  t6388 = -1.*t64*t78*t112*t4620;
  t6391 = t2666*t6375;
  t6393 = t64*t78*t112*t772;
  t6394 = t741*t6375;
  t6397 = t6393 + t6394;
  t6399 = -1.*t741*t64*t78*t112;
  t6401 = t772*t6375;
  t6402 = t6399 + t6401;
  t6408 = t2706*t6383;
  t6415 = t1103*t6402;
  t6416 = t1095*t6383;
  t6417 = t1050*t6402;
  t6419 = t6416 + t6417;
  t6425 = t1050*t6383;
  t6428 = -1.*t1095*t6402;
  t6429 = t6425 + t6428;
  t6440 = t1212*t6419;
  t6441 = t1282*t6429;
  t6442 = -1.*t1205*t6419;
  t6449 = t1178*t6429;
  t6450 = t6442 + t6449;
  t6454 = t1178*t6419;
  t6461 = t1205*t6429;
  t6466 = t6454 + t6461;
  t6487 = t1450*t6450;
  t6488 = t1464*t6466;
  t6491 = t1441*t6450;
  t6496 = t1424*t6466;
  t6497 = t6491 + t6496;
  t6500 = t1424*t6450;
  t6509 = -1.*t1441*t6466;
  t6511 = t6500 + t6509;
  t6367 = 0.0233*t64*t78*t112;
  t6625 = 0.135*t64*t78*t4938*t87;
  t6630 = 0.135*t64*t124*t3457;
  t6639 = -1.*t64*t3455*t124;
  t6640 = -1.*t64*t78*t87*t3457;
  t6641 = t6639 + t6640;
  t6631 = t64*t78*t3455*t87;
  t6634 = -1.*t64*t124*t3457;
  t6635 = t6631 + t6634;
  t6648 = t6635*t4310;
  t6650 = -1.*t64*t78*t112*t4963;
  t6652 = t3444*t6635;
  t6654 = t64*t78*t112*t3448;
  t6656 = t6652 + t6654;
  t6659 = -1.*t64*t78*t112*t3444;
  t6660 = t6635*t3448;
  t6661 = t6659 + t6660;
  t6669 = t6661*t3494;
  t6670 = t6641*t4330;
  t6676 = t3483*t6661;
  t6677 = t6641*t3489;
  t6679 = t6676 + t6677;
  t6683 = t3483*t6641;
  t6684 = -1.*t6661*t3489;
  t6685 = t6683 + t6684;
  t6690 = t3511*t6679;
  t6691 = t3518*t6685;
  t6692 = -1.*t3509*t6679;
  t6695 = t3503*t6685;
  t6696 = t6692 + t6695;
  t6702 = t3503*t6679;
  t6703 = t3509*t6685;
  t6704 = t6702 + t6703;
  t6718 = t3555*t6696;
  t6720 = t3562*t6704;
  t6722 = t3552*t6696;
  t6723 = t3544*t6704;
  t6728 = t6722 + t6723;
  t6732 = t3544*t6696;
  t6735 = -1.*t3552*t6704;
  t6740 = t6732 + t6735;
  t6749 = t3618*t6728;
  t6750 = t3636*t6740;
  t6751 = -1.*t3612*t6728;
  t6753 = t3598*t6740;
  t6754 = t6751 + t6753;
  t6757 = t3598*t6728;
  t6759 = t3612*t6740;
  t6760 = t6757 + t6759;
  t6854 = -1.*t912*t281;
  t6855 = t2262 + t6854;
  t6849 = -1.*t976*t281;
  t6852 = t2607 + t6849;
  t6861 = t1095*t6852;
  t6862 = t1050*t772*t6855;
  t6866 = t6861 + t6862;
  t6868 = t1050*t6852;
  t6869 = -1.*t772*t1095*t6855;
  t6870 = t6868 + t6869;
  t6874 = -1.*t1205*t6866;
  t6875 = t1178*t6870;
  t6877 = t6874 + t6875;
  t6879 = t1178*t6866;
  t6881 = t1205*t6870;
  t6883 = t6879 + t6881;
  t6887 = t1441*t6877;
  t6888 = t1424*t6883;
  t6890 = t6887 + t6888;
  t6896 = t1424*t6877;
  t6898 = -1.*t1441*t6883;
  t6900 = t6896 + t6898;
  t6928 = t976*t281;
  t6929 = t938 + t6928;
  t6945 = t741*t6929;
  t6947 = t64*t772*t124;
  t6948 = t6945 + t6947;
  t6952 = -1.*t1178*t1095*t6948;
  t6956 = -1.*t1050*t1205*t6948;
  t6957 = t6952 + t6956;
  t6959 = t1050*t1178*t6948;
  t6960 = -1.*t1095*t1205*t6948;
  t6961 = t6959 + t6960;
  t6967 = t1441*t6957;
  t6969 = t1424*t6961;
  t6970 = t6967 + t6969;
  t6973 = t1424*t6957;
  t6974 = -1.*t1441*t6961;
  t6976 = t6973 + t6974;
  t7011 = t772*t6929;
  t7012 = -1.*t741*t64*t124;
  t7015 = t7011 + t7012;
  t7017 = -1.*t1095*t6855;
  t7018 = -1.*t1050*t7015;
  t7019 = t7017 + t7018;
  t7023 = t1050*t6855;
  t7025 = -1.*t1095*t7015;
  t7026 = t7023 + t7025;
  t7029 = t1205*t7019;
  t7031 = t1178*t7026;
  t7034 = t7029 + t7031;
  t7041 = t1178*t7019;
  t7042 = -1.*t1205*t7026;
  t7043 = t7041 + t7042;
  t7049 = -1.*t1441*t7034;
  t7052 = t1424*t7043;
  t7054 = t7049 + t7052;
  t7056 = t1424*t7034;
  t7057 = t1441*t7043;
  t7058 = t7056 + t7057;
  t2535 = -1.11344*t1906;
  t2536 = -0.02159*t1927;
  t2539 = t2535 + t2536;
  t7093 = t1095*t6855;
  t7095 = t1050*t7015;
  t7100 = t7093 + t7095;
  t2544 = 0.02159*t1906;
  t2547 = t2544 + t1959;
  t7102 = -1.*t1205*t7100;
  t7103 = t7102 + t7031;
  t7106 = t1178*t7100;
  t7107 = t1205*t7026;
  t7108 = t7106 + t7107;
  t7104 = t1441*t7103;
  t7109 = t1424*t7108;
  t7110 = t7104 + t7109;
  t7113 = t1424*t7103;
  t7114 = -1.*t1441*t7108;
  t7115 = t7113 + t7114;
  t7159 = -1.*t1178*t7100;
  t7162 = t7159 + t7042;
  t7165 = t1424*t7162;
  t7167 = t7165 + t7109;
  t7175 = t1441*t7162;
  t7177 = t1441*t7108;
  t7181 = t7175 + t7177;
  t7221 = -1.*t741*t64*t78;
  t7222 = -1.*t64*t912*t772*t124;
  t7223 = t7221 + t7222;
  t7225 = -1.*t976*t64*t1095*t124;
  t7226 = t1050*t7223;
  t7227 = t7225 + t7226;
  t7233 = -1.*t976*t1050*t64*t124;
  t7235 = -1.*t1095*t7223;
  t7237 = t7233 + t7235;
  t7241 = -1.*t1205*t7227;
  t7242 = t1178*t7237;
  t7244 = t7241 + t7242;
  t7248 = t1178*t7227;
  t7249 = t1205*t7237;
  t7251 = t7248 + t7249;
  t7253 = t1441*t7244;
  t7254 = t1424*t7251;
  t7255 = t7253 + t7254;
  t7258 = t1424*t7244;
  t7260 = -1.*t1441*t7251;
  t7261 = t7258 + t7260;
  t7288 = t976*t64;
  t7289 = t7288 + t5819;
  t7282 = -1.*t64*t912;
  t7283 = t7282 + t5835;
  t7293 = t772*t7289;
  t7294 = t741*t281*t124;
  t7295 = t7293 + t7294;
  t7308 = t1095*t7283;
  t7309 = t1050*t7295;
  t7315 = t7308 + t7309;
  t7317 = t1050*t7283;
  t7320 = -1.*t1095*t7295;
  t7321 = t7317 + t7320;
  t7323 = -1.*t1205*t7315;
  t7324 = t1178*t7321;
  t7326 = t7323 + t7324;
  t7329 = t1178*t7315;
  t7330 = t1205*t7321;
  t7333 = t7329 + t7330;
  t7338 = t1441*t7326;
  t7341 = t1424*t7333;
  t7342 = t7338 + t7341;
  t7344 = t1424*t7326;
  t7345 = -1.*t1441*t7333;
  t7346 = t7344 + t7345;
  t7389 = -1.*t78*t772;
  t7391 = t741*t912*t124;
  t7393 = t7389 + t7391;
  t7416 = -1.*t1178*t1095*t7393;
  t7417 = -1.*t1050*t1205*t7393;
  t7418 = t7416 + t7417;
  t7421 = t1050*t1178*t7393;
  t7424 = -1.*t1095*t1205*t7393;
  t7426 = t7421 + t7424;
  t7428 = t1441*t7418;
  t7429 = t1424*t7426;
  t7431 = t7428 + t7429;
  t7434 = t1424*t7418;
  t7436 = -1.*t1441*t7426;
  t7437 = t7434 + t7436;
  t7483 = t976*t1050*t772*t124;
  t7484 = -1.*t912*t1095*t124;
  t7489 = t7483 + t7484;
  t7493 = -1.*t1050*t912*t124;
  t7494 = -1.*t976*t772*t1095*t124;
  t7495 = t7493 + t7494;
  t7504 = -1.*t1205*t7489;
  t7505 = t1178*t7495;
  t7506 = t7504 + t7505;
  t7512 = t1178*t7489;
  t7513 = t1205*t7495;
  t7517 = t7512 + t7513;
  t7531 = t1441*t7506;
  t7532 = t1424*t7517;
  t7533 = t7531 + t7532;
  t7542 = t1424*t7506;
  t7547 = -1.*t1441*t7517;
  t7550 = t7542 + t7547;
  t7591 = t78*t912*t772;
  t7592 = -1.*t741*t124;
  t7594 = t7591 + t7592;
  t7610 = t976*t78*t1095;
  t7612 = t1050*t7594;
  t7614 = t7610 + t7612;
  t7620 = t976*t1050*t78;
  t7624 = -1.*t1095*t7594;
  t7625 = t7620 + t7624;
  t7629 = -1.*t1205*t7614;
  t7637 = t1178*t7625;
  t7638 = t7629 + t7637;
  t7641 = t1178*t7614;
  t7644 = t1205*t7625;
  t7645 = t7641 + t7644;
  t7654 = t1441*t7638;
  t7658 = t1424*t7645;
  t7660 = t7654 + t7658;
  t7665 = t1424*t7638;
  t7669 = -1.*t1441*t7645;
  t7670 = t7665 + t7669;
  t7709 = t741*t78;
  t7713 = t912*t772*t124;
  t7716 = t7709 + t7713;
  t7722 = -1.*t976*t1095*t124;
  t7725 = -1.*t1050*t7716;
  t7728 = t7722 + t7725;
  t7735 = t976*t1050*t124;
  t7739 = -1.*t1095*t7716;
  t7743 = t7735 + t7739;
  t7748 = t1205*t7728;
  t7749 = t1178*t7743;
  t7751 = t7748 + t7749;
  t7756 = t1178*t7728;
  t7758 = -1.*t1205*t7743;
  t7761 = t7756 + t7758;
  t7775 = -1.*t1441*t7751;
  t7778 = t1424*t7761;
  t7782 = t7775 + t7778;
  t7789 = t1424*t7751;
  t7791 = t1441*t7761;
  t7795 = t7789 + t7791;
  t7814 = t976*t1095*t124;
  t7816 = t1050*t7716;
  t7824 = t7814 + t7816;
  t7825 = -1.*t1205*t7824;
  t7827 = t7825 + t7749;
  t7830 = t1178*t7824;
  t7831 = t1205*t7743;
  t7832 = t7830 + t7831;
  t7829 = t1441*t7827;
  t7833 = t1424*t7832;
  t7839 = t7829 + t7833;
  t7842 = t1424*t7827;
  t7844 = -1.*t1441*t7832;
  t7847 = t7842 + t7844;
  t7888 = -1.*t1178*t7824;
  t7892 = t7888 + t7758;
  t7903 = t1424*t7892;
  t7908 = t7903 + t7833;
  t7917 = t1441*t7892;
  t7918 = t1441*t7832;
  t7919 = t7917 + t7918;
  t7960 = -1.*t976*t64;
  t7963 = t78*t912*t281;
  t7967 = t7960 + t7963;
  t7971 = -1.*t772*t1095*t7283;
  t7976 = t1050*t7967;
  t7984 = t7971 + t7976;
  t7991 = t1050*t772*t7283;
  t7992 = t1095*t7967;
  t7993 = t7991 + t7992;
  t8001 = t1205*t7984;
  t8002 = t1178*t7993;
  t8003 = t8001 + t8002;
  t8005 = t1178*t7984;
  t8007 = -1.*t1205*t7993;
  t8011 = t8005 + t8007;
  t8014 = -1.*t1441*t8003;
  t8015 = t1424*t8011;
  t8020 = t8014 + t8015;
  t8022 = t1424*t8003;
  t8023 = t1441*t8011;
  t8024 = t8022 + t8023;
  t7298 = t741*t7289;
  t7299 = -1.*t772*t281*t124;
  t7300 = t7298 + t7299;
  t8071 = -1.*t1178*t1095*t7300;
  t8074 = -1.*t1050*t1205*t7300;
  t8081 = t8071 + t8074;
  t8084 = t1050*t1178*t7300;
  t8085 = -1.*t1095*t1205*t7300;
  t8086 = t8084 + t8085;
  t8090 = t1441*t8081;
  t8091 = t1424*t8086;
  t8097 = t8090 + t8091;
  t8100 = t1424*t8081;
  t8102 = -1.*t1441*t8086;
  t8103 = t8100 + t8102;
  t6939 = t741*t64*t124;
  t8134 = -1.*t976*t64*t78;
  t8135 = t912*t281;
  t8136 = t8134 + t8135;
  t8144 = t772*t6852;
  t8149 = t8144 + t6939;
  t8171 = t1095*t8136;
  t8177 = t1050*t8149;
  t8179 = t8171 + t8177;
  t8188 = t1050*t8136;
  t8191 = -1.*t1095*t8149;
  t8194 = t8188 + t8191;
  t8201 = -1.*t1205*t8179;
  t8202 = t1178*t8194;
  t8203 = t8201 + t8202;
  t8207 = t1178*t8179;
  t8210 = t1205*t8194;
  t8220 = t8207 + t8210;
  t8222 = t1441*t8203;
  t8223 = t1424*t8220;
  t8224 = t8222 + t8223;
  t8227 = t1424*t8203;
  t8228 = -1.*t1441*t8220;
  t8236 = t8227 + t8228;
  t8276 = -1.*t1095*t7283;
  t8278 = -1.*t1050*t7295;
  t8279 = t8276 + t8278;
  t8287 = t1205*t8279;
  t8289 = t8287 + t7324;
  t8300 = t1178*t8279;
  t8301 = -1.*t1205*t7321;
  t8308 = t8300 + t8301;
  t8315 = -1.*t1441*t8289;
  t8317 = t1424*t8308;
  t8318 = t8315 + t8317;
  t8321 = t1424*t8289;
  t8323 = t1441*t8308;
  t8324 = t8321 + t8323;
  t7348 = -1.*t1927*t7342;
  t7351 = t1906*t7346;
  t7352 = t7348 + t7351;
  t8394 = -1.*t1178*t7315;
  t8396 = t8394 + t8301;
  t8405 = t1424*t8396;
  t8411 = t8405 + t7341;
  t8415 = t1441*t8396;
  t8416 = t1441*t7333;
  t8417 = t8415 + t8416;
  t8475 = t741*t78*t281;
  t8479 = t912*t772*t281*t124;
  t8480 = t8475 + t8479;
  t8485 = t976*t1095*t281*t124;
  t8486 = t1050*t8480;
  t8487 = t8485 + t8486;
  t8491 = t976*t1050*t281*t124;
  t8494 = -1.*t1095*t8480;
  t8498 = t8491 + t8494;
  t8507 = -1.*t1205*t8487;
  t8509 = t1178*t8498;
  t8510 = t8507 + t8509;
  t8517 = t1178*t8487;
  t8519 = t1205*t8498;
  t8521 = t8517 + t8519;
  t8524 = t1441*t8510;
  t8525 = t1424*t8521;
  t8528 = t8524 + t8525;
  t8533 = t1424*t8510;
  t8534 = -1.*t1441*t8521;
  t8535 = t8533 + t8534;
  t6586 = -1.*t1927*t6497;
  t6590 = t1906*t6511;
  t6591 = t6586 + t6590;
  t6596 = t1906*t6497;
  t6599 = t1927*t6511;
  t6602 = t6596 + t6599;
  t2004 = -1.*t1927*t1505;
  t2013 = t1906*t1531;
  t2028 = t2004 + t2013;
  t2044 = t1906*t1505;
  t2047 = t1927*t1531;
  t2048 = t2044 + t2047;
  t4912 = -1.*t1927*t4769;
  t4914 = t1906*t4780;
  t4917 = t4912 + t4914;
  t4922 = t1906*t4769;
  t4924 = t1927*t4780;
  t4927 = t4922 + t4924;
  t2890 = -1.*t1927*t2799;
  t2892 = t1906*t2810;
  t2899 = t2890 + t2892;
  t2910 = t1906*t2799;
  t2916 = t1927*t2810;
  t2927 = t2910 + t2916;
  t3184 = t1927*t3075;
  t3186 = t1906*t3091;
  t3187 = t3184 + t3186;
  t3192 = t1906*t3075;
  t3193 = -1.*t1927*t3091;
  t3194 = t3192 + t3193;
  t2557 = -1.*t1927*t2321;
  t2559 = t1906*t2394;
  t2565 = t2557 + t2559;
  t2567 = -1.*t1906*t2321;
  t2572 = -1.*t1927*t2394;
  t2581 = t2567 + t2572;
  t3401 = t1927*t3319;
  t3403 = t1906*t3330;
  t3407 = t3401 + t3403;
  t3410 = t1906*t3319;
  t3412 = -1.*t1927*t3330;
  t3423 = t3410 + t3412;
  t6015 = -1.*t1927*t5951;
  t6018 = t1906*t5960;
  t6020 = t6015 + t6018;
  t6024 = t1906*t5951;
  t6026 = t1927*t5960;
  t6035 = t6024 + t6026;
  p_output1[0]=t440*var2[3] + t64*t78*t87*var2[4] + t334*var2[5];
  p_output1[1]=(-1.*t112*t124*t281 - 1.*t64*t87)*var2[3] + t112*t64*t78*var2[4] + (-1.*t112*t281 - 1.*t124*t64*t87)*var2[5];
  p_output1[2]=var2[7];
  p_output1[3]=var2[2] + 0.0288377642750394*(1.965608*(t5812 + t5813 + t5817 - 0.1351*t5821 + 0.01793*t5837) + 1.316608*(t5812 + t5817 - 0.0343*t5837 + t5842 + t5844 - 0.135*t5850 - 0.049*t5856) + 5.79228*(t5812 + t5817 + t5842 + t5844 - 0.17081*t5850 + t5867 + t5872 - 0.04895*t5879 - 0.14946*t5892) + 1.03008*(t5812 + t5817 + t5842 + t5844 - 0.132168*t5850 + t5867 + t5872 + t5900 + t5902 - 0.255862*t5905 - 0.007761*t5922) + 0.763*(t5812 + t5817 + t5842 + t5844 - 0.130288*t5850 + t5867 + t5872 + t5900 + t5902 - 0.45406*t5905 - 0.000421*t5922) + 1.03*(t5812 + t5817 + t5842 + t5844 - 0.127241*t5850 + t5867 + t5872 + t5900 + t5902 + t5943 + t5944 - 0.004179*t5951 - 0.826587*t5960) + 0.126*(t5812 + t5817 + t5842 + t5844 + t1619*t5850 + t5867 + t5872 + t5900 + t5902 + t5943 + t5944 + t1654*t5951 + t1669*t5960 - 0.617968*(t1672*t5850 + t1678*t5951 + t1684*t5960) - 0.126739*(t1712*t5850 + t1730*t5951 + t1733*t5960) + 0.01889*(t1785*t5850 + t1829*t5951 + t1835*t5960)) + 0.1498*(t5812 + t5817 + t5842 + t5844 - 0.13064*t5850 + t5867 + t5872 + t5900 + t5902 + t5943 + t5944 + t1988*t5951 + t1998*t5960 - 1.11818*t6020 + 0.00589*t6035) + 1.965608*(t5813 + t6044 + t6045 + 0.1351*t6058 + 0.01793*t6067) + 1.316608*(t6044 + t6045 - 0.0343*t6067 + t6082 + t6088 + 0.135*t6101 - 0.049*t6111) + 5.79228*(t6044 + t6045 + t6082 + t6088 + 0.17081*t6101 + t6122 + t6123 - 0.04895*t6135 - 0.14946*t6143) + 1.03008*(t6044 + t6045 + t6082 + t6088 + 0.132168*t6101 + t6122 + t6123 + t6153 + t6156 - 0.255862*t6161 - 0.007761*t6170) + 0.763*(t6044 + t6045 + t6082 + t6088 + 0.130288*t6101 + t6122 + t6123 + t6153 + t6156 + t6189 + t6194 - 0.000421*t6210 - 0.45406*t6215) + 1.03*(t6044 + t6045 + t6082 + t6088 + 0.127241*t6101 + t6122 + t6123 + t6153 + t6156 + t6189 + t6194 + t6230 + t6234 - 0.826587*t6244 - 0.004179*t6265) + 0.126*(t6044 + t6045 + t6082 + t6088 + t3705*t6101 + t6122 + t6123 + t6153 + t6156 + t6189 + t6194 + t6230 + t6234 + t3746*t6244 + t3768*t6265 + 0.01889*(t3781*t6101 + t3787*t6244 + t3794*t6265) - 0.617968*(t3817*t6101 + t3826*t6244 + t3828*t6265) + 0.126739*(t3841*t6101 + t3849*t6244 + t3854*t6265)) + 0.1498*(t6044 + t6045 + t6082 + t6088 + 0.13064*t6101 + t6122 + t6123 + t6153 + t6156 + t6189 + t6194 + t6230 + t6234 + t3896*t6244 + t3905*t6265 + 0.00589*(t3893*t6244 + t3875*t6265) - 1.11818*(t3875*t6244 - 1.*t3893*t6265)) + 10.33*(0.000346*t440 + 0.05066*t5802 - 0.02841*t281*t78))*var2[3] + 0.0288377642750394*(1.965608*(t6367 + t6368 + t6369 - 0.1351*t6375 + 0.01793*t6383) + 1.316608*(t6368 + t6369 - 0.0343*t6383 + t6388 + t6391 - 0.135*t6397 - 0.049*t6402) + 5.79228*(t6368 + t6369 + t6388 + t6391 - 0.17081*t6397 + t6408 + t6415 - 0.04895*t6419 - 0.14946*t6429) + 1.03008*(t6368 + t6369 + t6388 + t6391 - 0.132168*t6397 + t6408 + t6415 + t6440 + t6441 - 0.255862*t6450 - 0.007761*t6466) + 0.763*(t6368 + t6369 + t6388 + t6391 - 0.130288*t6397 + t6408 + t6415 + t6440 + t6441 - 0.45406*t6450 - 0.000421*t6466) + 1.03*(t6368 + t6369 + t6388 + t6391 - 0.127241*t6397 + t6408 + t6415 + t6440 + t6441 + t6487 + t6488 - 0.004179*t6497 - 0.826587*t6511) + 0.126*(t6368 + t6369 + t6388 + t6391 + t1619*t6397 + t6408 + t6415 + t6440 + t6441 + t6487 + t6488 + t1654*t6497 + t1669*t6511 - 0.617968*(t1672*t6397 + t1678*t6497 + t1684*t6511) - 0.126739*(t1712*t6397 + t1730*t6497 + t1733*t6511) + 0.01889*(t1785*t6397 + t1829*t6497 + t1835*t6511)) + 0.1498*(t6368 + t6369 + t6388 + t6391 - 0.13064*t6397 + t6408 + t6415 + t6440 + t6441 + t6487 + t6488 + t1988*t6497 + t1998*t6511 - 1.11818*t6591 + 0.00589*t6602) + 1.965608*(t6367 + t6625 + t6630 + 0.1351*t6635 + 0.01793*t6641) + 1.316608*(t6625 + t6630 - 0.0343*t6641 + t6648 + t6650 + 0.135*t6656 - 0.049*t6661) + 5.79228*(t6625 + t6630 + t6648 + t6650 + 0.17081*t6656 + t6669 + t6670 - 0.04895*t6679 - 0.14946*t6685) + 1.03008*(t6625 + t6630 + t6648 + t6650 + 0.132168*t6656 + t6669 + t6670 + t6690 + t6691 - 0.255862*t6696 - 0.007761*t6704) + 0.763*(t6625 + t6630 + t6648 + t6650 + 0.130288*t6656 + t6669 + t6670 + t6690 + t6691 + t6718 + t6720 - 0.000421*t6728 - 0.45406*t6740) + 1.03*(t6625 + t6630 + t6648 + t6650 + 0.127241*t6656 + t6669 + t6670 + t6690 + t6691 + t6718 + t6720 + t6749 + t6750 - 0.826587*t6754 - 0.004179*t6760) + 0.126*(t6625 + t6630 + t6648 + t6650 + t3705*t6656 + t6669 + t6670 + t6690 + t6691 + t6718 + t6720 + t6749 + t6750 + t3746*t6754 + t3768*t6760 + 0.01889*(t3781*t6656 + t3787*t6754 + t3794*t6760) - 0.617968*(t3817*t6656 + t3826*t6754 + t3828*t6760) + 0.126739*(t3841*t6656 + t3849*t6754 + t3854*t6760)) + 0.1498*(t6625 + t6630 + t6648 + t6650 + 0.13064*t6656 + t6669 + t6670 + t6690 + t6691 + t6718 + t6720 + t6749 + t6750 + t3896*t6754 + t3905*t6760 + 0.00589*(t3893*t6754 + t3875*t6760) - 1.11818*(t3875*t6754 - 1.*t3893*t6760)) + 10.33*(-0.02841*t124*t64 - 0.05066*t112*t64*t78 + 0.000346*t64*t78*t87))*var2[4] + 0.0288377642750394*(10.33*(0.05066*t1002 + 0.000346*t334) + 5.79228*(t4583 + t4616 + t4624 - 0.17081*t4640 + t4648 + t4651 - 0.04895*t4664 - 0.14946*t4674) + 1.03008*(t4583 + t4616 + t4624 - 0.132168*t4640 + t4648 + t4651 + t4694 + t4695 - 0.255862*t4703 - 0.007761*t4711) + 0.763*(t4583 + t4616 + t4624 - 0.130288*t4640 + t4648 + t4651 + t4694 + t4695 - 0.45406*t4703 - 0.000421*t4711) + 1.03*(t4583 + t4616 + t4624 - 0.127241*t4640 + t4648 + t4651 + t4694 + t4695 + t4750 + t4754 - 0.004179*t4769 - 0.826587*t4780) + 0.126*(t4583 + t4616 + t4624 + t1619*t4640 + t4648 + t4651 + t4694 + t4695 + t4750 + t4754 + t1654*t4769 + t1669*t4780 - 0.617968*(t1672*t4640 + t1678*t4769 + t1684*t4780) - 0.126739*(t1712*t4640 + t1730*t4769 + t1733*t4780) + 0.01889*(t1785*t4640 + t1829*t4769 + t1835*t4780)) + 0.1498*(t4583 + t4616 + t4624 - 0.13064*t4640 + t4648 + t4651 + t4694 + t4695 + t4750 + t4754 + t1988*t4769 + t1998*t4780 - 1.11818*t4917 + 0.00589*t4927) + 1.965608*(0.1351*t334*t3455 - 0.01793*t334*t3457 + t4587 + t4940) + 1.316608*(0.0343*t334*t3457 + t4940 + t4948 + t4966 - 0.049*t4973 + 0.135*t4985) + 5.79228*(t4940 + t4948 + t4966 + 0.17081*t4985 + t5001 + t5004 - 0.04895*t5013 - 0.14946*t5023) + 1.03008*(t4940 + t4948 + t4966 + 0.132168*t4985 + t5001 + t5004 + t5035 + t5036 - 0.255862*t5044 - 0.007761*t5055) + 0.763*(t4940 + t4948 + t4966 + 0.130288*t4985 + t5001 + t5004 + t5035 + t5036 + t5069 + t5070 - 0.000421*t5078 - 0.45406*t5102) + 1.03*(t4940 + t4948 + t4966 + 0.127241*t4985 + t5001 + t5004 + t5035 + t5036 + t5069 + t5070 + t5130 + t5135 - 0.826587*t5148 - 0.004179*t5157) + 0.126*(t4940 + t4948 + t4966 + t3705*t4985 + t5001 + t5004 + t5035 + t5036 + t5069 + t5070 + t5130 + t5135 + t3746*t5148 + t3768*t5157 + 0.01889*(t3781*t4985 + t3787*t5148 + t3794*t5157) - 0.617968*(t3817*t4985 + t3826*t5148 + t3828*t5157) + 0.126739*(t3841*t4985 + t3849*t5148 + t3854*t5157)) + 0.1498*(t4940 + t4948 + t4966 + 0.13064*t4985 + t5001 + t5004 + t5035 + t5036 + t5069 + t5070 + t5130 + t5135 + t3896*t5148 + t3905*t5157 + 0.00589*(t3893*t5148 + t3875*t5157) - 1.11818*(t3875*t5148 - 1.*t3893*t5157)) + 1.316608*(t4583 + t4616 + t4624 - 0.049*t4635 - 0.135*t4640 + 0.0343*t334*t912) + 1.965608*(t4583 + t4587 - 0.01793*t334*t912 - 0.1351*t334*t976))*var2[5] + 0.0288377642750394*(1.965608*(0.1351*t4049 + t4281 + t4284 + 0.01793*t4287) + 1.316608*(0.135*t3444*t4049 - 0.049*t3448*t4049 + t4281 + t4284 - 0.0343*t4287 + t4312) + 5.79228*(0.17081*t3444*t4049 + t4281 + t4284 + t4312 + t4325 + t4332 - 0.04895*t4338 - 0.14946*t4352) + 1.03008*(0.132168*t3444*t4049 + t4281 + t4284 + t4312 + t4325 + t4332 + t4361 + t4363 - 0.255862*t4367 - 0.007761*t4379) + 0.763*(0.130288*t3444*t4049 + t4281 + t4284 + t4312 + t4325 + t4332 + t4361 + t4363 + t4396 + t4405 - 0.000421*t4411 - 0.45406*t4421) + 1.03*(0.127241*t3444*t4049 + t4281 + t4284 + t4312 + t4325 + t4332 + t4361 + t4363 + t4396 + t4405 + t4433 + t4435 - 0.826587*t4443 - 0.004179*t4451) + 0.126*(t3444*t3705*t4049 + t4281 + t4284 + t4312 + t4325 + t4332 + t4361 + t4363 + t4396 + t4405 + t4433 + t4435 + t3746*t4443 + t3768*t4451 + 0.01889*(t3444*t3781*t4049 + t3787*t4443 + t3794*t4451) - 0.617968*(t3444*t3817*t4049 + t3826*t4443 + t3828*t4451) + 0.126739*(t3444*t3841*t4049 + t3849*t4443 + t3854*t4451)) + 0.1498*(0.13064*t3444*t4049 + t4281 + t4284 + t4312 + t4325 + t4332 + t4361 + t4363 + t4396 + t4405 + t4433 + t4435 + t3896*t4443 + t3905*t4451 + 0.00589*(t3893*t4443 + t3875*t4451) - 1.11818*(t3875*t4443 - 1.*t3893*t4451)))*var2[6] + 0.0288377642750394*(1.316608*(t3454 + t3468 - 0.049*t3471 + 0.135*t3476) + 5.79228*(t3454 + t3468 + 0.17081*t3476 - 0.04895*t3471*t3483 + 0.14946*t3471*t3489 + t3495) + 1.03008*(t3454 + t3468 + 0.132168*t3476 + t3495 + t3512 + t3524 - 0.255862*t3532 - 0.007761*t3537) + 0.763*(t3454 + t3468 + 0.130288*t3476 + t3495 + t3512 + t3524 + t3556 + t3564 - 0.000421*t3567 - 0.45406*t3589) + 1.03*(t3454 + t3468 + 0.127241*t3476 + t3495 + t3512 + t3524 + t3556 + t3564 + t3626 + t3637 - 0.826587*t3645 - 0.004179*t3652) + 0.126*(t3454 + t3468 + t3495 + t3512 + t3524 + t3556 + t3564 + t3626 + t3637 + t3476*t3705 + t3645*t3746 + t3652*t3768 + 0.01889*(t3476*t3781 + t3645*t3787 + t3652*t3794) - 0.617968*(t3476*t3817 + t3645*t3826 + t3652*t3828) + 0.126739*(t3476*t3841 + t3645*t3849 + t3652*t3854)) + 0.1498*(t3454 + t3468 + 0.13064*t3476 + t3495 + t3512 + t3524 + t3556 + t3564 + t3626 + t3637 + 0.00589*(t3652*t3875 + t3645*t3893) - 1.11818*(t3645*t3875 - 1.*t3652*t3893) + t3645*t3896 + t3652*t3905))*var2[7] + 0.0288377642750394*(5.79228*(-0.04895*t4063 + t5297 + t5309 - 0.14946*t5322) + 1.03008*(t5297 + t5309 + t5328 + t5330 - 0.007761*t5334 - 0.255862*t5339) + 0.763*(t5297 + t5309 + t5328 + t5330 + t5346 + t5350 - 0.45406*t5354 - 0.000421*t5362) + 1.03*(t5297 + t5309 + t5328 + t5330 + t5346 + t5350 + t5370 + t5371 - 0.004179*t5374 - 0.826587*t5382) + 0.126*(t5297 + t5309 + t5328 + t5330 + t5346 + t5350 + t5370 + t5371 + t3768*t5374 + t3746*t5382 + 0.01889*(t3794*t5374 + t3787*t5382) - 0.617968*(t3828*t5374 + t3826*t5382) + 0.126739*(t3854*t5374 + t3849*t5382)) + 0.1498*(t5297 + t5309 + t5328 + t5330 + t5346 + t5350 + t5370 + t5371 + t3905*t5374 + t3896*t5382 - 1.11818*(-1.*t3893*t5374 + t3875*t5382) + 0.00589*(t3875*t5374 + t3893*t5382)))*var2[8] + 0.0288377642750394*(1.03008*(-0.007761*t4070 + t5458 + t5461 - 0.255862*t5464) + 0.763*(t5458 + t5461 + t5470 + t5471 - 0.45406*t5481 - 0.000421*t5486) + 1.03*(t5458 + t5461 + t5470 + t5471 + t5494 + t5495 - 0.004179*t5501 - 0.826587*t5506) + 0.126*(t5458 + t5461 + t5470 + t5471 + t5494 + t5495 + t3768*t5501 + t3746*t5506 + 0.01889*(t3794*t5501 + t3787*t5506) - 0.617968*(t3828*t5501 + t3826*t5506) + 0.126739*(t3854*t5501 + t3849*t5506)) + 0.1498*(t5458 + t5461 + t5470 + t5471 + t5494 + t5495 + t3905*t5501 + t3896*t5506 - 1.11818*(-1.*t3893*t5501 + t3875*t5506) + 0.00589*(t3875*t5501 + t3893*t5506)))*var2[9] + 0.0288377642750394*(0.763*(-0.000421*t4103 + t5583 + t5587 - 0.45406*t5589) + 1.03*(t5583 + t5587 + t5607 + t5610 - 0.004179*t5615 - 0.826587*t5629) + 0.126*(t5583 + t5587 + t5607 + t5610 + t3768*t5615 + t3746*t5629 + 0.01889*(t3794*t5615 + t3787*t5629) - 0.617968*(t3828*t5615 + t3826*t5629) + 0.126739*(t3854*t5615 + t3849*t5629)) + 0.1498*(t5583 + t5587 + t5607 + t5610 + t3905*t5615 + t3896*t5629 - 1.11818*(-1.*t3893*t5615 + t3875*t5629) + 0.00589*(t3875*t5615 + t3893*t5629)))*var2[10] + 0.0288377642750394*(1.03*(-0.004179*t4107 + t5733 + t5738 - 0.826587*t5747) + 0.126*(t3768*t4107 + t5733 + t5738 + t3746*t5747 + 0.01889*(t3794*t4107 + t3787*t5747) - 0.617968*(t3828*t4107 + t3826*t5747) + 0.126739*(t3854*t4107 + t3849*t5747)) + 0.1498*(t3905*t4107 + t5733 + t5738 + t3896*t5747 - 1.11818*(t4260 + t3875*t5747) + 0.00589*(t4270 + t3893*t5747)))*var2[11] + 0.00363355829865496*(t3471*(-2.1934241414728571e-7 + 0.000033783761634830594*t3691 - 0.021877537552*(t3975 + t3976) - 0.6934341012630001*(t3988 + t3990)) + (-1.2096424700126054e-9 - 0.6934128581485427*t3691 + 0.005534467322*(t3990 + t4004) - 0.021877537552*(t4016 + t4017))*t4107 + (-1.7147089040178687e-8 - 0.021744644052735636*t3691 + 0.005534467322*(t3976 + t4113) - 0.6934341012630001*(t4017 + t4127))*t4161 - 0.617968*(-0.999969365345*t3691*t4107 + t3471*(t4004 + t4169) + t4161*(t4016 + t4180)) + 0.126739*(-0.006104248100000001*t3471*t3691 + t4107*(t3988 + t4169) + t4161*(t3975 + t4201)) + 0.01889*(-0.993925573253*t3691*t4161 + t4107*(t4127 + t4180) + t3471*(t4113 + t4201)))*var2[12] + 0.0043198970884009*((0.02159*t3875 + t3902)*t4107 + (-1.11344*t3875 - 0.02159*t3893)*t4161 - 1.11818*(-1.*t3875*t4161 + t4260) + 0.00589*(-1.*t3893*t4161 + t4270))*var2[13] + 0.0288377642750394*(1.965608*(-0.1351*t2265 + t2602 + t2606 + 0.01793*t2616) + 5.79228*(t2602 + t2606 + t2674 + t2707 + t2713 - 0.04895*t2719 - 0.14946*t2723 - 0.17081*t2265*t741) + 1.03008*(t2602 + t2606 + t2674 + t2707 + t2713 + t2733 + t2734 - 0.255862*t2743 - 0.007761*t2757 - 0.132168*t2265*t741) + 0.1498*(t2602 + t2606 + t2674 + t2707 + t2713 + t2733 + t2734 + t2789 + t2792 + t1988*t2799 + t1998*t2810 - 1.11818*t2899 + 0.00589*t2927 - 0.13064*t2265*t741) + 0.763*(t2602 + t2606 + t2674 + t2707 + t2713 + t2733 + t2734 - 0.45406*t2743 - 0.000421*t2757 - 0.130288*t2265*t741) + 1.03*(t2602 + t2606 + t2674 + t2707 + t2713 + t2733 + t2734 + t2789 + t2792 - 0.004179*t2799 - 0.826587*t2810 - 0.127241*t2265*t741) + 0.126*(t2602 + t2606 + t2674 + t2707 + t2713 + t2733 + t2734 + t2789 + t2792 + t1654*t2799 + t1669*t2810 + t1619*t2265*t741 - 0.617968*(t1678*t2799 + t1684*t2810 + t1672*t2265*t741) - 0.126739*(t1730*t2799 + t1733*t2810 + t1712*t2265*t741) + 0.01889*(t1829*t2799 + t1835*t2810 + t1785*t2265*t741)) + 1.316608*(t2602 + t2606 - 0.0343*t2616 + t2674 - 0.135*t2265*t741 - 0.049*t2265*t772))*var2[14] + 0.0288377642750394*(5.79228*(t1048 - 0.04895*t1050*t1076 + 0.14946*t1076*t1095 + t1110 - 0.17081*t1121 + t894) + 1.316608*(t1048 - 0.049*t1076 - 0.135*t1121 + t894) + 1.03008*(t1048 + t1110 - 0.132168*t1121 + t1215 + t1297 - 0.255862*t1334 - 0.007761*t1349 + t894) + 0.763*(t1048 + t1110 - 0.130288*t1121 + t1215 + t1297 - 0.45406*t1334 - 0.000421*t1349 + t894) + 1.03*(t1048 + t1110 - 0.127241*t1121 + t1215 + t1297 + t1456 + t1476 - 0.004179*t1505 - 0.826587*t1531 + t894) + 0.126*(t1048 + t1110 + t1215 + t1297 + t1456 + t1476 + t1121*t1619 + t1505*t1654 + t1531*t1669 - 0.617968*(t1121*t1672 + t1505*t1678 + t1531*t1684) - 0.126739*(t1121*t1712 + t1505*t1730 + t1531*t1733) + 0.01889*(t1121*t1785 + t1505*t1829 + t1531*t1835) + t894) + 0.1498*(t1048 + t1110 - 0.13064*t1121 + t1215 + t1297 + t1456 + t1476 + t1505*t1988 + t1531*t1998 - 1.11818*t2028 + 0.00589*t2048 + t894))*var2[15] + 0.0288377642750394*(5.79228*(-0.04895*t2287 + t2961 + t2971 - 0.14946*t2978) + 0.763*(t2961 + t2971 + t2997 + t3000 - 0.000421*t3002 - 0.45406*t3012) + 1.03008*(t2961 + t2971 + t2997 + t3000 - 0.007761*t3002 - 0.255862*t3012) + 1.03*(t2961 + t2971 + t2997 + t3000 + t3049 + t3050 - 0.826587*t3075 - 0.004179*t3091) + 0.126*(t2961 + t2971 + t2997 + t3000 + t3049 + t3050 + t1669*t3075 + t1654*t3091 - 0.617968*(t1684*t3075 + t1678*t3091) - 0.126739*(t1733*t3075 + t1730*t3091) + 0.01889*(t1835*t3075 + t1829*t3091)) + 0.1498*(t2961 + t2971 + t2997 + t3000 + t3049 + t3050 + t1998*t3075 + t1988*t3091 + 0.00589*t3187 - 1.11818*t3194))*var2[16] + 0.0288377642750394*(0.763*(-0.000421*t2297 + t3232 + t3240 - 0.45406*t3257) + 1.03008*(-0.007761*t2297 + t3232 + t3240 - 0.255862*t3257) + 1.03*(t3232 + t3240 + t3294 + t3308 + t3309 + t3316 - 0.826587*t3319 - 0.004179*t3330) + 0.126*(t3232 + t3240 + t3294 + t3308 + t3309 + t3316 + t1669*t3319 + t1654*t3330 - 0.617968*(t1684*t3319 + t1678*t3330) - 0.126739*(t1733*t3319 + t1730*t3330) + 0.01889*(t1835*t3319 + t1829*t3330)) + 0.1498*(t3232 + t3240 + t3294 + t3308 + t3309 + t3316 + t1998*t3319 + t1988*t3330 + 0.00589*t3407 - 1.11818*t3423))*var2[17] + 0.00363355829865496*(t1076*(2.1934241414728571e-7 - 0.000033783761634830594*t1579 - 0.6934341012630001*(t2065 + t2108) - 0.021877537552*(t2130 + t2152)) + (-1.7147089040178687e-8 - 0.021744644052735636*t1579 - 0.6934341012630001*(t2218 + t2222) - 0.005534467322*(t2152 + t2249))*t2321 + (-1.2096424700126054e-9 - 0.6934128581485427*t1579 - 0.021877537552*(t2222 + t2332) - 0.005534467322*(t2108 + t2353))*t2394 - 0.126739*(-0.006104248100000001*t1076*t1579 + t2321*(t2130 + t2423) + t2394*(t2065 + t2436)) + 0.01889*(-0.993925573253*t1579*t2321 + t1076*(t2249 + t2423) + t2394*(t2218 + t2463)) - 0.617968*(-0.999969365345*t1579*t2394 + t1076*(t2353 + t2436) + t2321*(t2332 + t2463)))*var2[20] + 0.0043198970884009*(t2321*t2539 + t2394*t2547 + 0.00589*t2565 - 1.11818*t2581)*var2[21];
  p_output1[4]=var2[2] + (t124*t281*t4620 + t5812 - 0.135*t4582*t64 + t2706*t7283 + t2666*t7289 + t1103*t7295 - 0.1305*t7300 + t1212*t7315 + t1282*t7321 + t1450*t7326 + t1464*t7333 + t1988*t7342 + t1998*t7346 - 0.02159*(t1906*t7342 + t1927*t7346) - 1.11344*t7352)*var2[3] + (t6368 + t1103*t7223 + t1212*t7227 + t1282*t7237 + t1450*t7244 + t1464*t7251 + t1988*t7255 + t1998*t7261 - 1.11344*(-1.*t1927*t7255 + t1906*t7261) - 0.02159*(t1906*t7255 + t1927*t7261) - 1.*t4620*t64*t78 - 1.*t124*t2666*t64*t912 - 0.1305*(t64*t772*t78 - 1.*t124*t64*t741*t912) - 1.*t124*t2706*t64*t976)*var2[4] + (t2602 + t2706*t6852 + t2666*t6855 + t1212*t6866 + t1282*t6870 + t1450*t6877 + t1464*t6883 + t1988*t6890 + t1998*t6900 - 1.11344*(-1.*t1927*t6890 + t1906*t6900) - 0.02159*(t1906*t6890 + t1927*t6900) - 0.1305*t6855*t741 + t1103*t6855*t772 - 0.135*t281*t912)*var2[14] + (t1103*t6948 + t1050*t1212*t6948 - 1.*t1095*t1282*t6948 + t1450*t6957 + t1464*t6961 + t1988*t6970 + t1998*t6976 - 1.11344*(-1.*t1927*t6970 + t1906*t6976) - 0.02159*(t1906*t6970 + t1927*t6976) - 0.1305*(t6939 - 1.*t6929*t772) - 1.*t124*t64*t785 + t6929*t911)*var2[15] + (t2955*t6855 + t2970*t7015 + t1282*t7019 + t1212*t7026 + t1464*t7034 + t1450*t7043 + t1998*t7054 + t1988*t7058 - 0.02159*(t1927*t7054 + t1906*t7058) - 1.11344*(t1906*t7054 - 1.*t1927*t7058))*var2[16] + (t3238*t7026 + t3224*t7100 + t1464*t7103 + t3306*t7103 + t3315*t7108 + t1450*t7162 + t1998*t7167 + t1988*t7181 - 0.02159*(t1927*t7167 + t1906*t7181) - 1.11344*(t1906*t7167 - 1.*t1927*t7181))*var2[17] + (t2539*t7110 + t2547*t7115 - 0.02159*(-1.*t1927*t7110 + t1906*t7115) - 1.11344*(-1.*t1906*t7110 - 1.*t1927*t7115))*var2[21];
  p_output1[5]=var2[0] + (-1.*t124*t4620 + t1103*t7594 + t1212*t7614 + t1282*t7625 + t1450*t7638 + t1464*t7645 + t1988*t7660 + t1998*t7670 - 1.11344*(-1.*t1927*t7660 + t1906*t7670) - 0.02159*(t1906*t7660 + t1927*t7670) + 0.135*t78*t912 + t2666*t78*t912 - 0.1305*(t124*t772 + t741*t78*t912) + t2706*t78*t976)*var2[4] + (t1212*t7489 + t1282*t7495 + t1450*t7506 + t1464*t7517 + t1988*t7533 + t1998*t7550 - 1.11344*(-1.*t1927*t7533 + t1906*t7550) - 0.02159*(t1906*t7533 + t1927*t7550) - 1.*t124*t2706*t912 + 0.135*t124*t976 + t124*t2666*t976 - 0.1305*t124*t741*t976 + t1103*t124*t772*t976)*var2[14] + (t1103*t7393 + t1050*t1212*t7393 - 1.*t1095*t1282*t7393 + t1450*t7418 + t1464*t7426 + t1988*t7431 + t1998*t7437 - 1.11344*(-1.*t1927*t7431 + t1906*t7437) - 0.02159*(t1906*t7431 + t1927*t7437) + t78*t785 + t124*t911*t912 - 0.1305*(-1.*t741*t78 - 1.*t124*t772*t912))*var2[15] + (t2970*t7716 + t1282*t7728 + t1212*t7743 + t1464*t7751 + t1450*t7761 + t1998*t7782 + t1988*t7795 - 0.02159*(t1927*t7782 + t1906*t7795) - 1.11344*(t1906*t7782 - 1.*t1927*t7795) + t124*t2955*t976)*var2[16] + (t3238*t7743 + t3224*t7824 + t1464*t7827 + t3306*t7827 + t3315*t7832 + t1450*t7892 + t1998*t7908 + t1988*t7919 - 0.02159*(t1927*t7908 + t1906*t7919) - 1.11344*(t1906*t7908 - 1.*t1927*t7919))*var2[17] + (t2539*t7839 + t2547*t7847 - 0.02159*(-1.*t1927*t7839 + t1906*t7847) - 1.11344*(-1.*t1906*t7839 - 1.*t1927*t7847))*var2[21];
  p_output1[6]=var2[1] + (0.135*t281*t4582 + t124*t4620*t64 + t2666*t6852 - 0.1305*(t6852*t741 - 1.*t124*t64*t772) + t2706*t8136 + t1103*t8149 + t1212*t8179 + t1282*t8194 + t1450*t8203 + t1464*t8220 + t1988*t8224 + t1998*t8236 - 1.11344*(-1.*t1927*t8224 + t1906*t8236) - 0.02159*(t1906*t8224 + t1927*t8236) - 0.135*t64*t78*t912)*var2[3] + (t281*t4620*t78 + t1103*t8480 + t1212*t8487 + t1282*t8498 + t1450*t8510 + t1464*t8521 + t1988*t8528 + t1998*t8535 - 1.11344*(-1.*t1927*t8528 + t1906*t8535) - 0.02159*(t1906*t8528 + t1927*t8535) + 0.135*t124*t281*t912 + t124*t2666*t281*t912 - 0.1305*(-1.*t281*t772*t78 + t124*t281*t741*t912) + t124*t2706*t281*t976)*var2[4] + (t2666*t7283 - 0.1305*t7283*t741 + t1103*t7283*t772 + t2706*t7967 + t1282*t7984 + t1212*t7993 + t1464*t8003 + t1450*t8011 + t1998*t8020 + t1988*t8024 - 0.02159*(t1927*t8020 + t1906*t8024) - 1.11344*(t1906*t8020 - 1.*t1927*t8024) - 0.135*t64*t912 - 0.135*t281*t78*t976)*var2[14] + (t1103*t7300 + t1050*t1212*t7300 - 1.*t1095*t1282*t7300 - 0.1305*(-1.*t124*t281*t741 - 1.*t7289*t772) + t124*t281*t785 + t1450*t8081 + t1464*t8086 + t1988*t8097 + t1998*t8103 - 1.11344*(-1.*t1927*t8097 + t1906*t8103) - 0.02159*(t1906*t8097 + t1927*t8103) + t7289*t911)*var2[15] + (t2955*t7283 + t2970*t7295 + t1212*t7321 + t1282*t8279 + t1464*t8289 + t1450*t8308 + t1998*t8318 + t1988*t8324 - 0.02159*(t1927*t8318 + t1906*t8324) - 1.11344*(t1906*t8318 - 1.*t1927*t8324))*var2[16] + (t3224*t7315 + t3238*t7321 + t1464*t7326 + t3306*t7326 + t3315*t7333 + t1450*t8396 + t1998*t8411 + t1988*t8417 - 0.02159*(t1927*t8411 + t1906*t8417) - 1.11344*(t1906*t8411 - 1.*t1927*t8417))*var2[17] + (t2539*t7342 + t2547*t7346 - 1.11344*(-1.*t1906*t7342 - 1.*t1927*t7346) - 0.02159*t7352)*var2[21];
  p_output1[7]=var2[15];
  p_output1[8]=7.142857142857142*(-0.10724599999999995*t6020 - 0.08999*t6035)*var2[3] + 7.142857142857142*(-0.10724599999999995*t6591 - 0.08999*t6602)*var2[4] + 7.142857142857142*(-0.10724599999999995*t4917 - 0.08999*t4927)*var2[5] + 7.142857142857142*(-0.10724599999999995*t2899 - 0.08999*t2927)*var2[14] + 7.142857142857142*(-0.10724599999999995*t2028 - 0.08999*t2048)*var2[15] + 7.142857142857142*(-0.08999*t3187 - 0.10724599999999995*t3194)*var2[16] + 7.142857142857142*(-0.08999*t3407 - 0.10724599999999995*t3423)*var2[17] + 7.142857142857142*(-0.08999*t2565 - 0.10724599999999995*t2581)*var2[21];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void dyaLeftStance_new_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




