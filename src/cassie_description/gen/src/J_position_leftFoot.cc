/*
 * Automatically Generated from Mathematica.
 * Mon 13 Sep 2021 16:08:59 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_position_leftFoot.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t6;
  double t23;
  double t25;
  double t26;
  double t39;
  double t84;
  double t97;
  double t105;
  double t131;
  double t57;
  double t64;
  double t77;
  double t136;
  double t161;
  double t163;
  double t168;
  double t179;
  double t157;
  double t159;
  double t160;
  double t204;
  double t209;
  double t215;
  double t225;
  double t227;
  double t228;
  double t231;
  double t235;
  double t240;
  double t241;
  double t1070;
  double t1780;
  double t1870;
  double t2040;
  double t2191;
  double t2252;
  double t2598;
  double t2768;
  double t2772;
  double t2776;
  double t2829;
  double t2830;
  double t2904;
  double t2966;
  double t2984;
  double t3025;
  double t3054;
  double t3093;
  double t3101;
  double t3107;
  double t3122;
  double t3127;
  double t3134;
  double t3175;
  double t3180;
  double t3191;
  double t3234;
  double t3253;
  double t3282;
  double t3292;
  double t3330;
  double t3340;
  double t3436;
  double t15;
  double t21;
  double t120;
  double t132;
  double t133;
  double t137;
  double t139;
  double t140;
  double t3709;
  double t3710;
  double t3713;
  double t173;
  double t187;
  double t193;
  double t220;
  double t221;
  double t223;
  double t229;
  double t232;
  double t233;
  double t3759;
  double t3769;
  double t3773;
  double t3786;
  double t3790;
  double t3801;
  double t245;
  double t246;
  double t262;
  double t2405;
  double t2704;
  double t2764;
  double t3819;
  double t3825;
  double t3832;
  double t3838;
  double t3842;
  double t3849;
  double t2784;
  double t2788;
  double t2819;
  double t3041;
  double t3067;
  double t3084;
  double t3851;
  double t3852;
  double t3856;
  double t3861;
  double t3864;
  double t3868;
  double t3110;
  double t3115;
  double t3117;
  double t3205;
  double t3242;
  double t3249;
  double t3876;
  double t3885;
  double t3897;
  double t3905;
  double t3921;
  double t3927;
  double t3306;
  double t3314;
  double t3327;
  double t3939;
  double t3942;
  double t3943;
  double t3948;
  double t3949;
  double t3952;
  double t4014;
  double t4018;
  double t4019;
  double t4022;
  double t4023;
  double t4024;
  double t4027;
  double t4033;
  double t4035;
  double t4037;
  double t4038;
  double t4042;
  double t4054;
  double t4058;
  double t4062;
  double t4070;
  double t4081;
  double t4087;
  double t4090;
  double t4091;
  double t4092;
  double t4094;
  double t4098;
  double t4099;
  double t4111;
  double t4115;
  double t4123;
  double t4186;
  double t4187;
  double t4188;
  double t4192;
  double t4193;
  double t4194;
  double t4196;
  double t4197;
  double t4202;
  double t4204;
  double t4209;
  double t4223;
  double t4235;
  double t4243;
  double t4244;
  double t4247;
  double t4248;
  double t4249;
  double t4252;
  double t4253;
  double t4258;
  double t4260;
  double t4264;
  double t4267;
  double t4276;
  double t4284;
  double t4288;
  double t4318;
  double t4321;
  double t4322;
  double t4330;
  double t4334;
  double t4337;
  double t4342;
  double t4346;
  double t4347;
  double t4349;
  double t4350;
  double t4351;
  double t4353;
  double t4354;
  double t4355;
  double t4361;
  double t4362;
  double t4363;
  double t4375;
  double t4383;
  double t4386;
  double t4399;
  double t4400;
  double t4414;
  double t4429;
  double t4439;
  double t4446;
  double t4514;
  double t4515;
  double t4516;
  double t4536;
  double t4544;
  double t4549;
  double t4556;
  double t4565;
  double t4571;
  double t4579;
  double t4587;
  double t4597;
  double t4604;
  double t4605;
  double t4608;
  double t4611;
  double t4618;
  double t4629;
  double t4633;
  double t4635;
  double t4644;
  double t4655;
  double t4663;
  double t4671;
  double t4739;
  double t4742;
  double t4743;
  double t4746;
  double t4747;
  double t4749;
  double t4753;
  double t4754;
  double t4759;
  double t4766;
  double t4770;
  double t4774;
  double t4785;
  double t4788;
  double t4791;
  double t4793;
  double t4795;
  double t4797;
  double t4800;
  double t4802;
  double t4804;
  double t4807;
  double t4808;
  double t4809;
  double t4811;
  double t4812;
  double t4813;
  double t4828;
  double t4829;
  double t4830;
  double t4846;
  double t4850;
  double t4852;
  double t4863;
  double t4870;
  double t4881;
  double t4896;
  double t4897;
  double t4901;
  double t4903;
  double t4911;
  double t4918;
  double t4928;
  double t4929;
  double t4930;
  double t4932;
  double t4934;
  double t4940;
  double t4948;
  double t4953;
  double t4959;
  double t4966;
  double t4968;
  double t4983;
  double t5052;
  double t5057;
  double t5061;
  double t5106;
  double t5107;
  double t5109;
  double t5115;
  double t5117;
  double t5121;
  double t5124;
  double t5125;
  double t5129;
  double t5132;
  double t5133;
  double t5134;
  double t5142;
  double t5143;
  double t5146;
  double t5148;
  double t5150;
  double t5151;
  double t5032;
  double t5033;
  double t5034;
  double t5038;
  double t5039;
  double t3747;
  double t3751;
  double t3754;
  double t5182;
  double t5183;
  double t5184;
  double t5186;
  double t5190;
  double t5192;
  double t5199;
  double t5200;
  double t5201;
  double t5206;
  double t5207;
  double t5208;
  double t5210;
  double t5211;
  double t5212;
  double t5214;
  double t5219;
  double t5223;
  double t5280;
  double t5282;
  double t5287;
  double t5289;
  double t5292;
  double t5295;
  double t5310;
  double t5315;
  double t5321;
  double t5332;
  double t5339;
  double t5344;
  double t5363;
  double t5367;
  double t5370;
  double t5372;
  double t5375;
  double t5378;
  double t5383;
  double t5386;
  double t5393;
  double t5395;
  double t5396;
  double t5398;
  double t5451;
  double t5455;
  double t5457;
  double t5475;
  double t5480;
  double t5481;
  double t5484;
  double t5485;
  double t5490;
  double t5497;
  double t5498;
  double t5499;
  double t5503;
  double t5504;
  double t5506;
  double t5508;
  double t5510;
  double t5511;
  double t5518;
  double t5519;
  double t5520;
  double t5523;
  double t5524;
  double t5525;
  double t5532;
  double t5536;
  double t5537;
  double t5432;
  double t5434;
  double t5463;
  double t5468;
  double t5470;
  double t5556;
  double t5561;
  double t5566;
  double t5575;
  double t5576;
  double t5585;
  double t5591;
  double t5592;
  double t5602;
  double t5607;
  double t5609;
  double t5619;
  double t5625;
  double t5626;
  double t5628;
  double t5633;
  double t5635;
  double t5644;
  double t5657;
  double t5664;
  double t5712;
  double t5723;
  double t5729;
  double t5733;
  double t5744;
  double t5747;
  double t5770;
  double t5771;
  double t5775;
  double t5787;
  double t5790;
  double t5795;
  double t5800;
  double t5811;
  double t5812;
  double t5815;
  double t5816;
  double t5818;
  double t5820;
  double t5824;
  double t5825;
  double t5829;
  double t5830;
  double t5831;
  double t5833;
  double t5834;
  double t5835;
  double t5861;
  double t5864;
  double t5865;
  double t5873;
  double t5886;
  double t5894;
  double t5929;
  double t5957;
  double t5972;
  double t5991;
  double t6016;
  double t6044;
  double t6048;
  double t6053;
  double t6054;
  double t6070;
  double t6102;
  double t6103;
  double t6105;
  double t5855;
  double t5856;
  double t5860;
  double t5868;
  double t5869;
  double t6217;
  double t6226;
  double t6232;
  double t6262;
  double t6270;
  double t6309;
  double t6322;
  double t6347;
  double t6354;
  double t6370;
  double t6374;
  double t6379;
  double t6380;
  double t6420;
  double t6421;
  double t6423;
  double t6443;
  double t6445;
  double t6455;
  double t6459;
  double t6462;
  double t6465;
  double t6467;
  double t6483;
  double t6485;
  double t6490;
  double t6513;
  double t6521;
  double t6525;
  double t6530;
  double t6531;
  double t6550;
  double t6668;
  double t6669;
  double t6675;
  double t6686;
  double t6709;
  double t6720;
  double t6731;
  double t6749;
  double t6762;
  double t6774;
  double t6784;
  double t6785;
  double t6786;
  double t6620;
  double t6624;
  double t6634;
  double t6639;
  double t6651;
  double t6825;
  double t6827;
  double t6832;
  double t6834;
  double t6840;
  double t6841;
  double t6842;
  double t6876;
  double t6879;
  double t6883;
  double t6892;
  double t6898;
  double t6900;
  double t6901;
  double t6917;
  double t6925;
  double t6936;
  double t6939;
  double t6941;
  double t6945;
  double t7017;
  double t7020;
  double t7021;
  double t7034;
  double t7037;
  double t7040;
  double t7042;
  double t7005;
  double t7014;
  double t7016;
  double t7025;
  double t7029;
  double t7065;
  double t7066;
  double t3974;
  double t7093;
  double t7098;
  double t7099;
  double t7102;
  double t7107;
  double t7114;
  double t7120;
  double t7046;
  double t7163;
  double t7171;
  double t7172;
  double t7053;
  double t7145;
  double t7149;
  double t7153;
  double t7159;
  double t7161;
  double t7068;
  double t3978;
  double t3979;
  double t7124;
  double t7239;
  double t7240;
  double t7241;
  double t7132;
  t6 = Cos(var1[6]);
  t23 = Sin(var1[3]);
  t25 = Cos(var1[3]);
  t26 = Cos(var1[4]);
  t39 = Sin(var1[6]);
  t84 = Cos(var1[7]);
  t97 = -1.*t84;
  t105 = 1. + t97;
  t131 = Sin(var1[7]);
  t57 = -1.*t6*t23;
  t64 = -1.*t25*t26*t39;
  t77 = t57 + t64;
  t136 = Sin(var1[4]);
  t161 = Cos(var1[8]);
  t163 = -1.*t161;
  t168 = 1. + t163;
  t179 = Sin(var1[8]);
  t157 = t25*t84*t136;
  t159 = t77*t131;
  t160 = t157 + t159;
  t204 = -1.*t25*t26*t6;
  t209 = t23*t39;
  t215 = t204 + t209;
  t225 = Cos(var1[9]);
  t227 = -1.*t225;
  t228 = 1. + t227;
  t231 = Sin(var1[9]);
  t235 = t161*t160;
  t240 = t215*t179;
  t241 = t235 + t240;
  t1070 = t161*t215;
  t1780 = -1.*t160*t179;
  t1870 = t1070 + t1780;
  t2040 = Cos(var1[10]);
  t2191 = -1.*t2040;
  t2252 = 1. + t2191;
  t2598 = Sin(var1[10]);
  t2768 = -1.*t231*t241;
  t2772 = t225*t1870;
  t2776 = t2768 + t2772;
  t2829 = t225*t241;
  t2830 = t231*t1870;
  t2904 = t2829 + t2830;
  t2966 = Cos(var1[11]);
  t2984 = -1.*t2966;
  t3025 = 1. + t2984;
  t3054 = Sin(var1[11]);
  t3093 = t2598*t2776;
  t3101 = t2040*t2904;
  t3107 = t3093 + t3101;
  t3122 = t2040*t2776;
  t3127 = -1.*t2598*t2904;
  t3134 = t3122 + t3127;
  t3175 = Cos(var1[13]);
  t3180 = -1.*t3175;
  t3191 = 1. + t3180;
  t3234 = Sin(var1[13]);
  t3253 = -1.*t3054*t3107;
  t3282 = t2966*t3134;
  t3292 = t3253 + t3282;
  t3330 = t2966*t3107;
  t3340 = t3054*t3134;
  t3436 = t3330 + t3340;
  t15 = -1.*t6;
  t21 = 1. + t15;
  t120 = 0.135*t105;
  t132 = 0.049*t131;
  t133 = t120 + t132;
  t137 = -0.049*t105;
  t139 = 0.135*t131;
  t140 = t137 + t139;
  t3709 = t25*t6;
  t3710 = -1.*t26*t23*t39;
  t3713 = t3709 + t3710;
  t173 = -0.049*t168;
  t187 = -0.09*t179;
  t193 = t173 + t187;
  t220 = -0.09*t168;
  t221 = 0.049*t179;
  t223 = t220 + t221;
  t229 = -0.049*t228;
  t232 = -0.21*t231;
  t233 = t229 + t232;
  t3759 = t84*t23*t136;
  t3769 = t3713*t131;
  t3773 = t3759 + t3769;
  t3786 = -1.*t26*t6*t23;
  t3790 = -1.*t25*t39;
  t3801 = t3786 + t3790;
  t245 = -0.21*t228;
  t246 = 0.049*t231;
  t262 = t245 + t246;
  t2405 = -0.27068*t2252;
  t2704 = 0.00159*t2598;
  t2764 = t2405 + t2704;
  t3819 = t161*t3773;
  t3825 = t3801*t179;
  t3832 = t3819 + t3825;
  t3838 = t161*t3801;
  t3842 = -1.*t3773*t179;
  t3849 = t3838 + t3842;
  t2784 = -0.00159*t2252;
  t2788 = -0.27068*t2598;
  t2819 = t2784 + t2788;
  t3041 = 0.01841*t3025;
  t3067 = -0.70544*t3054;
  t3084 = t3041 + t3067;
  t3851 = -1.*t231*t3832;
  t3852 = t225*t3849;
  t3856 = t3851 + t3852;
  t3861 = t225*t3832;
  t3864 = t231*t3849;
  t3868 = t3861 + t3864;
  t3110 = -0.70544*t3025;
  t3115 = -0.01841*t3054;
  t3117 = t3110 + t3115;
  t3205 = -1.11344*t3191;
  t3242 = 0.02159*t3234;
  t3249 = t3205 + t3242;
  t3876 = t2598*t3856;
  t3885 = t2040*t3868;
  t3897 = t3876 + t3885;
  t3905 = t2040*t3856;
  t3921 = -1.*t2598*t3868;
  t3927 = t3905 + t3921;
  t3306 = -0.02159*t3191;
  t3314 = -1.11344*t3234;
  t3327 = t3306 + t3314;
  t3939 = -1.*t3054*t3897;
  t3942 = t2966*t3927;
  t3943 = t3939 + t3942;
  t3948 = t2966*t3897;
  t3949 = t3054*t3927;
  t3952 = t3948 + t3949;
  t4014 = -1.*t84*t136;
  t4018 = t26*t39*t131;
  t4019 = t4014 + t4018;
  t4022 = t161*t4019;
  t4023 = t26*t6*t179;
  t4024 = t4022 + t4023;
  t4027 = t26*t6*t161;
  t4033 = -1.*t4019*t179;
  t4035 = t4027 + t4033;
  t4037 = -1.*t231*t4024;
  t4038 = t225*t4035;
  t4042 = t4037 + t4038;
  t4054 = t225*t4024;
  t4058 = t231*t4035;
  t4062 = t4054 + t4058;
  t4070 = t2598*t4042;
  t4081 = t2040*t4062;
  t4087 = t4070 + t4081;
  t4090 = t2040*t4042;
  t4091 = -1.*t2598*t4062;
  t4092 = t4090 + t4091;
  t4094 = -1.*t3054*t4087;
  t4098 = t2966*t4092;
  t4099 = t4094 + t4098;
  t4111 = t2966*t4087;
  t4115 = t3054*t4092;
  t4123 = t4111 + t4115;
  t4186 = t26*t84*t23;
  t4187 = t23*t136*t39*t131;
  t4188 = t4186 + t4187;
  t4192 = t161*t4188;
  t4193 = t6*t23*t136*t179;
  t4194 = t4192 + t4193;
  t4196 = t6*t161*t23*t136;
  t4197 = -1.*t4188*t179;
  t4202 = t4196 + t4197;
  t4204 = -1.*t231*t4194;
  t4209 = t225*t4202;
  t4223 = t4204 + t4209;
  t4235 = t225*t4194;
  t4243 = t231*t4202;
  t4244 = t4235 + t4243;
  t4247 = t2598*t4223;
  t4248 = t2040*t4244;
  t4249 = t4247 + t4248;
  t4252 = t2040*t4223;
  t4253 = -1.*t2598*t4244;
  t4258 = t4252 + t4253;
  t4260 = -1.*t3054*t4249;
  t4264 = t2966*t4258;
  t4267 = t4260 + t4264;
  t4276 = t2966*t4249;
  t4284 = t3054*t4258;
  t4288 = t4276 + t4284;
  t4318 = -1.*t25*t26*t84;
  t4321 = -1.*t25*t136*t39*t131;
  t4322 = t4318 + t4321;
  t4330 = t161*t4322;
  t4334 = -1.*t25*t6*t136*t179;
  t4337 = t4330 + t4334;
  t4342 = -1.*t25*t6*t161*t136;
  t4346 = -1.*t4322*t179;
  t4347 = t4342 + t4346;
  t4349 = -1.*t231*t4337;
  t4350 = t225*t4347;
  t4351 = t4349 + t4350;
  t4353 = t225*t4337;
  t4354 = t231*t4347;
  t4355 = t4353 + t4354;
  t4361 = t2598*t4351;
  t4362 = t2040*t4355;
  t4363 = t4361 + t4362;
  t4375 = t2040*t4351;
  t4383 = -1.*t2598*t4355;
  t4386 = t4375 + t4383;
  t4399 = -1.*t3054*t4363;
  t4400 = t2966*t4386;
  t4414 = t4399 + t4400;
  t4429 = t2966*t4363;
  t4439 = t3054*t4386;
  t4446 = t4429 + t4439;
  t4514 = t6*t161*t136*t131;
  t4515 = -1.*t136*t39*t179;
  t4516 = t4514 + t4515;
  t4536 = -1.*t161*t136*t39;
  t4544 = -1.*t6*t136*t131*t179;
  t4549 = t4536 + t4544;
  t4556 = -1.*t231*t4516;
  t4565 = t225*t4549;
  t4571 = t4556 + t4565;
  t4579 = t225*t4516;
  t4587 = t231*t4549;
  t4597 = t4579 + t4587;
  t4604 = t2598*t4571;
  t4605 = t2040*t4597;
  t4608 = t4604 + t4605;
  t4611 = t2040*t4571;
  t4618 = -1.*t2598*t4597;
  t4629 = t4611 + t4618;
  t4633 = -1.*t3054*t4608;
  t4635 = t2966*t4629;
  t4644 = t4633 + t4635;
  t4655 = t2966*t4608;
  t4663 = t3054*t4629;
  t4671 = t4655 + t4663;
  t4739 = -1.*t25*t6;
  t4742 = t26*t23*t39;
  t4743 = t4739 + t4742;
  t4746 = t161*t3801*t131;
  t4747 = t4743*t179;
  t4749 = t4746 + t4747;
  t4753 = t161*t4743;
  t4754 = -1.*t3801*t131*t179;
  t4759 = t4753 + t4754;
  t4766 = -1.*t231*t4749;
  t4770 = t225*t4759;
  t4774 = t4766 + t4770;
  t4785 = t225*t4749;
  t4788 = t231*t4759;
  t4791 = t4785 + t4788;
  t4793 = t2598*t4774;
  t4795 = t2040*t4791;
  t4797 = t4793 + t4795;
  t4800 = t2040*t4774;
  t4802 = -1.*t2598*t4791;
  t4804 = t4800 + t4802;
  t4807 = -1.*t3054*t4797;
  t4808 = t2966*t4804;
  t4809 = t4807 + t4808;
  t4811 = t2966*t4797;
  t4812 = t3054*t4804;
  t4813 = t4811 + t4812;
  t4828 = t25*t26*t6;
  t4829 = -1.*t23*t39;
  t4830 = t4828 + t4829;
  t4846 = t161*t4830*t131;
  t4850 = t77*t179;
  t4852 = t4846 + t4850;
  t4863 = t161*t77;
  t4870 = -1.*t4830*t131*t179;
  t4881 = t4863 + t4870;
  t4896 = -1.*t231*t4852;
  t4897 = t225*t4881;
  t4901 = t4896 + t4897;
  t4903 = t225*t4852;
  t4911 = t231*t4881;
  t4918 = t4903 + t4911;
  t4928 = t2598*t4901;
  t4929 = t2040*t4918;
  t4930 = t4928 + t4929;
  t4932 = t2040*t4901;
  t4934 = -1.*t2598*t4918;
  t4940 = t4932 + t4934;
  t4948 = -1.*t3054*t4930;
  t4953 = t2966*t4940;
  t4959 = t4948 + t4953;
  t4966 = t2966*t4930;
  t4968 = t3054*t4940;
  t4983 = t4966 + t4968;
  t5052 = t84*t136*t39;
  t5057 = -1.*t26*t131;
  t5061 = t5052 + t5057;
  t5106 = -1.*t161*t231*t5061;
  t5107 = -1.*t225*t5061*t179;
  t5109 = t5106 + t5107;
  t5115 = t225*t161*t5061;
  t5117 = -1.*t231*t5061*t179;
  t5121 = t5115 + t5117;
  t5124 = t2598*t5109;
  t5125 = t2040*t5121;
  t5129 = t5124 + t5125;
  t5132 = t2040*t5109;
  t5133 = -1.*t2598*t5121;
  t5134 = t5132 + t5133;
  t5142 = -1.*t3054*t5129;
  t5143 = t2966*t5134;
  t5146 = t5142 + t5143;
  t5148 = t2966*t5129;
  t5150 = t3054*t5134;
  t5151 = t5148 + t5150;
  t5032 = 0.135*t84;
  t5033 = -0.049*t131;
  t5034 = t5032 + t5033;
  t5038 = 0.049*t84;
  t5039 = t5038 + t139;
  t3747 = t84*t3713;
  t3751 = -1.*t23*t136*t131;
  t3754 = t3747 + t3751;
  t5182 = -1.*t161*t231*t3754;
  t5183 = -1.*t225*t3754*t179;
  t5184 = t5182 + t5183;
  t5186 = t225*t161*t3754;
  t5190 = -1.*t231*t3754*t179;
  t5192 = t5186 + t5190;
  t5199 = t2598*t5184;
  t5200 = t2040*t5192;
  t5201 = t5199 + t5200;
  t5206 = t2040*t5184;
  t5207 = -1.*t2598*t5192;
  t5208 = t5206 + t5207;
  t5210 = -1.*t3054*t5201;
  t5211 = t2966*t5208;
  t5212 = t5210 + t5211;
  t5214 = t2966*t5201;
  t5219 = t3054*t5208;
  t5223 = t5214 + t5219;
  t5280 = t6*t23;
  t5282 = t25*t26*t39;
  t5287 = t5280 + t5282;
  t5289 = t84*t5287;
  t5292 = t25*t136*t131;
  t5295 = t5289 + t5292;
  t5310 = -1.*t161*t231*t5295;
  t5315 = -1.*t225*t5295*t179;
  t5321 = t5310 + t5315;
  t5332 = t225*t161*t5295;
  t5339 = -1.*t231*t5295*t179;
  t5344 = t5332 + t5339;
  t5363 = t2598*t5321;
  t5367 = t2040*t5344;
  t5370 = t5363 + t5367;
  t5372 = t2040*t5321;
  t5375 = -1.*t2598*t5344;
  t5378 = t5372 + t5375;
  t5383 = -1.*t3054*t5370;
  t5386 = t2966*t5378;
  t5393 = t5383 + t5386;
  t5395 = t2966*t5370;
  t5396 = t3054*t5378;
  t5398 = t5395 + t5396;
  t5451 = t26*t84;
  t5455 = t136*t39*t131;
  t5457 = t5451 + t5455;
  t5475 = -1.*t161*t5457;
  t5480 = -1.*t6*t136*t179;
  t5481 = t5475 + t5480;
  t5484 = t6*t161*t136;
  t5485 = -1.*t5457*t179;
  t5490 = t5484 + t5485;
  t5497 = t231*t5481;
  t5498 = t225*t5490;
  t5499 = t5497 + t5498;
  t5503 = t225*t5481;
  t5504 = -1.*t231*t5490;
  t5506 = t5503 + t5504;
  t5508 = -1.*t2598*t5499;
  t5510 = t2040*t5506;
  t5511 = t5508 + t5510;
  t5518 = t2040*t5499;
  t5519 = t2598*t5506;
  t5520 = t5518 + t5519;
  t5523 = t3054*t5511;
  t5524 = t2966*t5520;
  t5525 = t5523 + t5524;
  t5532 = t2966*t5511;
  t5536 = -1.*t3054*t5520;
  t5537 = t5532 + t5536;
  t5432 = 0.049*t161;
  t5434 = t5432 + t187;
  t5463 = -0.09*t161;
  t5468 = -0.049*t179;
  t5470 = t5463 + t5468;
  t5556 = -1.*t161*t3773;
  t5561 = -1.*t3801*t179;
  t5566 = t5556 + t5561;
  t5575 = t231*t5566;
  t5576 = t5575 + t3852;
  t5585 = t225*t5566;
  t5591 = -1.*t231*t3849;
  t5592 = t5585 + t5591;
  t5602 = -1.*t2598*t5576;
  t5607 = t2040*t5592;
  t5609 = t5602 + t5607;
  t5619 = t2040*t5576;
  t5625 = t2598*t5592;
  t5626 = t5619 + t5625;
  t5628 = t3054*t5609;
  t5633 = t2966*t5626;
  t5635 = t5628 + t5633;
  t5644 = t2966*t5609;
  t5657 = -1.*t3054*t5626;
  t5664 = t5644 + t5657;
  t5712 = -1.*t25*t84*t136;
  t5723 = t5287*t131;
  t5729 = t5712 + t5723;
  t5733 = -1.*t161*t5729;
  t5744 = -1.*t4830*t179;
  t5747 = t5733 + t5744;
  t5770 = t161*t4830;
  t5771 = -1.*t5729*t179;
  t5775 = t5770 + t5771;
  t5787 = t231*t5747;
  t5790 = t225*t5775;
  t5795 = t5787 + t5790;
  t5800 = t225*t5747;
  t5811 = -1.*t231*t5775;
  t5812 = t5800 + t5811;
  t5815 = -1.*t2598*t5795;
  t5816 = t2040*t5812;
  t5818 = t5815 + t5816;
  t5820 = t2040*t5795;
  t5824 = t2598*t5812;
  t5825 = t5820 + t5824;
  t5829 = t3054*t5818;
  t5830 = t2966*t5825;
  t5831 = t5829 + t5830;
  t5833 = t2966*t5818;
  t5834 = -1.*t3054*t5825;
  t5835 = t5833 + t5834;
  t5861 = t161*t5457;
  t5864 = t6*t136*t179;
  t5865 = t5861 + t5864;
  t5873 = -1.*t231*t5865;
  t5886 = t5873 + t5498;
  t5894 = -1.*t225*t5865;
  t5929 = t5894 + t5504;
  t5957 = -1.*t2598*t5886;
  t5972 = t2040*t5929;
  t5991 = t5957 + t5972;
  t6016 = t2040*t5886;
  t6044 = t2598*t5929;
  t6048 = t6016 + t6044;
  t6053 = t3054*t5991;
  t6054 = t2966*t6048;
  t6070 = t6053 + t6054;
  t6102 = t2966*t5991;
  t6103 = -1.*t3054*t6048;
  t6105 = t6102 + t6103;
  t5855 = -0.21*t225;
  t5856 = -0.049*t231;
  t5860 = t5855 + t5856;
  t5868 = 0.049*t225;
  t5869 = t5868 + t232;
  t6217 = -1.*t225*t3832;
  t6226 = t6217 + t5591;
  t6232 = -1.*t2598*t3856;
  t6262 = t2040*t6226;
  t6270 = t6232 + t6262;
  t6309 = t2598*t6226;
  t6322 = t3905 + t6309;
  t6347 = t3054*t6270;
  t6354 = t2966*t6322;
  t6370 = t6347 + t6354;
  t6374 = t2966*t6270;
  t6379 = -1.*t3054*t6322;
  t6380 = t6374 + t6379;
  t6420 = t161*t5729;
  t6421 = t4830*t179;
  t6423 = t6420 + t6421;
  t6443 = -1.*t231*t6423;
  t6445 = t6443 + t5790;
  t6455 = -1.*t225*t6423;
  t6459 = t6455 + t5811;
  t6462 = -1.*t2598*t6445;
  t6465 = t2040*t6459;
  t6467 = t6462 + t6465;
  t6483 = t2040*t6445;
  t6485 = t2598*t6459;
  t6490 = t6483 + t6485;
  t6513 = t3054*t6467;
  t6521 = t2966*t6490;
  t6525 = t6513 + t6521;
  t6530 = t2966*t6467;
  t6531 = -1.*t3054*t6490;
  t6550 = t6530 + t6531;
  t6668 = t225*t5865;
  t6669 = t231*t5490;
  t6675 = t6668 + t6669;
  t6686 = -1.*t2040*t6675;
  t6709 = t5957 + t6686;
  t6720 = -1.*t2598*t6675;
  t6731 = t6016 + t6720;
  t6749 = t3054*t6709;
  t6762 = t2966*t6731;
  t6774 = t6749 + t6762;
  t6784 = t2966*t6709;
  t6785 = -1.*t3054*t6731;
  t6786 = t6784 + t6785;
  t6620 = 0.00159*t2040;
  t6624 = t6620 + t2788;
  t6634 = -0.27068*t2040;
  t6639 = -0.00159*t2598;
  t6651 = t6634 + t6639;
  t6825 = -1.*t2040*t3868;
  t6827 = t6232 + t6825;
  t6832 = t3054*t6827;
  t6834 = t6832 + t3942;
  t6840 = t2966*t6827;
  t6841 = -1.*t3054*t3927;
  t6842 = t6840 + t6841;
  t6876 = t225*t6423;
  t6879 = t231*t5775;
  t6883 = t6876 + t6879;
  t6892 = -1.*t2040*t6883;
  t6898 = t6462 + t6892;
  t6900 = -1.*t2598*t6883;
  t6901 = t6483 + t6900;
  t6917 = t3054*t6898;
  t6925 = t2966*t6901;
  t6936 = t6917 + t6925;
  t6939 = t2966*t6898;
  t6941 = -1.*t3054*t6901;
  t6945 = t6939 + t6941;
  t7017 = t2598*t5886;
  t7020 = t2040*t6675;
  t7021 = t7017 + t7020;
  t7034 = -1.*t3054*t7021;
  t7037 = t7034 + t6762;
  t7040 = -1.*t2966*t7021;
  t7042 = t7040 + t6785;
  t7005 = -0.70544*t2966;
  t7014 = 0.01841*t3054;
  t7016 = t7005 + t7014;
  t7025 = -0.01841*t2966;
  t7029 = t7025 + t3067;
  t7065 = -1.*t2966*t3897;
  t7066 = t7065 + t6841;
  t3974 = t3175*t3943;
  t7093 = t2598*t6445;
  t7098 = t2040*t6883;
  t7099 = t7093 + t7098;
  t7102 = -1.*t3054*t7099;
  t7107 = t7102 + t6925;
  t7114 = -1.*t2966*t7099;
  t7120 = t7114 + t6941;
  t7046 = -1.*t3234*t7037;
  t7163 = t2966*t7021;
  t7171 = t3054*t6731;
  t7172 = t7163 + t7171;
  t7053 = t3175*t7037;
  t7145 = 0.02159*t3175;
  t7149 = t7145 + t3314;
  t7153 = -1.11344*t3175;
  t7159 = -0.02159*t3234;
  t7161 = t7153 + t7159;
  t7068 = -1.*t3234*t3943;
  t3978 = -1.*t3234*t3952;
  t3979 = t3974 + t3978;
  t7124 = -1.*t3234*t7107;
  t7239 = t2966*t7099;
  t7240 = t3054*t6901;
  t7241 = t7239 + t7240;
  t7132 = t3175*t7107;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t160*t193 + t215*t223 - 0.135*t21*t23 + t233*t241 + t136*t140*t25 + t1870*t262 + t2764*t2776 + t2819*t2904 + t3084*t3107 + t3117*t3134 + t3249*t3292 + t3327*t3436 + 0.0306*(t3234*t3292 + t3175*t3436) - 1.13106*(t3175*t3292 - 1.*t3234*t3436) + 0.135*t25*t26*t39 + t133*t77 + 0.1305*(-1.*t131*t136*t25 + t77*t84);
  p_output1[11]=t136*t140*t23 + 0.135*t21*t25 + t133*t3713 + 0.1305*t3754 + t193*t3773 + t223*t3801 + t233*t3832 + t262*t3849 + t2764*t3856 + t2819*t3868 + t3084*t3897 + 0.135*t23*t26*t39 + t3117*t3927 + t3249*t3943 + t3327*t3952 + 0.0306*(t3234*t3943 + t3175*t3952) - 1.13106*t3979;
  p_output1[12]=-1.*t136*t140 - 0.135*t26*t39 + t133*t26*t39 + t193*t4019 + t233*t4024 + t262*t4035 + t2764*t4042 + t2819*t4062 + t3084*t4087 + t3117*t4092 + t3249*t4099 + t3327*t4123 + 0.0306*(t3234*t4099 + t3175*t4123) - 1.13106*(t3175*t4099 - 1.*t3234*t4123) + t223*t26*t6 + 0.1305*(t131*t136 + t26*t39*t84);
  p_output1[13]=t140*t23*t26 - 0.135*t136*t23*t39 + t133*t136*t23*t39 + t193*t4188 + t233*t4194 + t262*t4202 + t2764*t4223 + t2819*t4244 + t3084*t4249 + t3117*t4258 + t3249*t4267 + t3327*t4288 + 0.0306*(t3234*t4267 + t3175*t4288) - 1.13106*(t3175*t4267 - 1.*t3234*t4288) + t136*t223*t23*t6 + 0.1305*(-1.*t131*t23*t26 + t136*t23*t39*t84);
  p_output1[14]=-1.*t140*t25*t26 + 0.135*t136*t25*t39 - 1.*t133*t136*t25*t39 + t193*t4322 + t233*t4337 + t262*t4347 + t2764*t4351 + t2819*t4355 + t3084*t4363 + t3117*t4386 + t3249*t4414 + t3327*t4446 + 0.0306*(t3234*t4414 + t3175*t4446) - 1.13106*(t3175*t4414 - 1.*t3234*t4446) - 1.*t136*t223*t25*t6 + 0.1305*(t131*t25*t26 - 1.*t136*t25*t39*t84);
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=-1.*t136*t223*t39 + t233*t4516 + t262*t4549 + t2764*t4571 + t2819*t4597 + t3084*t4608 + t3117*t4629 + t3249*t4644 + t3327*t4671 + 0.0306*(t3234*t4644 + t3175*t4671) - 1.13106*(t3175*t4644 - 1.*t3234*t4671) - 0.135*t136*t6 + t133*t136*t6 + t131*t136*t193*t6 + 0.1305*t136*t6*t84;
  p_output1[19]=t133*t3801 + t131*t193*t3801 + 0.135*t25*t39 + t223*t4743 + t233*t4749 + t262*t4759 + t2764*t4774 + t2819*t4791 + t3084*t4797 + t3117*t4804 + t3249*t4809 + t3327*t4813 + 0.0306*(t3234*t4809 + t3175*t4813) - 1.13106*(t3175*t4809 - 1.*t3234*t4813) + 0.135*t23*t26*t6 + 0.1305*t3801*t84;
  p_output1[20]=0.135*t23*t39 + t133*t4830 + t131*t193*t4830 + t233*t4852 + t262*t4881 + t2764*t4901 + t2819*t4918 + t3084*t4930 + t3117*t4940 + t3249*t4959 + t3327*t4983 + 0.0306*(t3234*t4959 + t3175*t4983) - 1.13106*(t3175*t4959 - 1.*t3234*t4983) - 0.135*t25*t26*t6 + t223*t77 + 0.1305*t4830*t84;
  p_output1[21]=t26*t5034 + t136*t39*t5039 + t193*t5061 + t161*t233*t5061 - 1.*t179*t262*t5061 + t2764*t5109 + t2819*t5121 + t3084*t5129 + t3117*t5134 + t3249*t5146 + t3327*t5151 + 0.0306*(t3234*t5146 + t3175*t5151) - 1.13106*(t3175*t5146 - 1.*t3234*t5151) + 0.1305*(-1.*t131*t136*t39 - 1.*t26*t84);
  p_output1[22]=t193*t3754 + t161*t233*t3754 - 1.*t179*t262*t3754 + t136*t23*t5034 + t3713*t5039 + t2764*t5184 + t2819*t5192 + t3084*t5201 + t3117*t5208 + t3249*t5212 + t3327*t5223 + 0.0306*(t3234*t5212 + t3175*t5223) - 1.13106*(t3175*t5212 - 1.*t3234*t5223) + 0.1305*(-1.*t131*t3713 - 1.*t136*t23*t84);
  p_output1[23]=-1.*t136*t25*t5034 + t5039*t5287 + 0.1305*(t157 - 1.*t131*t5287) + t193*t5295 + t161*t233*t5295 - 1.*t179*t262*t5295 + t2764*t5321 + t2819*t5344 + t3084*t5370 + t3117*t5378 + t3249*t5393 + t3327*t5398 + 0.0306*(t3234*t5393 + t3175*t5398) - 1.13106*(t3175*t5393 - 1.*t3234*t5398);
  p_output1[24]=t5457*t5470 + t262*t5481 + t233*t5490 + t2819*t5499 + t2764*t5506 + t3117*t5511 + t3084*t5520 + t3327*t5525 + t3249*t5537 - 1.13106*(-1.*t3234*t5525 + t3175*t5537) + 0.0306*(t3175*t5525 + t3234*t5537) + t136*t5434*t6;
  p_output1[25]=t233*t3849 + t3801*t5434 + t3773*t5470 + t262*t5566 + t2819*t5576 + t2764*t5592 + t3117*t5609 + t3084*t5626 + t3327*t5635 + t3249*t5664 - 1.13106*(-1.*t3234*t5635 + t3175*t5664) + 0.0306*(t3175*t5635 + t3234*t5664);
  p_output1[26]=t4830*t5434 + t5470*t5729 + t262*t5747 + t233*t5775 + t2819*t5795 + t2764*t5812 + t3117*t5818 + t3084*t5825 + t3327*t5831 + t3249*t5835 - 1.13106*(-1.*t3234*t5831 + t3175*t5835) + 0.0306*(t3175*t5831 + t3234*t5835);
  p_output1[27]=t5860*t5865 + t5490*t5869 + t2819*t5886 + t2764*t5929 + t3117*t5991 + t3084*t6048 + t3327*t6070 + t3249*t6105 - 1.13106*(-1.*t3234*t6070 + t3175*t6105) + 0.0306*(t3175*t6070 + t3234*t6105);
  p_output1[28]=t2819*t3856 + t3832*t5860 + t3849*t5869 + t2764*t6226 + t3117*t6270 + t3084*t6322 + t3327*t6370 + t3249*t6380 - 1.13106*(-1.*t3234*t6370 + t3175*t6380) + 0.0306*(t3175*t6370 + t3234*t6380);
  p_output1[29]=t5775*t5869 + t5860*t6423 + t2819*t6445 + t2764*t6459 + t3117*t6467 + t3084*t6490 + t3327*t6525 + t3249*t6550 - 1.13106*(-1.*t3234*t6525 + t3175*t6550) + 0.0306*(t3175*t6525 + t3234*t6550);
  p_output1[30]=t5886*t6624 + t6651*t6675 + t3117*t6709 + t3084*t6731 + t3327*t6774 + t3249*t6786 - 1.13106*(-1.*t3234*t6774 + t3175*t6786) + 0.0306*(t3175*t6774 + t3234*t6786);
  p_output1[31]=t3084*t3927 + t3856*t6624 + t3868*t6651 + t3117*t6827 + t3327*t6834 + t3249*t6842 - 1.13106*(-1.*t3234*t6834 + t3175*t6842) + 0.0306*(t3175*t6834 + t3234*t6842);
  p_output1[32]=t6445*t6624 + t6651*t6883 + t3117*t6898 + t3084*t6901 + t3327*t6936 + t3249*t6945 - 1.13106*(-1.*t3234*t6936 + t3175*t6945) + 0.0306*(t3175*t6936 + t3234*t6945);
  p_output1[33]=t7016*t7021 + t6731*t7029 + t3327*t7037 + t3249*t7042 - 1.13106*(t3175*t7042 + t7046) + 0.0306*(t3234*t7042 + t7053);
  p_output1[34]=t3327*t3943 + t3897*t7016 + t3927*t7029 + t3249*t7066 + 0.0306*(t3974 + t3234*t7066) - 1.13106*(t3175*t7066 + t7068);
  p_output1[35]=t6901*t7029 + t7016*t7099 + t3327*t7107 + t3249*t7120 - 1.13106*(t3175*t7120 + t7124) + 0.0306*(t3234*t7120 + t7132);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t7037*t7149 + t7161*t7172 - 1.13106*(t7046 - 1.*t3175*t7172) + 0.0306*(t7053 - 1.*t3234*t7172);
  p_output1[40]=0.0306*t3979 - 1.13106*(-1.*t3175*t3952 + t7068) + t3943*t7149 + t3952*t7161;
  p_output1[41]=t7107*t7149 + t7161*t7241 - 1.13106*(t7124 - 1.*t3175*t7241) + 0.0306*(t7132 - 1.*t3234*t7241);
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_position_leftFoot_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




