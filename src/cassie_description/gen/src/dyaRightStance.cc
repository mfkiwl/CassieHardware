/*
 * Automatically Generated from Mathematica.
 * Thu 26 Aug 2021 14:19:33 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "dyaRightStance.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t30;
  double t65;
  double t127;
  double t192;
  double t366;
  double t698;
  double t992;
  double t1033;
  double t1053;
  double t1057;
  double t1143;
  double t1170;
  double t1216;
  double t1226;
  double t1229;
  double t1349;
  double t1368;
  double t1379;
  double t1667;
  double t1675;
  double t1698;
  double t1702;
  double t1845;
  double t1847;
  double t1860;
  double t1587;
  double t1607;
  double t1615;
  double t635;
  double t718;
  double t748;
  double t767;
  double t957;
  double t963;
  double t1328;
  double t1330;
  double t1346;
  double t1162;
  double t1192;
  double t1206;
  double t2396;
  double t2405;
  double t2410;
  double t1701;
  double t1708;
  double t1726;
  double t1899;
  double t1900;
  double t1911;
  double t2442;
  double t2447;
  double t2453;
  double t2485;
  double t2493;
  double t2085;
  double t2088;
  double t2132;
  double t34;
  double t79;
  double t749;
  double t972;
  double t1317;
  double t1509;
  double t1728;
  double t1960;
  double t2157;
  double t2159;
  double t2261;
  double t2295;
  double t2304;
  double t2316;
  double t2353;
  double t2380;
  double t2381;
  double t2387;
  double t2430;
  double t2438;
  double t2474;
  double t2507;
  double t2520;
  double t2521;
  double t2524;
  double t2528;
  double t2533;
  double t2536;
  double t2539;
  double t2540;
  double t2549;
  double t2596;
  double t2612;
  double t2626;
  double t2630;
  double t2650;
  double t2347;
  double t2569;
  double t2572;
  double t2579;
  double t2927;
  double t2940;
  double t2944;
  double t2961;
  double t2962;
  double t2972;
  double t2988;
  double t2998;
  double t3384;
  double t3386;
  double t3459;
  double t3116;
  double t3119;
  double t3128;
  double t3130;
  double t3135;
  double t2913;
  double t3233;
  double t3286;
  double t3317;
  double t3154;
  double t3156;
  double t2958;
  double t3609;
  double t3620;
  double t3704;
  double t3706;
  double t3707;
  double t3711;
  double t3745;
  double t3784;
  double t3826;
  double t3827;
  double t3828;
  double t3836;
  double t3853;
  double t3876;
  double t3918;
  double t3920;
  double t3925;
  double t3953;
  double t3954;
  double t3959;
  double t3963;
  double t3965;
  double t3977;
  double t3988;
  double t4009;
  double t4011;
  double t4032;
  double t4086;
  double t4091;
  double t4095;
  double t3796;
  double t3799;
  double t3815;
  double t3731;
  double t3754;
  double t3762;
  double t3930;
  double t3936;
  double t3941;
  double t3860;
  double t3910;
  double t3913;
  double t4042;
  double t4058;
  double t4073;
  double t4182;
  double t4187;
  double t4209;
  double t3982;
  double t3994;
  double t4001;
  double t4221;
  double t4222;
  double t4225;
  double t4226;
  double t4229;
  double t4110;
  double t4118;
  double t4123;
  double t3705;
  double t3779;
  double t3791;
  double t3823;
  double t3927;
  double t3960;
  double t4036;
  double t4109;
  double t4125;
  double t4126;
  double t4132;
  double t4134;
  double t4135;
  double t4144;
  double t4161;
  double t4169;
  double t4171;
  double t4181;
  double t4210;
  double t4220;
  double t4224;
  double t4230;
  double t4234;
  double t4245;
  double t4260;
  double t4262;
  double t4266;
  double t4270;
  double t4274;
  double t4284;
  double t4285;
  double t4319;
  double t4320;
  double t4306;
  double t4313;
  double t4317;
  double t4152;
  double t4291;
  double t4293;
  double t4300;
  double t4507;
  double t4509;
  double t4515;
  double t4523;
  double t4554;
  double t4560;
  double t4598;
  double t4599;
  double t4741;
  double t4743;
  double t4744;
  double t4700;
  double t4702;
  double t4712;
  double t4690;
  double t4692;
  double t4502;
  double t4725;
  double t4732;
  double t4733;
  double t4719;
  double t4720;
  double t4521;
  double t4808;
  double t4832;
  double t4362;
  double t4363;
  double t4373;
  double t4448;
  double t4456;
  double t4466;
  double t4494;
  double t4324;
  double t4325;
  double t4331;
  double t4973;
  double t4982;
  double t4984;
  double t5001;
  double t5003;
  double t5006;
  double t5045;
  double t4901;
  double t4910;
  double t4911;
  double t4913;
  double t4914;
  double t4920;
  double t4928;
  double t4932;
  double t4935;
  double t4936;
  double t4956;
  double t4957;
  double t5048;
  double t5050;
  double t5051;
  double t4608;
  double t4631;
  double t4634;
  double t4648;
  double t4649;
  double t4653;
  double t4748;
  double t4750;
  double t4751;
  double t4761;
  double t4766;
  double t4767;
  double t5086;
  double t5089;
  double t4837;
  double t4838;
  double t4839;
  double t4857;
  double t4861;
  double t4862;
  double t5211;
  double t5226;
  double t5206;
  double t5209;
  double t5210;
  double t5212;
  double t5215;
  double t5217;
  double t5219;
  double t5223;
  double t5227;
  double t5232;
  double t5235;
  double t5236;
  double t5238;
  double t5233;
  double t5241;
  double t5243;
  double t5250;
  double t5254;
  double t5255;
  double t5246;
  double t5260;
  double t5276;
  double t5279;
  double t5280;
  double t5283;
  double t5312;
  double t5316;
  double t5318;
  double t5327;
  double t5335;
  double t5336;
  double t5324;
  double t5337;
  double t5342;
  double t5344;
  double t5349;
  double t5355;
  double t5374;
  double t5376;
  double t5377;
  double t5381;
  double t5384;
  double t5385;
  double t5378;
  double t5389;
  double t5390;
  double t5393;
  double t5399;
  double t5400;
  double t5391;
  double t5401;
  double t5405;
  double t5409;
  double t5411;
  double t5413;
  double t5443;
  double t5445;
  double t5450;
  double t5451;
  double t5452;
  double t5454;
  double t5456;
  double t5457;
  double t5458;
  double t5455;
  double t5459;
  double t5462;
  double t5467;
  double t5471;
  double t5472;
  double t5516;
  double t5519;
  double t5520;
  double t5527;
  double t5532;
  double t5534;
  double t5544;
  double t5545;
  double t5550;
  double t5541;
  double t5557;
  double t5560;
  double t5564;
  double t5565;
  double t5569;
  double t5563;
  double t5573;
  double t5577;
  double t5581;
  double t5585;
  double t5586;
  double t5408;
  double t5417;
  double t5423;
  double t5426;
  double t5428;
  double t5429;
  double t5437;
  double t5438;
  double t5441;
  double t5578;
  double t5589;
  double t5591;
  double t5596;
  double t5598;
  double t5604;
  double t5609;
  double t5610;
  double t5611;
  double t5616;
  double t5278;
  double t5284;
  double t5288;
  double t5293;
  double t5297;
  double t5298;
  double t5617;
  double t5653;
  double t5659;
  double t5662;
  double t5663;
  double t5664;
  double t5665;
  double t5668;
  double t5670;
  double t5671;
  double t5666;
  double t5673;
  double t5674;
  double t5677;
  double t5678;
  double t5680;
  double t5618;
  double t5623;
  double t5634;
  double t5636;
  double t5639;
  double t5645;
  double t5646;
  double t5291;
  double t5310;
  double t5311;
  double t5738;
  double t5740;
  double t5741;
  double t5758;
  double t5765;
  double t5767;
  double t5751;
  double t5772;
  double t5775;
  double t5779;
  double t5782;
  double t5786;
  double t5776;
  double t5787;
  double t5792;
  double t5796;
  double t5798;
  double t5802;
  double t5837;
  double t5838;
  double t5840;
  double t5842;
  double t5846;
  double t5847;
  double t5841;
  double t5849;
  double t5851;
  double t5854;
  double t5855;
  double t5858;
  double t5853;
  double t5863;
  double t5865;
  double t5867;
  double t5868;
  double t5870;
  double t5622;
  double t5903;
  double t5904;
  double t5908;
  double t5914;
  double t5915;
  double t5916;
  double t5912;
  double t5918;
  double t5919;
  double t5923;
  double t5924;
  double t5926;
  double t5922;
  double t5930;
  double t5939;
  double t5946;
  double t5949;
  double t5953;
  double t5716;
  double t6013;
  double t6016;
  double t6021;
  double t6026;
  double t6032;
  double t6041;
  double t6044;
  double t6045;
  double t6038;
  double t6052;
  double t6053;
  double t6062;
  double t6063;
  double t6064;
  double t6084;
  double t6085;
  double t6086;
  double t6087;
  double t6095;
  double t6100;
  double t6103;
  double t6107;
  double t6096;
  double t6108;
  double t6109;
  double t6112;
  double t6113;
  double t6114;
  double t6144;
  double t6145;
  double t6146;
  double t6147;
  double t6148;
  double t6159;
  double t6161;
  double t6162;
  double t6157;
  double t6164;
  double t6165;
  double t6168;
  double t6172;
  double t6173;
  double t6300;
  double t6301;
  double t6309;
  double t6314;
  double t6320;
  double t6327;
  double t6333;
  double t6334;
  double t6324;
  double t6336;
  double t6337;
  double t6339;
  double t6340;
  double t6341;
  double t6338;
  double t6347;
  double t6350;
  double t6355;
  double t6364;
  double t6370;
  double t6407;
  double t6421;
  double t6425;
  double t6431;
  double t6444;
  double t6447;
  double t6451;
  double t6470;
  double t6471;
  double t6474;
  double t6477;
  double t6488;
  double t6489;
  double t6490;
  double t6526;
  double t6530;
  double t6537;
  double t6538;
  double t6542;
  double t6544;
  double t6546;
  t30 = Cos(var1[16]);
  t65 = Sin(var1[16]);
  t127 = Cos(var1[17]);
  t192 = -1.*t127;
  t366 = 1. + t192;
  t698 = Sin(var1[17]);
  t992 = -1.*var1[17];
  t1033 = 0.226893 + t992;
  t1053 = Cos(t1033);
  t1057 = -1.*t1053;
  t1143 = 1. + t1057;
  t1170 = Sin(t1033);
  t1216 = -1.*t127*t65;
  t1226 = -1.*t30*t698;
  t1229 = t1216 + t1226;
  t1349 = t30*t127;
  t1368 = -1.*t65*t698;
  t1379 = t1349 + t1368;
  t1667 = Cos(var1[21]);
  t1675 = -1.*t1667;
  t1698 = 1. + t1675;
  t1702 = Sin(var1[21]);
  t1845 = t1053*t1229;
  t1847 = -1.*t1170*t1379;
  t1860 = t1845 + t1847;
  t1587 = t1170*t1229;
  t1607 = t1053*t1379;
  t1615 = t1587 + t1607;
  t635 = -0.049*t366;
  t718 = -0.21*t698;
  t748 = t635 + t718;
  t767 = -0.21*t366;
  t957 = 0.049*t698;
  t963 = t767 + t957;
  t1328 = 0.01841*t1143;
  t1330 = -0.70544*t1170;
  t1346 = t1328 + t1330;
  t1162 = -0.70544*t1143;
  t1192 = -0.01841*t1170;
  t1206 = t1162 + t1192;
  t2396 = t127*t65;
  t2405 = t30*t698;
  t2410 = t2396 + t2405;
  t1701 = -0.02159*t1698;
  t1708 = -1.11344*t1702;
  t1726 = t1701 + t1708;
  t1899 = -1.11344*t1698;
  t1900 = 0.02159*t1702;
  t1911 = t1899 + t1900;
  t2442 = t1053*t2410;
  t2447 = t1170*t1379;
  t2453 = t2442 + t2447;
  t2485 = -1.*t1170*t2410;
  t2493 = t2485 + t1607;
  t2085 = t1667*t1860;
  t2088 = -1.*t1615*t1702;
  t2132 = t2085 + t2088;
  t34 = 0.049*t30;
  t79 = -0.09*t65;
  t749 = t30*t748;
  t972 = -1.*t65*t963;
  t1317 = t1206*t1229;
  t1509 = t1346*t1379;
  t1728 = t1615*t1726;
  t1960 = t1860*t1911;
  t2157 = -1.11344*t2132;
  t2159 = t1667*t1615;
  t2261 = t1860*t1702;
  t2295 = t2159 + t2261;
  t2304 = -0.02159*t2295;
  t2316 = t34 + t79 + t749 + t972 + t1317 + t1509 + t1728 + t1960 + t2157 + t2304;
  t2353 = 0.09*t30;
  t2380 = 0.049*t65;
  t2381 = t65*t748;
  t2387 = t30*t963;
  t2430 = t1346*t2410;
  t2438 = t1206*t1379;
  t2474 = t2453*t1726;
  t2507 = t2493*t1911;
  t2520 = t1667*t2453;
  t2521 = t2493*t1702;
  t2524 = t2520 + t2521;
  t2528 = -0.02159*t2524;
  t2533 = t1667*t2493;
  t2536 = -1.*t2453*t1702;
  t2539 = t2533 + t2536;
  t2540 = -1.11344*t2539;
  t2549 = t2353 + t2380 + t2381 + t2387 + t2430 + t2438 + t2474 + t2507 + t2528 + t2540;
  t2596 = 0.02159*t1667;
  t2612 = t2596 + t1708;
  t2626 = -1.11344*t1667;
  t2630 = -0.02159*t1702;
  t2650 = t2626 + t2630;
  t2347 = Power(t2316,2);
  t2569 = Power(t2549,2);
  t2572 = 0.00002025 + t2347 + t2569;
  t2579 = 1/Sqrt(t2572);
  t2927 = -1.*t30*t127;
  t2940 = t65*t698;
  t2944 = t2927 + t2940;
  t2961 = t1170*t2944;
  t2962 = t1845 + t2961;
  t2972 = -1.*t1170*t1229;
  t2988 = t1053*t2944;
  t2998 = t2972 + t2988;
  t3384 = t1170*t2410;
  t3386 = t1587 + t3384;
  t3459 = t1845 + t2442;
  t3116 = 0.049*t127;
  t3119 = t3116 + t718;
  t3128 = -0.21*t127;
  t3130 = -0.049*t698;
  t3135 = t3128 + t3130;
  t2913 = t1346*t1229;
  t3233 = 0.01841*t1053;
  t3286 = 0.70544*t1170;
  t3317 = t3233 + t3286;
  t3154 = 0.70544*t1053;
  t3156 = t3154 + t1192;
  t2958 = t1206*t2944;
  t3609 = t2447 + t2961;
  t3620 = t1607 + t2988;
  t3704 = Cos(var1[8]);
  t3706 = Cos(var1[9]);
  t3707 = -1.*t3706;
  t3711 = 1. + t3707;
  t3745 = Sin(var1[9]);
  t3784 = Sin(var1[8]);
  t3826 = -1.*var1[9];
  t3827 = 0.226893 + t3826;
  t3828 = Cos(t3827);
  t3836 = -1.*t3828;
  t3853 = 1. + t3836;
  t3876 = Sin(t3827);
  t3918 = -1.*t3704*t3745;
  t3920 = -1.*t3706*t3784;
  t3925 = t3918 + t3920;
  t3953 = t3706*t3704;
  t3954 = -1.*t3745*t3784;
  t3959 = t3953 + t3954;
  t3963 = Cos(var1[13]);
  t3965 = -1.*t3963;
  t3977 = 1. + t3965;
  t3988 = Sin(var1[13]);
  t4009 = t3876*t3925;
  t4011 = t3828*t3959;
  t4032 = t4009 + t4011;
  t4086 = t3828*t3925;
  t4091 = -1.*t3876*t3959;
  t4095 = t4086 + t4091;
  t3796 = -0.21*t3711;
  t3799 = 0.049*t3745;
  t3815 = t3796 + t3799;
  t3731 = -0.049*t3711;
  t3754 = -0.21*t3745;
  t3762 = t3731 + t3754;
  t3930 = 0.01841*t3853;
  t3936 = -0.70544*t3876;
  t3941 = t3930 + t3936;
  t3860 = -0.70544*t3853;
  t3910 = -0.01841*t3876;
  t3913 = t3860 + t3910;
  t4042 = -1.11344*t3977;
  t4058 = 0.02159*t3988;
  t4073 = t4042 + t4058;
  t4182 = t3704*t3745;
  t4187 = t3706*t3784;
  t4209 = t4182 + t4187;
  t3982 = -0.02159*t3977;
  t3994 = -1.11344*t3988;
  t4001 = t3982 + t3994;
  t4221 = -1.*t3876*t4209;
  t4222 = t4221 + t4011;
  t4225 = t3828*t4209;
  t4226 = t3876*t3959;
  t4229 = t4225 + t4226;
  t4110 = -1.*t3988*t4032;
  t4118 = t3963*t4095;
  t4123 = t4110 + t4118;
  t3705 = 0.049*t3704;
  t3779 = t3704*t3762;
  t3791 = -0.09*t3784;
  t3823 = -1.*t3815*t3784;
  t3927 = t3913*t3925;
  t3960 = t3941*t3959;
  t4036 = t4001*t4032;
  t4109 = t4073*t4095;
  t4125 = -1.11344*t4123;
  t4126 = t3963*t4032;
  t4132 = t3988*t4095;
  t4134 = t4126 + t4132;
  t4135 = -0.02159*t4134;
  t4144 = t3705 + t3779 + t3791 + t3823 + t3927 + t3960 + t4036 + t4109 + t4125 + t4135;
  t4161 = 0.09*t3704;
  t4169 = t3704*t3815;
  t4171 = 0.049*t3784;
  t4181 = t3762*t3784;
  t4210 = t3941*t4209;
  t4220 = t3913*t3959;
  t4224 = t4073*t4222;
  t4230 = t4001*t4229;
  t4234 = t3988*t4222;
  t4245 = t3963*t4229;
  t4260 = t4234 + t4245;
  t4262 = -0.02159*t4260;
  t4266 = t3963*t4222;
  t4270 = -1.*t3988*t4229;
  t4274 = t4266 + t4270;
  t4284 = -1.11344*t4274;
  t4285 = t4161 + t4169 + t4171 + t4181 + t4210 + t4220 + t4224 + t4230 + t4262 + t4284;
  t4319 = 0.02159*t3963;
  t4320 = t4319 + t3994;
  t4306 = -1.11344*t3963;
  t4313 = -0.02159*t3988;
  t4317 = t4306 + t4313;
  t4152 = Power(t4144,2);
  t4291 = Power(t4285,2);
  t4293 = 0.00002025 + t4152 + t4291;
  t4300 = 1/Sqrt(t4293);
  t4507 = -1.*t3706*t3704;
  t4509 = t3745*t3784;
  t4515 = t4507 + t4509;
  t4523 = -1.*t3876*t3925;
  t4554 = t3828*t4515;
  t4560 = t4523 + t4554;
  t4598 = t3876*t4515;
  t4599 = t4086 + t4598;
  t4741 = t4086 + t4225;
  t4743 = t3876*t4209;
  t4744 = t4009 + t4743;
  t4700 = -0.21*t3706;
  t4702 = -0.049*t3745;
  t4712 = t4700 + t4702;
  t4690 = 0.049*t3706;
  t4692 = t4690 + t3754;
  t4502 = t3941*t3925;
  t4725 = 0.01841*t3828;
  t4732 = 0.70544*t3876;
  t4733 = t4725 + t4732;
  t4719 = 0.70544*t3828;
  t4720 = t4719 + t3910;
  t4521 = t3913*t4515;
  t4808 = t4011 + t4554;
  t4832 = t4226 + t4598;
  t4362 = -1.*t3988*t4222;
  t4363 = -1.*t3963*t4229;
  t4373 = t4362 + t4363;
  t4448 = -0.09*t3704;
  t4456 = -1.*t3704*t3815;
  t4466 = -0.049*t3784;
  t4494 = -1.*t3762*t3784;
  t4324 = -1.*t3963*t4032;
  t4325 = -1.*t3988*t4095;
  t4331 = t4324 + t4325;
  t4973 = -1.*t3941*t4209;
  t4982 = -1.*t3913*t3959;
  t4984 = -1.*t4073*t4222;
  t5001 = -1.*t4001*t4229;
  t5003 = 0.02159*t4260;
  t5006 = 1.11344*t4274;
  t5045 = t4448 + t4456 + t4466 + t4494 + t4973 + t4982 + t4984 + t5001 + t5003 + t5006;
  t4901 = -0.049*t3704;
  t4910 = -1.*t3704*t3762;
  t4911 = 0.09*t3784;
  t4913 = t3815*t3784;
  t4914 = -1.*t3913*t3925;
  t4920 = -1.*t3941*t3959;
  t4928 = -1.*t4001*t4032;
  t4932 = -1.*t4073*t4095;
  t4935 = 1.11344*t4123;
  t4936 = 0.02159*t4134;
  t4956 = t4901 + t4910 + t4911 + t4913 + t4914 + t4920 + t4928 + t4932 + t4935 + t4936;
  t4957 = Power(t4956,2);
  t5048 = Power(t5045,2);
  t5050 = t4957 + t5048;
  t5051 = 1/t5050;
  t4608 = t3988*t4560;
  t4631 = t3963*t4599;
  t4634 = t4608 + t4631;
  t4648 = t3963*t4560;
  t4649 = -1.*t3988*t4599;
  t4653 = t4648 + t4649;
  t4748 = t3988*t4741;
  t4750 = t3963*t4744;
  t4751 = t4748 + t4750;
  t4761 = t3963*t4741;
  t4766 = -1.*t3988*t4744;
  t4767 = t4761 + t4766;
  t5086 = -1.*t3941*t3925;
  t5089 = -1.*t3913*t4515;
  t4837 = t3988*t4808;
  t4838 = t3963*t4832;
  t4839 = t4837 + t4838;
  t4857 = t3963*t4808;
  t4861 = -1.*t3988*t4832;
  t4862 = t4857 + t4861;
  t5211 = Cos(var1[4]);
  t5226 = Cos(var1[6]);
  t5206 = Cos(var1[7]);
  t5209 = Sin(var1[4]);
  t5210 = -1.*t5206*t5209;
  t5212 = Sin(var1[6]);
  t5215 = Sin(var1[7]);
  t5217 = t5211*t5212*t5215;
  t5219 = t5210 + t5217;
  t5223 = t3704*t5219;
  t5227 = t5211*t5226*t3784;
  t5232 = t5223 + t5227;
  t5235 = t5211*t5226*t3704;
  t5236 = -1.*t5219*t3784;
  t5238 = t5235 + t5236;
  t5233 = -1.*t3745*t5232;
  t5241 = t3706*t5238;
  t5243 = t5233 + t5241;
  t5250 = t3706*t5232;
  t5254 = t3745*t5238;
  t5255 = t5250 + t5254;
  t5246 = t3876*t5243;
  t5260 = t3828*t5255;
  t5276 = t5246 + t5260;
  t5279 = t3828*t5243;
  t5280 = -1.*t3876*t5255;
  t5283 = t5279 + t5280;
  t5312 = -1.*t5226*t5206*t3704*t3745;
  t5316 = -1.*t3706*t5226*t5206*t3784;
  t5318 = t5312 + t5316;
  t5327 = t3706*t5226*t5206*t3704;
  t5335 = -1.*t5226*t5206*t3745*t3784;
  t5336 = t5327 + t5335;
  t5324 = t3876*t5318;
  t5337 = t3828*t5336;
  t5342 = t5324 + t5337;
  t5344 = t3828*t5318;
  t5349 = -1.*t3876*t5336;
  t5355 = t5344 + t5349;
  t5374 = t5226*t3704*t5215;
  t5376 = -1.*t5212*t3784;
  t5377 = t5374 + t5376;
  t5381 = -1.*t3704*t5212;
  t5384 = -1.*t5226*t5215*t3784;
  t5385 = t5381 + t5384;
  t5378 = -1.*t3745*t5377;
  t5389 = t3706*t5385;
  t5390 = t5378 + t5389;
  t5393 = t3706*t5377;
  t5399 = t3745*t5385;
  t5400 = t5393 + t5399;
  t5391 = t3876*t5390;
  t5401 = t3828*t5400;
  t5405 = t5391 + t5401;
  t5409 = t3828*t5390;
  t5411 = -1.*t3876*t5400;
  t5413 = t5409 + t5411;
  t5443 = t5206*t5209*t5212;
  t5445 = -1.*t5211*t5215;
  t5450 = t5443 + t5445;
  t5451 = -1.*t3704*t3745*t5450;
  t5452 = -1.*t3706*t5450*t3784;
  t5454 = t5451 + t5452;
  t5456 = t3706*t3704*t5450;
  t5457 = -1.*t3745*t5450*t3784;
  t5458 = t5456 + t5457;
  t5455 = t3876*t5454;
  t5459 = t3828*t5458;
  t5462 = t5455 + t5459;
  t5467 = t3828*t5454;
  t5471 = -1.*t3876*t5458;
  t5472 = t5467 + t5471;
  t5516 = t5211*t5206;
  t5519 = t5209*t5212*t5215;
  t5520 = t5516 + t5519;
  t5527 = t3704*t5520;
  t5532 = t5226*t5209*t3784;
  t5534 = t5527 + t5532;
  t5544 = t5226*t3704*t5209;
  t5545 = -1.*t5520*t3784;
  t5550 = t5544 + t5545;
  t5541 = -1.*t3745*t5534;
  t5557 = t3706*t5550;
  t5560 = t5541 + t5557;
  t5564 = t3706*t5534;
  t5565 = t3745*t5550;
  t5569 = t5564 + t5565;
  t5563 = t3876*t5560;
  t5573 = t3828*t5569;
  t5577 = t5563 + t5573;
  t5581 = t3828*t5560;
  t5585 = -1.*t3876*t5569;
  t5586 = t5581 + t5585;
  t5408 = -1.*t3988*t5405;
  t5417 = t3963*t5413;
  t5423 = t5408 + t5417;
  t5426 = 0.766044*t5423;
  t5428 = t3963*t5405;
  t5429 = t3988*t5413;
  t5437 = t5428 + t5429;
  t5438 = 0.642788*t5437;
  t5441 = t5426 + t5438;
  t5578 = -1.*t3988*t5577;
  t5589 = t3963*t5586;
  t5591 = t5578 + t5589;
  t5596 = 0.766044*t5591;
  t5598 = t3963*t5577;
  t5604 = t3988*t5586;
  t5609 = t5598 + t5604;
  t5610 = 0.642788*t5609;
  t5611 = t5596 + t5610;
  t5616 = Power(t5441,2);
  t5278 = -1.*t3988*t5276;
  t5284 = t3963*t5283;
  t5288 = t5278 + t5284;
  t5293 = t3963*t5276;
  t5297 = t3988*t5283;
  t5298 = t5293 + t5297;
  t5617 = Power(t5611,2);
  t5653 = t5211*t5206*t5212;
  t5659 = t5209*t5215;
  t5662 = t5653 + t5659;
  t5663 = -1.*t3704*t3745*t5662;
  t5664 = -1.*t3706*t5662*t3784;
  t5665 = t5663 + t5664;
  t5668 = t3706*t3704*t5662;
  t5670 = -1.*t3745*t5662*t3784;
  t5671 = t5668 + t5670;
  t5666 = t3876*t5665;
  t5673 = t3828*t5671;
  t5674 = t5666 + t5673;
  t5677 = t3828*t5665;
  t5678 = -1.*t3876*t5671;
  t5680 = t5677 + t5678;
  t5618 = t5616 + t5617;
  t5623 = -0.766044*t5288;
  t5634 = -0.642788*t5298;
  t5636 = t5623 + t5634;
  t5639 = Power(t5636,2);
  t5645 = t5616 + t5639 + t5617;
  t5646 = 1/t5645;
  t5291 = 0.766044*t5288;
  t5310 = 0.642788*t5298;
  t5311 = t5291 + t5310;
  t5738 = -1.*t3704*t5212*t5215;
  t5740 = -1.*t5226*t3784;
  t5741 = t5738 + t5740;
  t5758 = -1.*t5226*t3704;
  t5765 = t5212*t5215*t3784;
  t5767 = t5758 + t5765;
  t5751 = -1.*t3745*t5741;
  t5772 = t3706*t5767;
  t5775 = t5751 + t5772;
  t5779 = t3706*t5741;
  t5782 = t3745*t5767;
  t5786 = t5779 + t5782;
  t5776 = t3876*t5775;
  t5787 = t3828*t5786;
  t5792 = t5776 + t5787;
  t5796 = t3828*t5775;
  t5798 = -1.*t3876*t5786;
  t5802 = t5796 + t5798;
  t5837 = t5226*t3704*t5209*t5215;
  t5838 = -1.*t5209*t5212*t3784;
  t5840 = t5837 + t5838;
  t5842 = -1.*t3704*t5209*t5212;
  t5846 = -1.*t5226*t5209*t5215*t3784;
  t5847 = t5842 + t5846;
  t5841 = -1.*t3745*t5840;
  t5849 = t3706*t5847;
  t5851 = t5841 + t5849;
  t5854 = t3706*t5840;
  t5855 = t3745*t5847;
  t5858 = t5854 + t5855;
  t5853 = t3876*t5851;
  t5863 = t3828*t5858;
  t5865 = t5853 + t5863;
  t5867 = t3828*t5851;
  t5868 = -1.*t3876*t5858;
  t5870 = t5867 + t5868;
  t5622 = 1/Sqrt(t5618);
  t5903 = t5211*t5226*t3704*t5215;
  t5904 = -1.*t5211*t5212*t3784;
  t5908 = t5903 + t5904;
  t5914 = -1.*t5211*t3704*t5212;
  t5915 = -1.*t5211*t5226*t5215*t3784;
  t5916 = t5914 + t5915;
  t5912 = -1.*t3745*t5908;
  t5918 = t3706*t5916;
  t5919 = t5912 + t5918;
  t5923 = t3706*t5908;
  t5924 = t3745*t5916;
  t5926 = t5923 + t5924;
  t5922 = t3876*t5919;
  t5930 = t3828*t5926;
  t5939 = t5922 + t5930;
  t5946 = t3828*t5919;
  t5949 = -1.*t3876*t5926;
  t5953 = t5946 + t5949;
  t5716 = Sqrt(t5618);
  t6013 = -1.*t5226*t3704*t5215;
  t6016 = t5212*t3784;
  t6021 = t6013 + t6016;
  t6026 = t3745*t6021;
  t6032 = t6026 + t5389;
  t6041 = t3706*t6021;
  t6044 = -1.*t3745*t5385;
  t6045 = t6041 + t6044;
  t6038 = -1.*t3876*t6032;
  t6052 = t3828*t6045;
  t6053 = t6038 + t6052;
  t6062 = t3828*t6032;
  t6063 = t3876*t6045;
  t6064 = t6062 + t6063;
  t6084 = -1.*t3704*t5520;
  t6085 = -1.*t5226*t5209*t3784;
  t6086 = t6084 + t6085;
  t6087 = t3745*t6086;
  t6095 = t6087 + t5557;
  t6100 = t3706*t6086;
  t6103 = -1.*t3745*t5550;
  t6107 = t6100 + t6103;
  t6096 = -1.*t3876*t6095;
  t6108 = t3828*t6107;
  t6109 = t6096 + t6108;
  t6112 = t3828*t6095;
  t6113 = t3876*t6107;
  t6114 = t6112 + t6113;
  t6144 = -1.*t3704*t5219;
  t6145 = -1.*t5211*t5226*t3784;
  t6146 = t6144 + t6145;
  t6147 = t3745*t6146;
  t6148 = t6147 + t5241;
  t6159 = t3706*t6146;
  t6161 = -1.*t3745*t5238;
  t6162 = t6159 + t6161;
  t6157 = -1.*t3876*t6148;
  t6164 = t3828*t6162;
  t6165 = t6157 + t6164;
  t6168 = t3828*t6148;
  t6172 = t3876*t6162;
  t6173 = t6168 + t6172;
  t6300 = -1.*t5211*t5206;
  t6301 = -1.*t5209*t5212*t5215;
  t6309 = t6300 + t6301;
  t6314 = t3704*t6309;
  t6320 = t6314 + t6085;
  t6327 = -1.*t5226*t3704*t5209;
  t6333 = -1.*t6309*t3784;
  t6334 = t6327 + t6333;
  t6324 = -1.*t3745*t6320;
  t6336 = t3706*t6334;
  t6337 = t6324 + t6336;
  t6339 = t3706*t6320;
  t6340 = t3745*t6334;
  t6341 = t6339 + t6340;
  t6338 = t3876*t6337;
  t6347 = t3828*t6341;
  t6350 = t6338 + t6347;
  t6355 = t3828*t6337;
  t6364 = -1.*t3876*t6341;
  t6370 = t6355 + t6364;
  t6407 = -1.*t3706*t5232;
  t6421 = t6407 + t6161;
  t6425 = t3828*t6421;
  t6431 = t6425 + t5260;
  t6444 = t3876*t6421;
  t6447 = t3876*t5255;
  t6451 = t6444 + t6447;
  t6470 = -1.*t3706*t5377;
  t6471 = t6470 + t6044;
  t6474 = t3828*t6471;
  t6477 = t6474 + t5401;
  t6488 = t3876*t6471;
  t6489 = t3876*t5400;
  t6490 = t6488 + t6489;
  t6526 = -1.*t3706*t5534;
  t6530 = t6526 + t6103;
  t6537 = t3828*t6530;
  t6538 = t6537 + t5573;
  t6542 = t3876*t6530;
  t6544 = t3876*t5569;
  t6546 = t6542 + t6544;
  p_output1[0]=var2[3];
  p_output1[1]=var2[4];
  p_output1[2]=var2[15];
  p_output1[3]=0.5*t2579*(2.*t2316*t2549 + 2.*t2316*(t2913 + t2958 + t1726*t2962 + t1911*t2998 - 1.11344*(-1.*t1702*t2962 + t1667*t2998) - 0.02159*(t1667*t2962 + t1702*t2998) - 0.09*t30 - 0.049*t65 - 1.*t65*t748 - 1.*t30*t963))*var2[16] + 0.5*t2579*(2.*t2316*(t2913 + t2958 + t30*t3135 + t1379*t3156 + t1229*t3317 + t1726*t3609 + t1911*t3620 - 1.11344*(-1.*t1702*t3609 + t1667*t3620) - 0.02159*(t1667*t3609 + t1702*t3620) - 1.*t3119*t65) + 2.*t2549*(t1317 + t1509 + t30*t3119 + t2410*t3156 + t1379*t3317 + t1726*t3386 + t1911*t3459 - 1.11344*(-1.*t1702*t3386 + t1667*t3459) - 0.02159*(t1667*t3386 + t1702*t3459) + t3135*t65))*var2[17] + 0.5*t2579*(2.*t2316*(-1.11344*(-1.*t1615*t1667 - 1.*t1702*t1860) - 0.02159*t2132 + t1860*t2612 + t1615*t2650) + 2.*t2549*(-1.11344*(-1.*t1667*t2453 - 1.*t1702*t2493) - 0.02159*t2539 + t2493*t2612 + t2453*t2650))*var2[21];
  p_output1[4]=0.5*t4300*(2.*t4144*t4285 + 2.*t4144*(t4448 + t4456 + t4466 + t4494 + t4502 + t4521 + t4073*t4560 + t4001*t4599 - 0.02159*t4634 - 1.11344*t4653))*var2[8] + 0.5*t4300*(2.*t4285*(t3927 + t3960 + t3704*t4692 + t3784*t4712 + t4209*t4720 + t3959*t4733 + t4073*t4741 + t4001*t4744 - 0.02159*t4751 - 1.11344*t4767) + 2.*t4144*(t4502 + t4521 - 1.*t3784*t4692 + t3704*t4712 + t3959*t4720 + t3925*t4733 + t4073*t4808 + t4001*t4832 - 0.02159*t4839 - 1.11344*t4862))*var2[9] + 0.5*t4300*(2.*t4144*(-0.02159*t4123 + t4032*t4317 + t4095*t4320 - 1.11344*t4331) + 2.*t4285*(-0.02159*t4274 + t4229*t4317 + t4222*t4320 - 1.11344*t4373))*var2[13];
  p_output1[5]=(t4144*t4956*t5051 + t5045*t5051*(t4161 + t4169 + t4171 + t4181 - 1.*t4073*t4560 - 1.*t4001*t4599 + 0.02159*t4634 + 1.11344*t4653 + t5086 + t5089))*var2[8] + (t4144*(-1.*t3704*t4692 - 1.*t3784*t4712 - 1.*t4209*t4720 - 1.*t3959*t4733 - 1.*t4073*t4741 - 1.*t4001*t4744 + 0.02159*t4751 + 1.11344*t4767 + t4914 + t4920)*t5051 + t5045*t5051*(t3784*t4692 - 1.*t3704*t4712 - 1.*t3959*t4720 - 1.*t3925*t4733 - 1.*t4073*t4808 - 1.*t4001*t4832 + 0.02159*t4839 + 1.11344*t4862 + t5086 + t5089))*var2[9] + (t4144*(0.02159*t4274 - 1.*t4229*t4317 - 1.*t4222*t4320 + 1.11344*t4373)*t5051 + (0.02159*t4123 - 1.*t4032*t4317 - 1.*t4095*t4320 + 1.11344*t4331)*t5045*t5051)*var2[13];
  p_output1[6]=var2[6];
  p_output1[7]=var2[7];
  p_output1[8]=(Power(t5311,2)*t5611*t5622*t5646 + t5646*t5716*(-0.766044*(-1.*t3988*t6350 + t3963*t6370) - 0.642788*(t3963*t6350 + t3988*t6370)))*var2[4] + (0.5*t5311*t5622*t5646*(2.*t5441*(0.766044*(-1.*t3988*t5792 + t3963*t5802) + 0.642788*(t3963*t5792 + t3988*t5802)) + 2.*t5611*(0.766044*(-1.*t3988*t5865 + t3963*t5870) + 0.642788*(t3963*t5865 + t3988*t5870))) + t5646*t5716*(-0.766044*(-1.*t3988*t5939 + t3963*t5953) - 0.642788*(t3963*t5939 + t3988*t5953)))*var2[6] + (0.5*t5311*(2.*(0.766044*(-1.*t3988*t5342 + t3963*t5355) + 0.642788*(t3963*t5342 + t3988*t5355))*t5441 + 2.*(0.766044*(-1.*t3988*t5462 + t3963*t5472) + 0.642788*(t3963*t5462 + t3988*t5472))*t5611)*t5622*t5646 + t5646*(-0.766044*(-1.*t3988*t5674 + t3963*t5680) - 0.642788*(t3963*t5674 + t3988*t5680))*t5716)*var2[7] + (0.5*t5311*t5622*t5646*(2.*t5441*(0.642788*(t3988*t6053 + t3963*t6064) + 0.766044*(t3963*t6053 - 1.*t3988*t6064)) + 2.*t5611*(0.642788*(t3988*t6109 + t3963*t6114) + 0.766044*(t3963*t6109 - 1.*t3988*t6114))) + t5646*t5716*(-0.642788*(t3988*t6165 + t3963*t6173) - 0.766044*(t3963*t6165 - 1.*t3988*t6173)))*var2[8] + (t5646*t5716*(-0.642788*(t3988*t6431 + t3963*t6451) - 0.766044*(t3963*t6431 - 1.*t3988*t6451)) + 0.5*t5311*t5622*t5646*(2.*t5441*(0.642788*(t3988*t6477 + t3963*t6490) + 0.766044*(t3963*t6477 - 1.*t3988*t6490)) + 2.*t5611*(0.642788*(t3988*t6538 + t3963*t6546) + 0.766044*(t3963*t6538 - 1.*t3988*t6546))))*var2[9] + (0.5*t5311*(2.*(0.766044*(-1.*t3963*t5405 - 1.*t3988*t5413) + 0.642788*t5423)*t5441 + 2.*(0.766044*(-1.*t3963*t5577 - 1.*t3988*t5586) + 0.642788*t5591)*t5611)*t5622*t5646 + (-0.766044*(-1.*t3963*t5276 - 1.*t3988*t5283) - 0.642788*t5288)*t5646*t5716)*var2[13];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void dyaRightStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




