/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:32 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftToe_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1082;
  double t271;
  double t946;
  double t1003;
  double t1072;
  double t1096;
  double t1139;
  double t1244;
  double t1301;
  double t1329;
  double t1339;
  double t2166;
  double t2191;
  double t2299;
  double t2353;
  double t1751;
  double t2078;
  double t2143;
  double t2673;
  double t2702;
  double t2708;
  double t3849;
  double t4032;
  double t4259;
  double t4268;
  double t3647;
  double t3683;
  double t3727;
  double t4398;
  double t4445;
  double t4519;
  double t4922;
  double t4930;
  double t4935;
  double t5212;
  double t5408;
  double t5506;
  double t5527;
  double t5736;
  double t5746;
  double t5784;
  double t5804;
  double t5824;
  double t5825;
  double t5841;
  double t5862;
  double t5864;
  double t5871;
  double t5942;
  double t5974;
  double t5978;
  double t6061;
  double t6064;
  double t6133;
  double t6214;
  double t6317;
  double t6391;
  double t6394;
  double t6524;
  double t6525;
  double t6549;
  double t6559;
  double t6560;
  double t6576;
  double t6599;
  double t6692;
  double t6718;
  double t6719;
  double t6784;
  double t6809;
  double t6811;
  double t399;
  double t700;
  double t781;
  double t811;
  double t1373;
  double t1396;
  double t6940;
  double t6965;
  double t6971;
  double t2319;
  double t2356;
  double t2359;
  double t2723;
  double t2870;
  double t2973;
  double t7017;
  double t7024;
  double t7025;
  double t7041;
  double t7059;
  double t7061;
  double t4265;
  double t4270;
  double t4285;
  double t4552;
  double t4692;
  double t4752;
  double t5143;
  double t5266;
  double t5338;
  double t7108;
  double t7114;
  double t7117;
  double t7122;
  double t7124;
  double t7126;
  double t5585;
  double t5588;
  double t5674;
  double t5831;
  double t5849;
  double t5857;
  double t7129;
  double t7130;
  double t7135;
  double t7144;
  double t7150;
  double t7165;
  double t5895;
  double t5936;
  double t5941;
  double t6168;
  double t6246;
  double t6266;
  double t7215;
  double t7216;
  double t7243;
  double t7261;
  double t7263;
  double t7270;
  double t6423;
  double t6462;
  double t6507;
  double t6598;
  double t6612;
  double t6690;
  double t7282;
  double t7284;
  double t7288;
  double t7313;
  double t7325;
  double t7326;
  double t6773;
  double t6779;
  double t6780;
  double t7328;
  double t7333;
  double t7334;
  double t7338;
  double t7343;
  double t7348;
  double t7441;
  double t7442;
  double t7444;
  double t7519;
  double t7561;
  double t7574;
  double t7608;
  double t7615;
  double t7619;
  double t7628;
  double t7633;
  double t7689;
  double t7705;
  double t7712;
  double t7723;
  double t7758;
  double t7759;
  double t7760;
  double t7782;
  double t7790;
  double t7802;
  double t7821;
  double t7822;
  double t7824;
  double t7830;
  double t7831;
  double t7843;
  double t7877;
  double t7879;
  double t7887;
  double t7902;
  double t7909;
  double t7911;
  double t7979;
  double t7980;
  double t7981;
  double t8013;
  double t8026;
  double t8035;
  double t8049;
  double t8053;
  double t8056;
  double t8062;
  double t8069;
  double t8079;
  double t8101;
  double t8102;
  double t8126;
  double t8129;
  double t8130;
  double t8138;
  double t8147;
  double t8150;
  double t8151;
  double t8154;
  double t8168;
  double t8176;
  double t8186;
  double t8187;
  double t8189;
  double t8194;
  double t8199;
  double t8200;
  double t8204;
  double t8205;
  double t8206;
  double t8241;
  double t8250;
  double t8251;
  double t8269;
  double t8274;
  double t8282;
  double t8284;
  double t8285;
  double t8286;
  double t8288;
  double t8289;
  double t8293;
  double t8297;
  double t8301;
  double t8305;
  double t8313;
  double t8314;
  double t8315;
  double t8317;
  double t8318;
  double t8319;
  double t8329;
  double t8330;
  double t8334;
  double t8351;
  double t8352;
  double t8361;
  double t8366;
  double t8373;
  double t8378;
  double t8417;
  double t8428;
  double t8432;
  double t8464;
  double t8465;
  double t8466;
  double t8471;
  double t8472;
  double t8475;
  double t8487;
  double t8500;
  double t8503;
  double t8512;
  double t8518;
  double t8520;
  double t8529;
  double t8530;
  double t8533;
  double t8539;
  double t8544;
  double t8546;
  double t8549;
  double t8551;
  double t8552;
  double t8556;
  double t8558;
  double t8559;
  double t8562;
  double t8566;
  double t8572;
  double t8628;
  double t8629;
  double t8630;
  double t8651;
  double t8652;
  double t8655;
  double t8660;
  double t8665;
  double t8666;
  double t8669;
  double t8670;
  double t8671;
  double t8675;
  double t8677;
  double t8678;
  double t8681;
  double t8682;
  double t8687;
  double t8690;
  double t8691;
  double t8695;
  double t8700;
  double t8702;
  double t8703;
  double t8705;
  double t8708;
  double t8712;
  double t8716;
  double t8718;
  double t8719;
  double t8734;
  double t8736;
  double t8737;
  double t8744;
  double t8747;
  double t8748;
  double t8758;
  double t8760;
  double t8762;
  double t8765;
  double t8766;
  double t8767;
  double t8771;
  double t8773;
  double t8775;
  double t8782;
  double t8785;
  double t8786;
  double t8788;
  double t8789;
  double t8790;
  double t8792;
  double t8793;
  double t8794;
  double t8796;
  double t8797;
  double t8798;
  double t8802;
  double t8803;
  double t8804;
  double t8827;
  double t8829;
  double t8830;
  double t8841;
  double t8843;
  double t8844;
  double t8848;
  double t8849;
  double t8850;
  double t8853;
  double t8855;
  double t8857;
  double t8859;
  double t8860;
  double t8861;
  double t8864;
  double t8865;
  double t8866;
  double t8883;
  double t8884;
  double t8885;
  double t8889;
  double t8890;
  double t8894;
  double t8898;
  double t8899;
  double t8900;
  double t8909;
  double t8910;
  double t8911;
  double t8938;
  double t8939;
  double t8940;
  double t8943;
  double t8946;
  double t8947;
  double t8951;
  double t8952;
  double t8953;
  double t8955;
  double t8957;
  double t8958;
  double t8961;
  double t8968;
  double t8969;
  double t8971;
  double t8973;
  double t8974;
  double t8979;
  double t8981;
  double t8982;
  double t8984;
  double t8987;
  double t8990;
  double t8992;
  double t8994;
  double t8995;
  double t9038;
  double t9039;
  double t9040;
  double t9047;
  double t9050;
  double t9052;
  double t9053;
  double t9054;
  double t9059;
  double t9068;
  double t9071;
  double t9073;
  double t9074;
  double t9076;
  double t9079;
  double t9081;
  double t9082;
  double t9084;
  double t9087;
  double t9088;
  double t9092;
  double t9093;
  double t9095;
  double t9097;
  double t9099;
  double t9100;
  double t9104;
  double t9107;
  double t9109;
  double t9137;
  double t9139;
  double t9140;
  double t9145;
  double t9148;
  double t9149;
  double t9159;
  double t9161;
  double t9162;
  double t9164;
  double t9166;
  double t9168;
  double t9176;
  double t9178;
  double t9179;
  double t9182;
  double t9183;
  double t9184;
  double t9187;
  double t9191;
  double t9193;
  double t9196;
  double t9197;
  double t9199;
  double t9128;
  double t9129;
  double t9133;
  double t9141;
  double t9142;
  double t7076;
  double t7077;
  double t7105;
  double t9232;
  double t9235;
  double t9236;
  double t9240;
  double t9241;
  double t9242;
  double t9245;
  double t9247;
  double t9248;
  double t9252;
  double t9254;
  double t9255;
  double t9258;
  double t9261;
  double t9264;
  double t9267;
  double t9268;
  double t9270;
  double t9301;
  double t9303;
  double t9305;
  double t9295;
  double t9297;
  double t9298;
  double t9308;
  double t9311;
  double t9316;
  double t9327;
  double t9329;
  double t9331;
  double t9333;
  double t9336;
  double t9338;
  double t9343;
  double t9344;
  double t9345;
  double t9347;
  double t9349;
  double t9351;
  double t9353;
  double t9356;
  double t9357;
  double t9360;
  double t9361;
  double t9362;
  double t9386;
  double t9395;
  double t9402;
  double t9431;
  double t9432;
  double t9433;
  double t9436;
  double t9437;
  double t9438;
  double t9441;
  double t9443;
  double t9444;
  double t9447;
  double t9449;
  double t9451;
  double t9453;
  double t9454;
  double t9456;
  double t9459;
  double t9460;
  double t9461;
  double t9464;
  double t9465;
  double t9467;
  double t9470;
  double t9472;
  double t9475;
  double t9382;
  double t9383;
  double t9406;
  double t9408;
  double t9410;
  double t9501;
  double t9502;
  double t9503;
  double t9508;
  double t9511;
  double t9516;
  double t9517;
  double t9519;
  double t9521;
  double t9523;
  double t9526;
  double t9529;
  double t9531;
  double t9532;
  double t9535;
  double t9536;
  double t9537;
  double t9539;
  double t9540;
  double t9541;
  double t9567;
  double t9568;
  double t9569;
  double t9572;
  double t9574;
  double t9575;
  double t9578;
  double t9580;
  double t9581;
  double t9584;
  double t9587;
  double t9592;
  double t9595;
  double t9596;
  double t9599;
  double t9602;
  double t9603;
  double t9604;
  double t9609;
  double t9610;
  double t9611;
  double t9614;
  double t9618;
  double t9619;
  double t9622;
  double t9624;
  double t9625;
  double t9645;
  double t9647;
  double t9648;
  double t9658;
  double t9659;
  double t9662;
  double t9664;
  double t9670;
  double t9671;
  double t9672;
  double t9676;
  double t9677;
  double t9678;
  double t9682;
  double t9683;
  double t9684;
  double t9688;
  double t9691;
  double t9692;
  double t9642;
  double t9643;
  double t9644;
  double t9650;
  double t9653;
  double t9716;
  double t9717;
  double t9720;
  double t9721;
  double t9722;
  double t9724;
  double t9725;
  double t9728;
  double t9729;
  double t9730;
  double t9734;
  double t9736;
  double t9738;
  double t9759;
  double t9761;
  double t9762;
  double t9766;
  double t9770;
  double t9778;
  double t9780;
  double t9782;
  double t9783;
  double t9785;
  double t9789;
  double t9790;
  double t9792;
  double t9798;
  double t9800;
  double t9801;
  double t9805;
  double t9806;
  double t9812;
  double t9846;
  double t9850;
  double t9851;
  double t9856;
  double t9857;
  double t9861;
  double t9862;
  double t9866;
  double t9869;
  double t9870;
  double t9873;
  double t9877;
  double t9878;
  double t9837;
  double t9838;
  double t9842;
  double t9844;
  double t9845;
  double t9902;
  double t9904;
  double t9911;
  double t9912;
  double t9914;
  double t9917;
  double t9919;
  double t9945;
  double t9953;
  double t9954;
  double t9960;
  double t9961;
  double t9969;
  double t9971;
  double t9976;
  double t9979;
  double t9980;
  double t9994;
  double t9995;
  double t9996;
  double t10024;
  double t10028;
  double t10032;
  double t10041;
  double t10042;
  double t10047;
  double t10049;
  double t10020;
  double t10021;
  double t10022;
  double t10035;
  double t10039;
  double t10085;
  double t10087;
  double t7374;
  double t10107;
  double t10109;
  double t10110;
  double t10116;
  double t10117;
  double t10121;
  double t10122;
  double t10051;
  double t10151;
  double t10152;
  double t10154;
  double t10070;
  double t10143;
  double t10144;
  double t10146;
  double t10147;
  double t10150;
  double t10089;
  double t7375;
  double t7376;
  double t10125;
  double t10180;
  double t10181;
  double t10182;
  double t10134;
  t1082 = Cos(var1[3]);
  t271 = Cos(var1[6]);
  t946 = Cos(var1[5]);
  t1003 = Sin(var1[3]);
  t1072 = -1.*t946*t1003;
  t1096 = Sin(var1[4]);
  t1139 = Sin(var1[5]);
  t1244 = -1.*t1082*t1096*t1139;
  t1301 = t1072 + t1244;
  t1329 = Cos(var1[4]);
  t1339 = Sin(var1[6]);
  t2166 = Cos(var1[7]);
  t2191 = -1.*t2166;
  t2299 = 1. + t2191;
  t2353 = Sin(var1[7]);
  t1751 = t271*t1301;
  t2078 = -1.*t1082*t1329*t1339;
  t2143 = t1751 + t2078;
  t2673 = t1082*t946*t1096;
  t2702 = -1.*t1003*t1139;
  t2708 = t2673 + t2702;
  t3849 = Cos(var1[8]);
  t4032 = -1.*t3849;
  t4259 = 1. + t4032;
  t4268 = Sin(var1[8]);
  t3647 = t2166*t2708;
  t3683 = t2143*t2353;
  t3727 = t3647 + t3683;
  t4398 = -1.*t1082*t1329*t271;
  t4445 = -1.*t1301*t1339;
  t4519 = t4398 + t4445;
  t4922 = Cos(var1[9]);
  t4930 = -1.*t4922;
  t4935 = 1. + t4930;
  t5212 = Sin(var1[9]);
  t5408 = t3849*t3727;
  t5506 = t4519*t4268;
  t5527 = t5408 + t5506;
  t5736 = t3849*t4519;
  t5746 = -1.*t3727*t4268;
  t5784 = t5736 + t5746;
  t5804 = Cos(var1[10]);
  t5824 = -1.*t5804;
  t5825 = 1. + t5824;
  t5841 = Sin(var1[10]);
  t5862 = -1.*t5212*t5527;
  t5864 = t4922*t5784;
  t5871 = t5862 + t5864;
  t5942 = t4922*t5527;
  t5974 = t5212*t5784;
  t5978 = t5942 + t5974;
  t6061 = Cos(var1[11]);
  t6064 = -1.*t6061;
  t6133 = 1. + t6064;
  t6214 = Sin(var1[11]);
  t6317 = t5841*t5871;
  t6391 = t5804*t5978;
  t6394 = t6317 + t6391;
  t6524 = t5804*t5871;
  t6525 = -1.*t5841*t5978;
  t6549 = t6524 + t6525;
  t6559 = Cos(var1[13]);
  t6560 = -1.*t6559;
  t6576 = 1. + t6560;
  t6599 = Sin(var1[13]);
  t6692 = -1.*t6214*t6394;
  t6718 = t6061*t6549;
  t6719 = t6692 + t6718;
  t6784 = t6061*t6394;
  t6809 = t6214*t6549;
  t6811 = t6784 + t6809;
  t399 = -1.*t271;
  t700 = 1. + t399;
  t781 = 0.135*t700;
  t811 = 0. + t781;
  t1373 = -0.135*t1339;
  t1396 = 0. + t1373;
  t6940 = t1082*t946;
  t6965 = -1.*t1003*t1096*t1139;
  t6971 = t6940 + t6965;
  t2319 = 0.135*t2299;
  t2356 = 0.049*t2353;
  t2359 = 0. + t2319 + t2356;
  t2723 = -0.049*t2299;
  t2870 = 0.135*t2353;
  t2973 = 0. + t2723 + t2870;
  t7017 = t271*t6971;
  t7024 = -1.*t1329*t1003*t1339;
  t7025 = t7017 + t7024;
  t7041 = t946*t1003*t1096;
  t7059 = t1082*t1139;
  t7061 = t7041 + t7059;
  t4265 = -0.049*t4259;
  t4270 = -0.09*t4268;
  t4285 = 0. + t4265 + t4270;
  t4552 = -0.09*t4259;
  t4692 = 0.049*t4268;
  t4752 = 0. + t4552 + t4692;
  t5143 = -0.049*t4935;
  t5266 = -0.21*t5212;
  t5338 = 0. + t5143 + t5266;
  t7108 = t2166*t7061;
  t7114 = t7025*t2353;
  t7117 = t7108 + t7114;
  t7122 = -1.*t1329*t271*t1003;
  t7124 = -1.*t6971*t1339;
  t7126 = t7122 + t7124;
  t5585 = -0.21*t4935;
  t5588 = 0.049*t5212;
  t5674 = 0. + t5585 + t5588;
  t5831 = -0.27068*t5825;
  t5849 = 0.00159*t5841;
  t5857 = 0. + t5831 + t5849;
  t7129 = t3849*t7117;
  t7130 = t7126*t4268;
  t7135 = t7129 + t7130;
  t7144 = t3849*t7126;
  t7150 = -1.*t7117*t4268;
  t7165 = t7144 + t7150;
  t5895 = -0.00159*t5825;
  t5936 = -0.27068*t5841;
  t5941 = 0. + t5895 + t5936;
  t6168 = 0.01841*t6133;
  t6246 = -0.70544*t6214;
  t6266 = 0. + t6168 + t6246;
  t7215 = -1.*t5212*t7135;
  t7216 = t4922*t7165;
  t7243 = t7215 + t7216;
  t7261 = t4922*t7135;
  t7263 = t5212*t7165;
  t7270 = t7261 + t7263;
  t6423 = -0.70544*t6133;
  t6462 = -0.01841*t6214;
  t6507 = 0. + t6423 + t6462;
  t6598 = -1.11344*t6576;
  t6612 = 0.02159*t6599;
  t6690 = 0. + t6598 + t6612;
  t7282 = t5841*t7243;
  t7284 = t5804*t7270;
  t7288 = t7282 + t7284;
  t7313 = t5804*t7243;
  t7325 = -1.*t5841*t7270;
  t7326 = t7313 + t7325;
  t6773 = -0.02159*t6576;
  t6779 = -1.11344*t6599;
  t6780 = 0. + t6773 + t6779;
  t7328 = -1.*t6214*t7288;
  t7333 = t6061*t7326;
  t7334 = t7328 + t7333;
  t7338 = t6061*t7288;
  t7343 = t6214*t7326;
  t7348 = t7338 + t7343;
  t7441 = t271*t1096*t1139;
  t7442 = t1329*t1339;
  t7444 = t7441 + t7442;
  t7519 = -1.*t946*t2166*t1096;
  t7561 = t7444*t2353;
  t7574 = t7519 + t7561;
  t7608 = t1329*t271;
  t7615 = -1.*t1096*t1139*t1339;
  t7619 = t7608 + t7615;
  t7628 = t3849*t7574;
  t7633 = t7619*t4268;
  t7689 = t7628 + t7633;
  t7705 = t3849*t7619;
  t7712 = -1.*t7574*t4268;
  t7723 = t7705 + t7712;
  t7758 = -1.*t5212*t7689;
  t7759 = t4922*t7723;
  t7760 = t7758 + t7759;
  t7782 = t4922*t7689;
  t7790 = t5212*t7723;
  t7802 = t7782 + t7790;
  t7821 = t5841*t7760;
  t7822 = t5804*t7802;
  t7824 = t7821 + t7822;
  t7830 = t5804*t7760;
  t7831 = -1.*t5841*t7802;
  t7843 = t7830 + t7831;
  t7877 = -1.*t6214*t7824;
  t7879 = t6061*t7843;
  t7887 = t7877 + t7879;
  t7902 = t6061*t7824;
  t7909 = t6214*t7843;
  t7911 = t7902 + t7909;
  t7979 = -1.*t1329*t271*t1003*t1139;
  t7980 = t1003*t1096*t1339;
  t7981 = t7979 + t7980;
  t8013 = t1329*t946*t2166*t1003;
  t8026 = t7981*t2353;
  t8035 = t8013 + t8026;
  t8049 = t271*t1003*t1096;
  t8053 = t1329*t1003*t1139*t1339;
  t8056 = t8049 + t8053;
  t8062 = t3849*t8035;
  t8069 = t8056*t4268;
  t8079 = t8062 + t8069;
  t8101 = t3849*t8056;
  t8102 = -1.*t8035*t4268;
  t8126 = t8101 + t8102;
  t8129 = -1.*t5212*t8079;
  t8130 = t4922*t8126;
  t8138 = t8129 + t8130;
  t8147 = t4922*t8079;
  t8150 = t5212*t8126;
  t8151 = t8147 + t8150;
  t8154 = t5841*t8138;
  t8168 = t5804*t8151;
  t8176 = t8154 + t8168;
  t8186 = t5804*t8138;
  t8187 = -1.*t5841*t8151;
  t8189 = t8186 + t8187;
  t8194 = -1.*t6214*t8176;
  t8199 = t6061*t8189;
  t8200 = t8194 + t8199;
  t8204 = t6061*t8176;
  t8205 = t6214*t8189;
  t8206 = t8204 + t8205;
  t8241 = t1082*t1329*t271*t1139;
  t8250 = -1.*t1082*t1096*t1339;
  t8251 = t8241 + t8250;
  t8269 = -1.*t1082*t1329*t946*t2166;
  t8274 = t8251*t2353;
  t8282 = t8269 + t8274;
  t8284 = -1.*t1082*t271*t1096;
  t8285 = -1.*t1082*t1329*t1139*t1339;
  t8286 = t8284 + t8285;
  t8288 = t3849*t8282;
  t8289 = t8286*t4268;
  t8293 = t8288 + t8289;
  t8297 = t3849*t8286;
  t8301 = -1.*t8282*t4268;
  t8305 = t8297 + t8301;
  t8313 = -1.*t5212*t8293;
  t8314 = t4922*t8305;
  t8315 = t8313 + t8314;
  t8317 = t4922*t8293;
  t8318 = t5212*t8305;
  t8319 = t8317 + t8318;
  t8329 = t5841*t8315;
  t8330 = t5804*t8319;
  t8334 = t8329 + t8330;
  t8351 = t5804*t8315;
  t8352 = -1.*t5841*t8319;
  t8361 = t8351 + t8352;
  t8366 = -1.*t6214*t8334;
  t8373 = t6061*t8361;
  t8378 = t8366 + t8373;
  t8417 = t6061*t8334;
  t8428 = t6214*t8361;
  t8432 = t8417 + t8428;
  t8464 = -1.*t1329*t2166*t1139;
  t8465 = -1.*t1329*t946*t271*t2353;
  t8466 = t8464 + t8465;
  t8471 = t3849*t8466;
  t8472 = t1329*t946*t1339*t4268;
  t8475 = t8471 + t8472;
  t8487 = t1329*t946*t3849*t1339;
  t8500 = -1.*t8466*t4268;
  t8503 = t8487 + t8500;
  t8512 = -1.*t5212*t8475;
  t8518 = t4922*t8503;
  t8520 = t8512 + t8518;
  t8529 = t4922*t8475;
  t8530 = t5212*t8503;
  t8533 = t8529 + t8530;
  t8539 = t5841*t8520;
  t8544 = t5804*t8533;
  t8546 = t8539 + t8544;
  t8549 = t5804*t8520;
  t8551 = -1.*t5841*t8533;
  t8552 = t8549 + t8551;
  t8556 = -1.*t6214*t8546;
  t8558 = t6061*t8552;
  t8559 = t8556 + t8558;
  t8562 = t6061*t8546;
  t8566 = t6214*t8552;
  t8572 = t8562 + t8566;
  t8628 = -1.*t946*t1003*t1096;
  t8629 = -1.*t1082*t1139;
  t8630 = t8628 + t8629;
  t8651 = t2166*t6971;
  t8652 = t271*t8630*t2353;
  t8655 = t8651 + t8652;
  t8660 = t3849*t8655;
  t8665 = -1.*t8630*t1339*t4268;
  t8666 = t8660 + t8665;
  t8669 = -1.*t3849*t8630*t1339;
  t8670 = -1.*t8655*t4268;
  t8671 = t8669 + t8670;
  t8675 = -1.*t5212*t8666;
  t8677 = t4922*t8671;
  t8678 = t8675 + t8677;
  t8681 = t4922*t8666;
  t8682 = t5212*t8671;
  t8687 = t8681 + t8682;
  t8690 = t5841*t8678;
  t8691 = t5804*t8687;
  t8695 = t8690 + t8691;
  t8700 = t5804*t8678;
  t8702 = -1.*t5841*t8687;
  t8703 = t8700 + t8702;
  t8705 = -1.*t6214*t8695;
  t8708 = t6061*t8703;
  t8712 = t8705 + t8708;
  t8716 = t6061*t8695;
  t8718 = t6214*t8703;
  t8719 = t8716 + t8718;
  t8734 = t946*t1003;
  t8736 = t1082*t1096*t1139;
  t8737 = t8734 + t8736;
  t8744 = t2166*t8737;
  t8747 = t271*t2708*t2353;
  t8748 = t8744 + t8747;
  t8758 = t3849*t8748;
  t8760 = -1.*t2708*t1339*t4268;
  t8762 = t8758 + t8760;
  t8765 = -1.*t3849*t2708*t1339;
  t8766 = -1.*t8748*t4268;
  t8767 = t8765 + t8766;
  t8771 = -1.*t5212*t8762;
  t8773 = t4922*t8767;
  t8775 = t8771 + t8773;
  t8782 = t4922*t8762;
  t8785 = t5212*t8767;
  t8786 = t8782 + t8785;
  t8788 = t5841*t8775;
  t8789 = t5804*t8786;
  t8790 = t8788 + t8789;
  t8792 = t5804*t8775;
  t8793 = -1.*t5841*t8786;
  t8794 = t8792 + t8793;
  t8796 = -1.*t6214*t8790;
  t8797 = t6061*t8794;
  t8798 = t8796 + t8797;
  t8802 = t6061*t8790;
  t8803 = t6214*t8794;
  t8804 = t8802 + t8803;
  t8827 = t271*t1096;
  t8829 = t1329*t1139*t1339;
  t8830 = t8827 + t8829;
  t8841 = t1329*t271*t1139;
  t8843 = -1.*t1096*t1339;
  t8844 = t8841 + t8843;
  t8848 = t3849*t8830*t2353;
  t8849 = t8844*t4268;
  t8850 = t8848 + t8849;
  t8853 = t3849*t8844;
  t8855 = -1.*t8830*t2353*t4268;
  t8857 = t8853 + t8855;
  t8859 = -1.*t5212*t8850;
  t8860 = t4922*t8857;
  t8861 = t8859 + t8860;
  t8864 = t4922*t8850;
  t8865 = t5212*t8857;
  t8866 = t8864 + t8865;
  t8883 = t5841*t8861;
  t8884 = t5804*t8866;
  t8885 = t8883 + t8884;
  t8889 = t5804*t8861;
  t8890 = -1.*t5841*t8866;
  t8894 = t8889 + t8890;
  t8898 = -1.*t6214*t8885;
  t8899 = t6061*t8894;
  t8900 = t8898 + t8899;
  t8909 = t6061*t8885;
  t8910 = t6214*t8894;
  t8911 = t8909 + t8910;
  t8938 = -1.*t271*t6971;
  t8939 = t1329*t1003*t1339;
  t8940 = t8938 + t8939;
  t8943 = t3849*t7126*t2353;
  t8946 = t8940*t4268;
  t8947 = t8943 + t8946;
  t8951 = t3849*t8940;
  t8952 = -1.*t7126*t2353*t4268;
  t8953 = t8951 + t8952;
  t8955 = -1.*t5212*t8947;
  t8957 = t4922*t8953;
  t8958 = t8955 + t8957;
  t8961 = t4922*t8947;
  t8968 = t5212*t8953;
  t8969 = t8961 + t8968;
  t8971 = t5841*t8958;
  t8973 = t5804*t8969;
  t8974 = t8971 + t8973;
  t8979 = t5804*t8958;
  t8981 = -1.*t5841*t8969;
  t8982 = t8979 + t8981;
  t8984 = -1.*t6214*t8974;
  t8987 = t6061*t8982;
  t8990 = t8984 + t8987;
  t8992 = t6061*t8974;
  t8994 = t6214*t8982;
  t8995 = t8992 + t8994;
  t9038 = t1082*t1329*t271;
  t9039 = -1.*t8737*t1339;
  t9040 = t9038 + t9039;
  t9047 = -1.*t271*t8737;
  t9050 = t9047 + t2078;
  t9052 = t3849*t9040*t2353;
  t9053 = t9050*t4268;
  t9054 = t9052 + t9053;
  t9059 = t3849*t9050;
  t9068 = -1.*t9040*t2353*t4268;
  t9071 = t9059 + t9068;
  t9073 = -1.*t5212*t9054;
  t9074 = t4922*t9071;
  t9076 = t9073 + t9074;
  t9079 = t4922*t9054;
  t9081 = t5212*t9071;
  t9082 = t9079 + t9081;
  t9084 = t5841*t9076;
  t9087 = t5804*t9082;
  t9088 = t9084 + t9087;
  t9092 = t5804*t9076;
  t9093 = -1.*t5841*t9082;
  t9095 = t9092 + t9093;
  t9097 = -1.*t6214*t9088;
  t9099 = t6061*t9095;
  t9100 = t9097 + t9099;
  t9104 = t6061*t9088;
  t9107 = t6214*t9095;
  t9109 = t9104 + t9107;
  t9137 = -1.*t1329*t271*t1139;
  t9139 = t1096*t1339;
  t9140 = t9137 + t9139;
  t9145 = t2166*t9140;
  t9148 = -1.*t1329*t946*t2353;
  t9149 = t9145 + t9148;
  t9159 = -1.*t3849*t5212*t9149;
  t9161 = -1.*t4922*t9149*t4268;
  t9162 = t9159 + t9161;
  t9164 = t4922*t3849*t9149;
  t9166 = -1.*t5212*t9149*t4268;
  t9168 = t9164 + t9166;
  t9176 = t5841*t9162;
  t9178 = t5804*t9168;
  t9179 = t9176 + t9178;
  t9182 = t5804*t9162;
  t9183 = -1.*t5841*t9168;
  t9184 = t9182 + t9183;
  t9187 = -1.*t6214*t9179;
  t9191 = t6061*t9184;
  t9193 = t9187 + t9191;
  t9196 = t6061*t9179;
  t9197 = t6214*t9184;
  t9199 = t9196 + t9197;
  t9128 = 0.135*t2166;
  t9129 = -0.049*t2353;
  t9133 = t9128 + t9129;
  t9141 = 0.049*t2166;
  t9142 = t9141 + t2870;
  t7076 = t2166*t7025;
  t7077 = -1.*t7061*t2353;
  t7105 = t7076 + t7077;
  t9232 = -1.*t3849*t5212*t7105;
  t9235 = -1.*t4922*t7105*t4268;
  t9236 = t9232 + t9235;
  t9240 = t4922*t3849*t7105;
  t9241 = -1.*t5212*t7105*t4268;
  t9242 = t9240 + t9241;
  t9245 = t5841*t9236;
  t9247 = t5804*t9242;
  t9248 = t9245 + t9247;
  t9252 = t5804*t9236;
  t9254 = -1.*t5841*t9242;
  t9255 = t9252 + t9254;
  t9258 = -1.*t6214*t9248;
  t9261 = t6061*t9255;
  t9264 = t9258 + t9261;
  t9267 = t6061*t9248;
  t9268 = t6214*t9255;
  t9270 = t9267 + t9268;
  t9301 = t271*t8737;
  t9303 = t1082*t1329*t1339;
  t9305 = t9301 + t9303;
  t9295 = -1.*t1082*t946*t1096;
  t9297 = t1003*t1139;
  t9298 = t9295 + t9297;
  t9308 = t2166*t9305;
  t9311 = -1.*t9298*t2353;
  t9316 = t9308 + t9311;
  t9327 = -1.*t3849*t5212*t9316;
  t9329 = -1.*t4922*t9316*t4268;
  t9331 = t9327 + t9329;
  t9333 = t4922*t3849*t9316;
  t9336 = -1.*t5212*t9316*t4268;
  t9338 = t9333 + t9336;
  t9343 = t5841*t9331;
  t9344 = t5804*t9338;
  t9345 = t9343 + t9344;
  t9347 = t5804*t9331;
  t9349 = -1.*t5841*t9338;
  t9351 = t9347 + t9349;
  t9353 = -1.*t6214*t9345;
  t9356 = t6061*t9351;
  t9357 = t9353 + t9356;
  t9360 = t6061*t9345;
  t9361 = t6214*t9351;
  t9362 = t9360 + t9361;
  t9386 = t1329*t946*t2166;
  t9395 = t9140*t2353;
  t9402 = t9386 + t9395;
  t9431 = -1.*t3849*t9402;
  t9432 = -1.*t8830*t4268;
  t9433 = t9431 + t9432;
  t9436 = t3849*t8830;
  t9437 = -1.*t9402*t4268;
  t9438 = t9436 + t9437;
  t9441 = t5212*t9433;
  t9443 = t4922*t9438;
  t9444 = t9441 + t9443;
  t9447 = t4922*t9433;
  t9449 = -1.*t5212*t9438;
  t9451 = t9447 + t9449;
  t9453 = -1.*t5841*t9444;
  t9454 = t5804*t9451;
  t9456 = t9453 + t9454;
  t9459 = t5804*t9444;
  t9460 = t5841*t9451;
  t9461 = t9459 + t9460;
  t9464 = t6214*t9456;
  t9465 = t6061*t9461;
  t9467 = t9464 + t9465;
  t9470 = t6061*t9456;
  t9472 = -1.*t6214*t9461;
  t9475 = t9470 + t9472;
  t9382 = 0.049*t3849;
  t9383 = t9382 + t4270;
  t9406 = -0.09*t3849;
  t9408 = -0.049*t4268;
  t9410 = t9406 + t9408;
  t9501 = -1.*t3849*t7117;
  t9502 = -1.*t7126*t4268;
  t9503 = t9501 + t9502;
  t9508 = t5212*t9503;
  t9511 = t9508 + t7216;
  t9516 = t4922*t9503;
  t9517 = -1.*t5212*t7165;
  t9519 = t9516 + t9517;
  t9521 = -1.*t5841*t9511;
  t9523 = t5804*t9519;
  t9526 = t9521 + t9523;
  t9529 = t5804*t9511;
  t9531 = t5841*t9519;
  t9532 = t9529 + t9531;
  t9535 = t6214*t9526;
  t9536 = t6061*t9532;
  t9537 = t9535 + t9536;
  t9539 = t6061*t9526;
  t9540 = -1.*t6214*t9532;
  t9541 = t9539 + t9540;
  t9567 = t2166*t9298;
  t9568 = t9305*t2353;
  t9569 = t9567 + t9568;
  t9572 = -1.*t3849*t9569;
  t9574 = -1.*t9040*t4268;
  t9575 = t9572 + t9574;
  t9578 = t3849*t9040;
  t9580 = -1.*t9569*t4268;
  t9581 = t9578 + t9580;
  t9584 = t5212*t9575;
  t9587 = t4922*t9581;
  t9592 = t9584 + t9587;
  t9595 = t4922*t9575;
  t9596 = -1.*t5212*t9581;
  t9599 = t9595 + t9596;
  t9602 = -1.*t5841*t9592;
  t9603 = t5804*t9599;
  t9604 = t9602 + t9603;
  t9609 = t5804*t9592;
  t9610 = t5841*t9599;
  t9611 = t9609 + t9610;
  t9614 = t6214*t9604;
  t9618 = t6061*t9611;
  t9619 = t9614 + t9618;
  t9622 = t6061*t9604;
  t9624 = -1.*t6214*t9611;
  t9625 = t9622 + t9624;
  t9645 = t3849*t9402;
  t9647 = t8830*t4268;
  t9648 = t9645 + t9647;
  t9658 = -1.*t5212*t9648;
  t9659 = t9658 + t9443;
  t9662 = -1.*t4922*t9648;
  t9664 = t9662 + t9449;
  t9670 = -1.*t5841*t9659;
  t9671 = t5804*t9664;
  t9672 = t9670 + t9671;
  t9676 = t5804*t9659;
  t9677 = t5841*t9664;
  t9678 = t9676 + t9677;
  t9682 = t6214*t9672;
  t9683 = t6061*t9678;
  t9684 = t9682 + t9683;
  t9688 = t6061*t9672;
  t9691 = -1.*t6214*t9678;
  t9692 = t9688 + t9691;
  t9642 = -0.21*t4922;
  t9643 = -0.049*t5212;
  t9644 = t9642 + t9643;
  t9650 = 0.049*t4922;
  t9653 = t9650 + t5266;
  t9716 = -1.*t4922*t7135;
  t9717 = t9716 + t9517;
  t9720 = -1.*t5841*t7243;
  t9721 = t5804*t9717;
  t9722 = t9720 + t9721;
  t9724 = t5841*t9717;
  t9725 = t7313 + t9724;
  t9728 = t6214*t9722;
  t9729 = t6061*t9725;
  t9730 = t9728 + t9729;
  t9734 = t6061*t9722;
  t9736 = -1.*t6214*t9725;
  t9738 = t9734 + t9736;
  t9759 = t3849*t9569;
  t9761 = t9040*t4268;
  t9762 = t9759 + t9761;
  t9766 = -1.*t5212*t9762;
  t9770 = t9766 + t9587;
  t9778 = -1.*t4922*t9762;
  t9780 = t9778 + t9596;
  t9782 = -1.*t5841*t9770;
  t9783 = t5804*t9780;
  t9785 = t9782 + t9783;
  t9789 = t5804*t9770;
  t9790 = t5841*t9780;
  t9792 = t9789 + t9790;
  t9798 = t6214*t9785;
  t9800 = t6061*t9792;
  t9801 = t9798 + t9800;
  t9805 = t6061*t9785;
  t9806 = -1.*t6214*t9792;
  t9812 = t9805 + t9806;
  t9846 = t4922*t9648;
  t9850 = t5212*t9438;
  t9851 = t9846 + t9850;
  t9856 = -1.*t5804*t9851;
  t9857 = t9670 + t9856;
  t9861 = -1.*t5841*t9851;
  t9862 = t9676 + t9861;
  t9866 = t6214*t9857;
  t9869 = t6061*t9862;
  t9870 = t9866 + t9869;
  t9873 = t6061*t9857;
  t9877 = -1.*t6214*t9862;
  t9878 = t9873 + t9877;
  t9837 = 0.00159*t5804;
  t9838 = t9837 + t5936;
  t9842 = -0.27068*t5804;
  t9844 = -0.00159*t5841;
  t9845 = t9842 + t9844;
  t9902 = -1.*t5804*t7270;
  t9904 = t9720 + t9902;
  t9911 = t6214*t9904;
  t9912 = t9911 + t7333;
  t9914 = t6061*t9904;
  t9917 = -1.*t6214*t7326;
  t9919 = t9914 + t9917;
  t9945 = t4922*t9762;
  t9953 = t5212*t9581;
  t9954 = t9945 + t9953;
  t9960 = -1.*t5804*t9954;
  t9961 = t9782 + t9960;
  t9969 = -1.*t5841*t9954;
  t9971 = t9789 + t9969;
  t9976 = t6214*t9961;
  t9979 = t6061*t9971;
  t9980 = t9976 + t9979;
  t9994 = t6061*t9961;
  t9995 = -1.*t6214*t9971;
  t9996 = t9994 + t9995;
  t10024 = t5841*t9659;
  t10028 = t5804*t9851;
  t10032 = t10024 + t10028;
  t10041 = -1.*t6214*t10032;
  t10042 = t10041 + t9869;
  t10047 = -1.*t6061*t10032;
  t10049 = t10047 + t9877;
  t10020 = -0.70544*t6061;
  t10021 = 0.01841*t6214;
  t10022 = t10020 + t10021;
  t10035 = -0.01841*t6061;
  t10039 = t10035 + t6246;
  t10085 = -1.*t6061*t7288;
  t10087 = t10085 + t9917;
  t7374 = t6559*t7334;
  t10107 = t5841*t9770;
  t10109 = t5804*t9954;
  t10110 = t10107 + t10109;
  t10116 = -1.*t6214*t10110;
  t10117 = t10116 + t9979;
  t10121 = -1.*t6061*t10110;
  t10122 = t10121 + t9995;
  t10051 = -1.*t6599*t10042;
  t10151 = t6061*t10032;
  t10152 = t6214*t9862;
  t10154 = t10151 + t10152;
  t10070 = t6559*t10042;
  t10143 = 0.02159*t6559;
  t10144 = t10143 + t6779;
  t10146 = -1.11344*t6559;
  t10147 = -0.02159*t6599;
  t10150 = t10146 + t10147;
  t10089 = -1.*t6599*t7334;
  t7375 = -1.*t6599*t7348;
  t7376 = t7374 + t7375;
  t10125 = -1.*t6599*t10117;
  t10180 = t6061*t10110;
  t10181 = t6214*t9971;
  t10182 = t10180 + t10181;
  t10134 = t6559*t10117;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=-1.*t1082*t1329*t1396 + t2143*t2359 + 0.1305*(t2143*t2166 - 1.*t2353*t2708) + t2708*t2973 + t3727*t4285 + t4519*t4752 + t5338*t5527 + t5674*t5784 + t5857*t5871 + t5941*t5978 + t6266*t6394 + t6507*t6549 + t6690*t6719 + t6780*t6811 + 0.075595*(t6599*t6719 + t6559*t6811) - 1.077437*(t6559*t6719 - 1.*t6599*t6811) + t1301*t811;
  p_output1[11]=-1.*t1003*t1329*t1396 + t2359*t7025 + t2973*t7061 + 0.1305*t7105 + t4285*t7117 + t4752*t7126 + t5338*t7135 + t5674*t7165 + t5857*t7243 + t5941*t7270 + t6266*t7288 + t6507*t7326 + t6690*t7334 + t6780*t7348 + 0.075595*(t6599*t7334 + t6559*t7348) - 1.077437*t7376 + t6971*t811;
  p_output1[12]=t1329*t1396 + t2359*t7444 + t4285*t7574 + t4752*t7619 + t5338*t7689 + t5674*t7723 + t5857*t7760 + t5941*t7802 + t6266*t7824 + t6507*t7843 + t6690*t7887 + t6780*t7911 + 0.075595*(t6599*t7887 + t6559*t7911) - 1.077437*(t6559*t7887 - 1.*t6599*t7911) + t1096*t1139*t811 - 1.*t1096*t2973*t946 + 0.1305*(t2166*t7444 + t1096*t2353*t946);
  p_output1[13]=t1003*t1096*t1396 + t2359*t7981 + t4285*t8035 + t4752*t8056 + t5338*t8079 - 1.*t1003*t1139*t1329*t811 + t5674*t8126 + t5857*t8138 + t5941*t8151 + t6266*t8176 + t6507*t8189 + t6690*t8200 + t6780*t8206 + 0.075595*(t6599*t8200 + t6559*t8206) - 1.077437*(t6559*t8200 - 1.*t6599*t8206) + t1003*t1329*t2973*t946 + 0.1305*(t2166*t7981 - 1.*t1003*t1329*t2353*t946);
  p_output1[14]=-1.*t1082*t1096*t1396 + t1082*t1139*t1329*t811 + t2359*t8251 + t4285*t8282 + t4752*t8286 + t5338*t8293 + t5674*t8305 + t5857*t8315 + t5941*t8319 + t6266*t8334 + t6507*t8361 + t6690*t8378 + t6780*t8432 + 0.075595*(t6599*t8378 + t6559*t8432) - 1.077437*(t6559*t8378 - 1.*t6599*t8432) - 1.*t1082*t1329*t2973*t946 + 0.1305*(t2166*t8251 + t1082*t1329*t2353*t946);
  p_output1[15]=-1.*t1139*t1329*t2973 + t4285*t8466 + t5338*t8475 + t5674*t8503 + t5857*t8520 + t5941*t8533 + t6266*t8546 + t6507*t8552 + t6690*t8559 + t6780*t8572 + 0.075595*(t6599*t8559 + t6559*t8572) - 1.077437*(t6559*t8559 - 1.*t6599*t8572) - 1.*t1329*t2359*t271*t946 + t1329*t1339*t4752*t946 - 1.*t1329*t811*t946 + 0.1305*(t1139*t1329*t2353 - 1.*t1329*t2166*t271*t946);
  p_output1[16]=t2973*t6971 + t2359*t271*t8630 - 1.*t1339*t4752*t8630 + t811*t8630 + 0.1305*(-1.*t2353*t6971 + t2166*t271*t8630) + t4285*t8655 + t5338*t8666 + t5674*t8671 + t5857*t8678 + t5941*t8687 + t6266*t8695 + t6507*t8703 + t6690*t8712 + t6780*t8719 + 0.075595*(t6599*t8712 + t6559*t8719) - 1.077437*(t6559*t8712 - 1.*t6599*t8719);
  p_output1[17]=t2359*t2708*t271 - 1.*t1339*t2708*t4752 + t2708*t811 + t2973*t8737 + 0.1305*(t2166*t2708*t271 - 1.*t2353*t8737) + t4285*t8748 + t5338*t8762 + t5674*t8767 + t5857*t8775 + t5941*t8786 + t6266*t8790 + t6507*t8794 + t6690*t8798 + t6780*t8804 + 0.075595*(t6599*t8798 + t6559*t8804) - 1.077437*(t6559*t8798 - 1.*t6599*t8804);
  p_output1[18]=-0.135*t1139*t1329*t1339 - 0.135*t1096*t271 + 0.1305*t2166*t8830 + t2359*t8830 + t2353*t4285*t8830 + t4752*t8844 + t5338*t8850 + t5674*t8857 + t5857*t8861 + t5941*t8866 + t6266*t8885 + t6507*t8894 + t6690*t8900 + t6780*t8911 + 0.075595*(t6599*t8900 + t6559*t8911) - 1.077437*(t6559*t8900 - 1.*t6599*t8911);
  p_output1[19]=0.135*t1003*t1329*t271 + 0.135*t1339*t6971 + 0.1305*t2166*t7126 + t2359*t7126 + t2353*t4285*t7126 + t4752*t8940 + t5338*t8947 + t5674*t8953 + t5857*t8958 + t5941*t8969 + t6266*t8974 + t6507*t8982 + t6690*t8990 + t6780*t8995 + 0.075595*(t6599*t8990 + t6559*t8995) - 1.077437*(t6559*t8990 - 1.*t6599*t8995);
  p_output1[20]=-0.135*t1082*t1329*t271 + 0.135*t1339*t8737 + 0.1305*t2166*t9040 + t2359*t9040 + t2353*t4285*t9040 + t4752*t9050 + t5338*t9054 + t5674*t9071 + t5857*t9076 + t5941*t9082 + t6266*t9088 + t6507*t9095 + t6690*t9100 + t6780*t9109 + 0.075595*(t6599*t9100 + t6559*t9109) - 1.077437*(t6559*t9100 - 1.*t6599*t9109);
  p_output1[21]=t9140*t9142 + t4285*t9149 + t3849*t5338*t9149 - 1.*t4268*t5674*t9149 + t5857*t9162 + t5941*t9168 + t6266*t9179 + t6507*t9184 + t6690*t9193 + t6780*t9199 + 0.075595*(t6599*t9193 + t6559*t9199) - 1.077437*(t6559*t9193 - 1.*t6599*t9199) + t1329*t9133*t946 + 0.1305*(-1.*t2353*t9140 - 1.*t1329*t2166*t946);
  p_output1[22]=0.1305*(-1.*t2353*t7025 - 1.*t2166*t7061) + t4285*t7105 + t3849*t5338*t7105 - 1.*t4268*t5674*t7105 + t7061*t9133 + t7025*t9142 + t5857*t9236 + t5941*t9242 + t6266*t9248 + t6507*t9255 + t6690*t9264 + t6780*t9270 + 0.075595*(t6599*t9264 + t6559*t9270) - 1.077437*(t6559*t9264 - 1.*t6599*t9270);
  p_output1[23]=t9133*t9298 + t9142*t9305 + 0.1305*(-1.*t2166*t9298 - 1.*t2353*t9305) + t4285*t9316 + t3849*t5338*t9316 - 1.*t4268*t5674*t9316 + t5857*t9331 + t5941*t9338 + t6266*t9345 + t6507*t9351 + t6690*t9357 + t6780*t9362 + 0.075595*(t6599*t9357 + t6559*t9362) - 1.077437*(t6559*t9357 - 1.*t6599*t9362);
  p_output1[24]=t8830*t9383 + t9402*t9410 + t5674*t9433 + t5338*t9438 + t5941*t9444 + t5857*t9451 + t6507*t9456 + t6266*t9461 + t6780*t9467 + t6690*t9475 - 1.077437*(-1.*t6599*t9467 + t6559*t9475) + 0.075595*(t6559*t9467 + t6599*t9475);
  p_output1[25]=t5338*t7165 + t7126*t9383 + t7117*t9410 + t5674*t9503 + t5941*t9511 + t5857*t9519 + t6507*t9526 + t6266*t9532 + t6780*t9537 + t6690*t9541 - 1.077437*(-1.*t6599*t9537 + t6559*t9541) + 0.075595*(t6559*t9537 + t6599*t9541);
  p_output1[26]=t9040*t9383 + t9410*t9569 + t5674*t9575 + t5338*t9581 + t5941*t9592 + t5857*t9599 + t6507*t9604 + t6266*t9611 + t6780*t9619 + t6690*t9625 - 1.077437*(-1.*t6599*t9619 + t6559*t9625) + 0.075595*(t6559*t9619 + t6599*t9625);
  p_output1[27]=t9644*t9648 + t9438*t9653 + t5941*t9659 + t5857*t9664 + t6507*t9672 + t6266*t9678 + t6780*t9684 + t6690*t9692 - 1.077437*(-1.*t6599*t9684 + t6559*t9692) + 0.075595*(t6559*t9684 + t6599*t9692);
  p_output1[28]=t5941*t7243 + t7135*t9644 + t7165*t9653 + t5857*t9717 + t6507*t9722 + t6266*t9725 + t6780*t9730 + t6690*t9738 - 1.077437*(-1.*t6599*t9730 + t6559*t9738) + 0.075595*(t6559*t9730 + t6599*t9738);
  p_output1[29]=t9581*t9653 + t9644*t9762 + t5941*t9770 + t5857*t9780 + t6507*t9785 + t6266*t9792 + t6780*t9801 + t6690*t9812 - 1.077437*(-1.*t6599*t9801 + t6559*t9812) + 0.075595*(t6559*t9801 + t6599*t9812);
  p_output1[30]=t9659*t9838 + t9845*t9851 + t6507*t9857 + t6266*t9862 + t6780*t9870 + t6690*t9878 - 1.077437*(-1.*t6599*t9870 + t6559*t9878) + 0.075595*(t6559*t9870 + t6599*t9878);
  p_output1[31]=t6266*t7326 + t7243*t9838 + t7270*t9845 + t6507*t9904 + t6780*t9912 + t6690*t9919 - 1.077437*(-1.*t6599*t9912 + t6559*t9919) + 0.075595*(t6559*t9912 + t6599*t9919);
  p_output1[32]=t9770*t9838 + t9845*t9954 + t6507*t9961 + t6266*t9971 + t6780*t9980 + t6690*t9996 - 1.077437*(-1.*t6599*t9980 + t6559*t9996) + 0.075595*(t6559*t9980 + t6599*t9996);
  p_output1[33]=t10022*t10032 - 1.077437*(t10051 + t10049*t6559) + 0.075595*(t10070 + t10049*t6599) + t10049*t6690 + t10042*t6780 + t10039*t9862;
  p_output1[34]=-1.077437*(t10089 + t10087*t6559) + t10087*t6690 + t10022*t7288 + t10039*t7326 + t6780*t7334 + 0.075595*(t10087*t6599 + t7374);
  p_output1[35]=t10022*t10110 - 1.077437*(t10125 + t10122*t6559) + 0.075595*(t10134 + t10122*t6599) + t10122*t6690 + t10117*t6780 + t10039*t9971;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t10042*t10144 + t10150*t10154 - 1.077437*(t10051 - 1.*t10154*t6559) + 0.075595*(t10070 - 1.*t10154*t6599);
  p_output1[40]=t10144*t7334 + t10150*t7348 - 1.077437*(t10089 - 1.*t6559*t7348) + 0.075595*t7376;
  p_output1[41]=t10117*t10144 + t10150*t10182 - 1.077437*(t10125 - 1.*t10182*t6559) + 0.075595*(t10134 - 1.*t10182*t6599);
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftToe_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




