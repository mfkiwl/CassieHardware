/*
 * Automatically Generated from Mathematica.
 * Thu 26 Aug 2021 14:19:13 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftToe_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1018;
  double t694;
  double t995;
  double t1003;
  double t1006;
  double t1066;
  double t1080;
  double t1087;
  double t1090;
  double t1100;
  double t1102;
  double t1231;
  double t1237;
  double t1239;
  double t1244;
  double t1166;
  double t1193;
  double t1226;
  double t1278;
  double t1289;
  double t1294;
  double t1375;
  double t1388;
  double t1399;
  double t1404;
  double t1337;
  double t1342;
  double t1369;
  double t1436;
  double t1449;
  double t1604;
  double t1757;
  double t1797;
  double t1854;
  double t1869;
  double t2021;
  double t2099;
  double t2142;
  double t2207;
  double t2231;
  double t2252;
  double t2269;
  double t2277;
  double t2282;
  double t2301;
  double t2319;
  double t2322;
  double t2323;
  double t2419;
  double t2423;
  double t2424;
  double t2453;
  double t2457;
  double t2468;
  double t2480;
  double t2500;
  double t2502;
  double t2507;
  double t2555;
  double t2559;
  double t2560;
  double t2565;
  double t2569;
  double t2586;
  double t2590;
  double t2612;
  double t2615;
  double t2627;
  double t2656;
  double t2659;
  double t2661;
  double t841;
  double t931;
  double t942;
  double t947;
  double t1124;
  double t1146;
  double t2685;
  double t2686;
  double t2691;
  double t1243;
  double t1261;
  double t1262;
  double t1305;
  double t1311;
  double t1312;
  double t2700;
  double t2704;
  double t2705;
  double t2713;
  double t2714;
  double t2717;
  double t1400;
  double t1406;
  double t1407;
  double t1704;
  double t1728;
  double t1729;
  double t1867;
  double t1874;
  double t1973;
  double t2745;
  double t2746;
  double t2757;
  double t2762;
  double t2766;
  double t2767;
  double t2177;
  double t2184;
  double t2191;
  double t2286;
  double t2305;
  double t2314;
  double t2778;
  double t2783;
  double t2788;
  double t2793;
  double t2796;
  double t2800;
  double t2387;
  double t2389;
  double t2392;
  double t2474;
  double t2481;
  double t2490;
  double t2805;
  double t2814;
  double t2815;
  double t2823;
  double t2824;
  double t2825;
  double t2538;
  double t2539;
  double t2553;
  double t2587;
  double t2600;
  double t2601;
  double t2829;
  double t2838;
  double t2846;
  double t2852;
  double t2866;
  double t2867;
  double t2646;
  double t2648;
  double t2655;
  double t2878;
  double t2879;
  double t2880;
  double t2882;
  double t2889;
  double t2890;
  double t2924;
  double t2925;
  double t2926;
  double t2971;
  double t2976;
  double t2979;
  double t2986;
  double t2987;
  double t2988;
  double t2992;
  double t3005;
  double t3011;
  double t3025;
  double t3026;
  double t3032;
  double t3034;
  double t3037;
  double t3042;
  double t3054;
  double t3055;
  double t3061;
  double t3108;
  double t3113;
  double t3119;
  double t3135;
  double t3144;
  double t3151;
  double t3157;
  double t3181;
  double t3182;
  double t3197;
  double t3199;
  double t3202;
  double t3274;
  double t3295;
  double t3296;
  double t3372;
  double t3380;
  double t3384;
  double t3416;
  double t3417;
  double t3440;
  double t3474;
  double t3478;
  double t3479;
  double t3492;
  double t3497;
  double t3513;
  double t3531;
  double t3536;
  double t3537;
  double t3541;
  double t3542;
  double t3548;
  double t3552;
  double t3554;
  double t3555;
  double t3560;
  double t3563;
  double t3568;
  double t3589;
  double t3600;
  double t3604;
  double t3613;
  double t3616;
  double t3618;
  double t3713;
  double t3725;
  double t3741;
  double t3836;
  double t3837;
  double t3840;
  double t3845;
  double t3854;
  double t3881;
  double t3948;
  double t3950;
  double t4011;
  double t4039;
  double t4041;
  double t4045;
  double t4086;
  double t4087;
  double t4089;
  double t4095;
  double t4097;
  double t4100;
  double t4103;
  double t4107;
  double t4108;
  double t4116;
  double t4122;
  double t4127;
  double t4136;
  double t4139;
  double t4144;
  double t4173;
  double t4174;
  double t4179;
  double t4273;
  double t4274;
  double t4276;
  double t4299;
  double t4309;
  double t4320;
  double t4345;
  double t4348;
  double t4349;
  double t4358;
  double t4360;
  double t4361;
  double t4376;
  double t4382;
  double t4384;
  double t4406;
  double t4407;
  double t4411;
  double t4415;
  double t4426;
  double t4432;
  double t4445;
  double t4449;
  double t4450;
  double t4452;
  double t4456;
  double t4460;
  double t4530;
  double t4531;
  double t4545;
  double t4577;
  double t4578;
  double t4641;
  double t4645;
  double t4668;
  double t4669;
  double t4682;
  double t4685;
  double t4687;
  double t4694;
  double t4698;
  double t4704;
  double t4710;
  double t4720;
  double t4722;
  double t4761;
  double t4762;
  double t4765;
  double t4781;
  double t4783;
  double t4784;
  double t4812;
  double t4813;
  double t4814;
  double t4852;
  double t4853;
  double t4857;
  double t4918;
  double t4922;
  double t4923;
  double t4989;
  double t4996;
  double t4998;
  double t5014;
  double t5017;
  double t5022;
  double t5030;
  double t5031;
  double t5035;
  double t5039;
  double t5041;
  double t5042;
  double t5046;
  double t5048;
  double t5050;
  double t5056;
  double t5087;
  double t5092;
  double t5106;
  double t5107;
  double t5116;
  double t5164;
  double t5171;
  double t5176;
  double t5190;
  double t5191;
  double t5204;
  double t5264;
  double t5271;
  double t5294;
  double t5319;
  double t5320;
  double t5323;
  double t5326;
  double t5334;
  double t5339;
  double t5363;
  double t5368;
  double t5390;
  double t5406;
  double t5407;
  double t5408;
  double t5422;
  double t5424;
  double t5427;
  double t5461;
  double t5465;
  double t5474;
  double t5480;
  double t5485;
  double t5486;
  double t5491;
  double t5492;
  double t5496;
  double t5502;
  double t5504;
  double t5514;
  double t5600;
  double t5603;
  double t5606;
  double t5632;
  double t5635;
  double t5646;
  double t5652;
  double t5656;
  double t5661;
  double t5666;
  double t5669;
  double t5671;
  double t5674;
  double t5681;
  double t5682;
  double t5686;
  double t5687;
  double t5688;
  double t5697;
  double t5711;
  double t5723;
  double t5728;
  double t5729;
  double t5730;
  double t5735;
  double t5737;
  double t5738;
  double t5783;
  double t5784;
  double t5788;
  double t5806;
  double t5810;
  double t5814;
  double t5815;
  double t5818;
  double t5820;
  double t5822;
  double t5823;
  double t5826;
  double t5827;
  double t5829;
  double t5835;
  double t5836;
  double t5839;
  double t5850;
  double t5852;
  double t5862;
  double t5870;
  double t5871;
  double t5937;
  double t5940;
  double t5943;
  double t5946;
  double t5962;
  double t5965;
  double t5967;
  double t6054;
  double t6056;
  double t6061;
  double t6104;
  double t6105;
  double t6138;
  double t6208;
  double t6210;
  double t6212;
  double t6227;
  double t6228;
  double t6229;
  double t6276;
  double t6282;
  double t6283;
  double t6286;
  double t6287;
  double t6292;
  double t6303;
  double t6314;
  double t6347;
  double t6371;
  double t6372;
  double t6376;
  double t6034;
  double t6041;
  double t6043;
  double t6065;
  double t6072;
  double t2730;
  double t2732;
  double t2737;
  double t6747;
  double t6752;
  double t6754;
  double t6756;
  double t6758;
  double t6759;
  double t6762;
  double t6763;
  double t6764;
  double t6772;
  double t6788;
  double t6854;
  double t7162;
  double t7165;
  double t7237;
  double t7272;
  double t7336;
  double t7337;
  double t9190;
  double t9208;
  double t9215;
  double t8770;
  double t8901;
  double t9167;
  double t9378;
  double t9403;
  double t9407;
  double t9684;
  double t9686;
  double t9688;
  double t9706;
  double t9727;
  double t9728;
  double t9733;
  double t9749;
  double t9762;
  double t9868;
  double t9872;
  double t9913;
  double t9941;
  double t9961;
  double t9965;
  double t9967;
  double t9968;
  double t9970;
  double t10176;
  double t10185;
  double t10195;
  double t10242;
  double t10243;
  double t10256;
  double t10274;
  double t10275;
  double t10285;
  double t10317;
  double t10400;
  double t10415;
  double t10429;
  double t10442;
  double t10445;
  double t10459;
  double t10468;
  double t10473;
  double t10495;
  double t10515;
  double t10535;
  double t10546;
  double t10560;
  double t10566;
  double t10568;
  double t10575;
  double t10576;
  double t10151;
  double t10158;
  double t10199;
  double t10202;
  double t10213;
  double t10723;
  double t10726;
  double t10749;
  double t10759;
  double t10761;
  double t10804;
  double t10805;
  double t10811;
  double t10937;
  double t10949;
  double t10953;
  double t11011;
  double t11018;
  double t11061;
  double t11069;
  double t11070;
  double t11108;
  double t11138;
  double t11139;
  double t11141;
  double t11463;
  double t11465;
  double t11474;
  double t11514;
  double t11540;
  double t11541;
  double t11547;
  double t11599;
  double t11600;
  double t11607;
  double t11608;
  double t11612;
  double t11660;
  double t11686;
  double t11699;
  double t11715;
  double t11728;
  double t11738;
  double t11744;
  double t11746;
  double t11748;
  double t11769;
  double t11771;
  double t11778;
  double t11818;
  double t11834;
  double t11837;
  double t11895;
  double t11909;
  double t11925;
  double t11976;
  double t11977;
  double t12005;
  double t12008;
  double t12021;
  double t12054;
  double t12055;
  double t12067;
  double t12070;
  double t12088;
  double t12117;
  double t12120;
  double t12124;
  double t12145;
  double t12165;
  double t12172;
  double t11874;
  double t11877;
  double t11885;
  double t11938;
  double t11964;
  double t12337;
  double t12342;
  double t12346;
  double t12348;
  double t12350;
  double t12365;
  double t12366;
  double t12371;
  double t12372;
  double t12376;
  double t12382;
  double t12383;
  double t12390;
  double t12470;
  double t12477;
  double t12478;
  double t12490;
  double t12493;
  double t12496;
  double t12498;
  double t12517;
  double t12519;
  double t12521;
  double t12530;
  double t12531;
  double t12532;
  double t12537;
  double t12540;
  double t12541;
  double t12544;
  double t12546;
  double t12548;
  double t12656;
  double t12658;
  double t12660;
  double t12664;
  double t12667;
  double t12683;
  double t12684;
  double t12690;
  double t12692;
  double t12693;
  double t12696;
  double t12697;
  double t12702;
  double t12637;
  double t12638;
  double t12649;
  double t12650;
  double t12655;
  double t12795;
  double t12799;
  double t12821;
  double t12822;
  double t12833;
  double t12841;
  double t12842;
  double t12954;
  double t13033;
  double t13067;
  double t13111;
  double t13113;
  double t13132;
  double t13164;
  double t13240;
  double t13368;
  double t13518;
  double t13619;
  double t13621;
  double t13638;
  double t14169;
  double t14177;
  double t14181;
  double t14454;
  double t14468;
  double t14603;
  double t14617;
  double t14119;
  double t14129;
  double t14145;
  double t14200;
  double t14211;
  double t14926;
  double t14932;
  double t2903;
  double t15119;
  double t15120;
  double t15121;
  double t15133;
  double t15135;
  double t15145;
  double t15150;
  double t14663;
  double t15778;
  double t15821;
  double t15828;
  double t14844;
  double t15504;
  double t15552;
  double t15592;
  double t15706;
  double t15730;
  double t14938;
  double t2906;
  double t2907;
  double t15162;
  double t15991;
  double t16222;
  double t16238;
  double t15250;
  t1018 = Cos(var1[3]);
  t694 = Cos(var1[6]);
  t995 = Cos(var1[5]);
  t1003 = Sin(var1[3]);
  t1006 = -1.*t995*t1003;
  t1066 = Sin(var1[4]);
  t1080 = Sin(var1[5]);
  t1087 = -1.*t1018*t1066*t1080;
  t1090 = t1006 + t1087;
  t1100 = Cos(var1[4]);
  t1102 = Sin(var1[6]);
  t1231 = Cos(var1[7]);
  t1237 = -1.*t1231;
  t1239 = 1. + t1237;
  t1244 = Sin(var1[7]);
  t1166 = t694*t1090;
  t1193 = -1.*t1018*t1100*t1102;
  t1226 = t1166 + t1193;
  t1278 = t1018*t995*t1066;
  t1289 = -1.*t1003*t1080;
  t1294 = t1278 + t1289;
  t1375 = Cos(var1[8]);
  t1388 = -1.*t1375;
  t1399 = 1. + t1388;
  t1404 = Sin(var1[8]);
  t1337 = t1231*t1294;
  t1342 = t1226*t1244;
  t1369 = t1337 + t1342;
  t1436 = -1.*t1018*t1100*t694;
  t1449 = -1.*t1090*t1102;
  t1604 = t1436 + t1449;
  t1757 = Cos(var1[9]);
  t1797 = -1.*t1757;
  t1854 = 1. + t1797;
  t1869 = Sin(var1[9]);
  t2021 = t1375*t1369;
  t2099 = t1604*t1404;
  t2142 = t2021 + t2099;
  t2207 = t1375*t1604;
  t2231 = -1.*t1369*t1404;
  t2252 = t2207 + t2231;
  t2269 = Cos(var1[10]);
  t2277 = -1.*t2269;
  t2282 = 1. + t2277;
  t2301 = Sin(var1[10]);
  t2319 = -1.*t1869*t2142;
  t2322 = t1757*t2252;
  t2323 = t2319 + t2322;
  t2419 = t1757*t2142;
  t2423 = t1869*t2252;
  t2424 = t2419 + t2423;
  t2453 = Cos(var1[11]);
  t2457 = -1.*t2453;
  t2468 = 1. + t2457;
  t2480 = Sin(var1[11]);
  t2500 = t2301*t2323;
  t2502 = t2269*t2424;
  t2507 = t2500 + t2502;
  t2555 = t2269*t2323;
  t2559 = -1.*t2301*t2424;
  t2560 = t2555 + t2559;
  t2565 = Cos(var1[13]);
  t2569 = -1.*t2565;
  t2586 = 1. + t2569;
  t2590 = Sin(var1[13]);
  t2612 = -1.*t2480*t2507;
  t2615 = t2453*t2560;
  t2627 = t2612 + t2615;
  t2656 = t2453*t2507;
  t2659 = t2480*t2560;
  t2661 = t2656 + t2659;
  t841 = -1.*t694;
  t931 = 1. + t841;
  t942 = 0.135*t931;
  t947 = 0. + t942;
  t1124 = -0.135*t1102;
  t1146 = 0. + t1124;
  t2685 = t1018*t995;
  t2686 = -1.*t1003*t1066*t1080;
  t2691 = t2685 + t2686;
  t1243 = 0.135*t1239;
  t1261 = 0.049*t1244;
  t1262 = 0. + t1243 + t1261;
  t1305 = -0.049*t1239;
  t1311 = 0.135*t1244;
  t1312 = 0. + t1305 + t1311;
  t2700 = t694*t2691;
  t2704 = -1.*t1100*t1003*t1102;
  t2705 = t2700 + t2704;
  t2713 = t995*t1003*t1066;
  t2714 = t1018*t1080;
  t2717 = t2713 + t2714;
  t1400 = -0.049*t1399;
  t1406 = -0.09*t1404;
  t1407 = 0. + t1400 + t1406;
  t1704 = -0.09*t1399;
  t1728 = 0.049*t1404;
  t1729 = 0. + t1704 + t1728;
  t1867 = -0.049*t1854;
  t1874 = -0.21*t1869;
  t1973 = 0. + t1867 + t1874;
  t2745 = t1231*t2717;
  t2746 = t2705*t1244;
  t2757 = t2745 + t2746;
  t2762 = -1.*t1100*t694*t1003;
  t2766 = -1.*t2691*t1102;
  t2767 = t2762 + t2766;
  t2177 = -0.21*t1854;
  t2184 = 0.049*t1869;
  t2191 = 0. + t2177 + t2184;
  t2286 = -0.27068*t2282;
  t2305 = 0.00159*t2301;
  t2314 = 0. + t2286 + t2305;
  t2778 = t1375*t2757;
  t2783 = t2767*t1404;
  t2788 = t2778 + t2783;
  t2793 = t1375*t2767;
  t2796 = -1.*t2757*t1404;
  t2800 = t2793 + t2796;
  t2387 = -0.00159*t2282;
  t2389 = -0.27068*t2301;
  t2392 = 0. + t2387 + t2389;
  t2474 = 0.01841*t2468;
  t2481 = -0.70544*t2480;
  t2490 = 0. + t2474 + t2481;
  t2805 = -1.*t1869*t2788;
  t2814 = t1757*t2800;
  t2815 = t2805 + t2814;
  t2823 = t1757*t2788;
  t2824 = t1869*t2800;
  t2825 = t2823 + t2824;
  t2538 = -0.70544*t2468;
  t2539 = -0.01841*t2480;
  t2553 = 0. + t2538 + t2539;
  t2587 = -1.11344*t2586;
  t2600 = 0.02159*t2590;
  t2601 = 0. + t2587 + t2600;
  t2829 = t2301*t2815;
  t2838 = t2269*t2825;
  t2846 = t2829 + t2838;
  t2852 = t2269*t2815;
  t2866 = -1.*t2301*t2825;
  t2867 = t2852 + t2866;
  t2646 = -0.02159*t2586;
  t2648 = -1.11344*t2590;
  t2655 = 0. + t2646 + t2648;
  t2878 = -1.*t2480*t2846;
  t2879 = t2453*t2867;
  t2880 = t2878 + t2879;
  t2882 = t2453*t2846;
  t2889 = t2480*t2867;
  t2890 = t2882 + t2889;
  t2924 = t694*t1066*t1080;
  t2925 = t1100*t1102;
  t2926 = t2924 + t2925;
  t2971 = -1.*t995*t1231*t1066;
  t2976 = t2926*t1244;
  t2979 = t2971 + t2976;
  t2986 = t1100*t694;
  t2987 = -1.*t1066*t1080*t1102;
  t2988 = t2986 + t2987;
  t2992 = t1375*t2979;
  t3005 = t2988*t1404;
  t3011 = t2992 + t3005;
  t3025 = t1375*t2988;
  t3026 = -1.*t2979*t1404;
  t3032 = t3025 + t3026;
  t3034 = -1.*t1869*t3011;
  t3037 = t1757*t3032;
  t3042 = t3034 + t3037;
  t3054 = t1757*t3011;
  t3055 = t1869*t3032;
  t3061 = t3054 + t3055;
  t3108 = t2301*t3042;
  t3113 = t2269*t3061;
  t3119 = t3108 + t3113;
  t3135 = t2269*t3042;
  t3144 = -1.*t2301*t3061;
  t3151 = t3135 + t3144;
  t3157 = -1.*t2480*t3119;
  t3181 = t2453*t3151;
  t3182 = t3157 + t3181;
  t3197 = t2453*t3119;
  t3199 = t2480*t3151;
  t3202 = t3197 + t3199;
  t3274 = -1.*t1100*t694*t1003*t1080;
  t3295 = t1003*t1066*t1102;
  t3296 = t3274 + t3295;
  t3372 = t1100*t995*t1231*t1003;
  t3380 = t3296*t1244;
  t3384 = t3372 + t3380;
  t3416 = t694*t1003*t1066;
  t3417 = t1100*t1003*t1080*t1102;
  t3440 = t3416 + t3417;
  t3474 = t1375*t3384;
  t3478 = t3440*t1404;
  t3479 = t3474 + t3478;
  t3492 = t1375*t3440;
  t3497 = -1.*t3384*t1404;
  t3513 = t3492 + t3497;
  t3531 = -1.*t1869*t3479;
  t3536 = t1757*t3513;
  t3537 = t3531 + t3536;
  t3541 = t1757*t3479;
  t3542 = t1869*t3513;
  t3548 = t3541 + t3542;
  t3552 = t2301*t3537;
  t3554 = t2269*t3548;
  t3555 = t3552 + t3554;
  t3560 = t2269*t3537;
  t3563 = -1.*t2301*t3548;
  t3568 = t3560 + t3563;
  t3589 = -1.*t2480*t3555;
  t3600 = t2453*t3568;
  t3604 = t3589 + t3600;
  t3613 = t2453*t3555;
  t3616 = t2480*t3568;
  t3618 = t3613 + t3616;
  t3713 = t1018*t1100*t694*t1080;
  t3725 = -1.*t1018*t1066*t1102;
  t3741 = t3713 + t3725;
  t3836 = -1.*t1018*t1100*t995*t1231;
  t3837 = t3741*t1244;
  t3840 = t3836 + t3837;
  t3845 = -1.*t1018*t694*t1066;
  t3854 = -1.*t1018*t1100*t1080*t1102;
  t3881 = t3845 + t3854;
  t3948 = t1375*t3840;
  t3950 = t3881*t1404;
  t4011 = t3948 + t3950;
  t4039 = t1375*t3881;
  t4041 = -1.*t3840*t1404;
  t4045 = t4039 + t4041;
  t4086 = -1.*t1869*t4011;
  t4087 = t1757*t4045;
  t4089 = t4086 + t4087;
  t4095 = t1757*t4011;
  t4097 = t1869*t4045;
  t4100 = t4095 + t4097;
  t4103 = t2301*t4089;
  t4107 = t2269*t4100;
  t4108 = t4103 + t4107;
  t4116 = t2269*t4089;
  t4122 = -1.*t2301*t4100;
  t4127 = t4116 + t4122;
  t4136 = -1.*t2480*t4108;
  t4139 = t2453*t4127;
  t4144 = t4136 + t4139;
  t4173 = t2453*t4108;
  t4174 = t2480*t4127;
  t4179 = t4173 + t4174;
  t4273 = -1.*t1100*t1231*t1080;
  t4274 = -1.*t1100*t995*t694*t1244;
  t4276 = t4273 + t4274;
  t4299 = t1375*t4276;
  t4309 = t1100*t995*t1102*t1404;
  t4320 = t4299 + t4309;
  t4345 = t1100*t995*t1375*t1102;
  t4348 = -1.*t4276*t1404;
  t4349 = t4345 + t4348;
  t4358 = -1.*t1869*t4320;
  t4360 = t1757*t4349;
  t4361 = t4358 + t4360;
  t4376 = t1757*t4320;
  t4382 = t1869*t4349;
  t4384 = t4376 + t4382;
  t4406 = t2301*t4361;
  t4407 = t2269*t4384;
  t4411 = t4406 + t4407;
  t4415 = t2269*t4361;
  t4426 = -1.*t2301*t4384;
  t4432 = t4415 + t4426;
  t4445 = -1.*t2480*t4411;
  t4449 = t2453*t4432;
  t4450 = t4445 + t4449;
  t4452 = t2453*t4411;
  t4456 = t2480*t4432;
  t4460 = t4452 + t4456;
  t4530 = -1.*t995*t1003*t1066;
  t4531 = -1.*t1018*t1080;
  t4545 = t4530 + t4531;
  t4577 = t1231*t2691;
  t4578 = t694*t4545*t1244;
  t4641 = t4577 + t4578;
  t4645 = t1375*t4641;
  t4668 = -1.*t4545*t1102*t1404;
  t4669 = t4645 + t4668;
  t4682 = -1.*t1375*t4545*t1102;
  t4685 = -1.*t4641*t1404;
  t4687 = t4682 + t4685;
  t4694 = -1.*t1869*t4669;
  t4698 = t1757*t4687;
  t4704 = t4694 + t4698;
  t4710 = t1757*t4669;
  t4720 = t1869*t4687;
  t4722 = t4710 + t4720;
  t4761 = t2301*t4704;
  t4762 = t2269*t4722;
  t4765 = t4761 + t4762;
  t4781 = t2269*t4704;
  t4783 = -1.*t2301*t4722;
  t4784 = t4781 + t4783;
  t4812 = -1.*t2480*t4765;
  t4813 = t2453*t4784;
  t4814 = t4812 + t4813;
  t4852 = t2453*t4765;
  t4853 = t2480*t4784;
  t4857 = t4852 + t4853;
  t4918 = t995*t1003;
  t4922 = t1018*t1066*t1080;
  t4923 = t4918 + t4922;
  t4989 = t1231*t4923;
  t4996 = t694*t1294*t1244;
  t4998 = t4989 + t4996;
  t5014 = t1375*t4998;
  t5017 = -1.*t1294*t1102*t1404;
  t5022 = t5014 + t5017;
  t5030 = -1.*t1375*t1294*t1102;
  t5031 = -1.*t4998*t1404;
  t5035 = t5030 + t5031;
  t5039 = -1.*t1869*t5022;
  t5041 = t1757*t5035;
  t5042 = t5039 + t5041;
  t5046 = t1757*t5022;
  t5048 = t1869*t5035;
  t5050 = t5046 + t5048;
  t5056 = t2301*t5042;
  t5087 = t2269*t5050;
  t5092 = t5056 + t5087;
  t5106 = t2269*t5042;
  t5107 = -1.*t2301*t5050;
  t5116 = t5106 + t5107;
  t5164 = -1.*t2480*t5092;
  t5171 = t2453*t5116;
  t5176 = t5164 + t5171;
  t5190 = t2453*t5092;
  t5191 = t2480*t5116;
  t5204 = t5190 + t5191;
  t5264 = t694*t1066;
  t5271 = t1100*t1080*t1102;
  t5294 = t5264 + t5271;
  t5319 = t1100*t694*t1080;
  t5320 = -1.*t1066*t1102;
  t5323 = t5319 + t5320;
  t5326 = t1375*t5294*t1244;
  t5334 = t5323*t1404;
  t5339 = t5326 + t5334;
  t5363 = t1375*t5323;
  t5368 = -1.*t5294*t1244*t1404;
  t5390 = t5363 + t5368;
  t5406 = -1.*t1869*t5339;
  t5407 = t1757*t5390;
  t5408 = t5406 + t5407;
  t5422 = t1757*t5339;
  t5424 = t1869*t5390;
  t5427 = t5422 + t5424;
  t5461 = t2301*t5408;
  t5465 = t2269*t5427;
  t5474 = t5461 + t5465;
  t5480 = t2269*t5408;
  t5485 = -1.*t2301*t5427;
  t5486 = t5480 + t5485;
  t5491 = -1.*t2480*t5474;
  t5492 = t2453*t5486;
  t5496 = t5491 + t5492;
  t5502 = t2453*t5474;
  t5504 = t2480*t5486;
  t5514 = t5502 + t5504;
  t5600 = -1.*t694*t2691;
  t5603 = t1100*t1003*t1102;
  t5606 = t5600 + t5603;
  t5632 = t1375*t2767*t1244;
  t5635 = t5606*t1404;
  t5646 = t5632 + t5635;
  t5652 = t1375*t5606;
  t5656 = -1.*t2767*t1244*t1404;
  t5661 = t5652 + t5656;
  t5666 = -1.*t1869*t5646;
  t5669 = t1757*t5661;
  t5671 = t5666 + t5669;
  t5674 = t1757*t5646;
  t5681 = t1869*t5661;
  t5682 = t5674 + t5681;
  t5686 = t2301*t5671;
  t5687 = t2269*t5682;
  t5688 = t5686 + t5687;
  t5697 = t2269*t5671;
  t5711 = -1.*t2301*t5682;
  t5723 = t5697 + t5711;
  t5728 = -1.*t2480*t5688;
  t5729 = t2453*t5723;
  t5730 = t5728 + t5729;
  t5735 = t2453*t5688;
  t5737 = t2480*t5723;
  t5738 = t5735 + t5737;
  t5783 = t1018*t1100*t694;
  t5784 = -1.*t4923*t1102;
  t5788 = t5783 + t5784;
  t5806 = -1.*t694*t4923;
  t5810 = t5806 + t1193;
  t5814 = t1375*t5788*t1244;
  t5815 = t5810*t1404;
  t5818 = t5814 + t5815;
  t5820 = t1375*t5810;
  t5822 = -1.*t5788*t1244*t1404;
  t5823 = t5820 + t5822;
  t5826 = -1.*t1869*t5818;
  t5827 = t1757*t5823;
  t5829 = t5826 + t5827;
  t5835 = t1757*t5818;
  t5836 = t1869*t5823;
  t5839 = t5835 + t5836;
  t5850 = t2301*t5829;
  t5852 = t2269*t5839;
  t5862 = t5850 + t5852;
  t5870 = t2269*t5829;
  t5871 = -1.*t2301*t5839;
  t5937 = t5870 + t5871;
  t5940 = -1.*t2480*t5862;
  t5943 = t2453*t5937;
  t5946 = t5940 + t5943;
  t5962 = t2453*t5862;
  t5965 = t2480*t5937;
  t5967 = t5962 + t5965;
  t6054 = -1.*t1100*t694*t1080;
  t6056 = t1066*t1102;
  t6061 = t6054 + t6056;
  t6104 = t1231*t6061;
  t6105 = -1.*t1100*t995*t1244;
  t6138 = t6104 + t6105;
  t6208 = -1.*t1375*t1869*t6138;
  t6210 = -1.*t1757*t6138*t1404;
  t6212 = t6208 + t6210;
  t6227 = t1757*t1375*t6138;
  t6228 = -1.*t1869*t6138*t1404;
  t6229 = t6227 + t6228;
  t6276 = t2301*t6212;
  t6282 = t2269*t6229;
  t6283 = t6276 + t6282;
  t6286 = t2269*t6212;
  t6287 = -1.*t2301*t6229;
  t6292 = t6286 + t6287;
  t6303 = -1.*t2480*t6283;
  t6314 = t2453*t6292;
  t6347 = t6303 + t6314;
  t6371 = t2453*t6283;
  t6372 = t2480*t6292;
  t6376 = t6371 + t6372;
  t6034 = 0.135*t1231;
  t6041 = -0.049*t1244;
  t6043 = t6034 + t6041;
  t6065 = 0.049*t1231;
  t6072 = t6065 + t1311;
  t2730 = t1231*t2705;
  t2732 = -1.*t2717*t1244;
  t2737 = t2730 + t2732;
  t6747 = -1.*t1375*t1869*t2737;
  t6752 = -1.*t1757*t2737*t1404;
  t6754 = t6747 + t6752;
  t6756 = t1757*t1375*t2737;
  t6758 = -1.*t1869*t2737*t1404;
  t6759 = t6756 + t6758;
  t6762 = t2301*t6754;
  t6763 = t2269*t6759;
  t6764 = t6762 + t6763;
  t6772 = t2269*t6754;
  t6788 = -1.*t2301*t6759;
  t6854 = t6772 + t6788;
  t7162 = -1.*t2480*t6764;
  t7165 = t2453*t6854;
  t7237 = t7162 + t7165;
  t7272 = t2453*t6764;
  t7336 = t2480*t6854;
  t7337 = t7272 + t7336;
  t9190 = t694*t4923;
  t9208 = t1018*t1100*t1102;
  t9215 = t9190 + t9208;
  t8770 = -1.*t1018*t995*t1066;
  t8901 = t1003*t1080;
  t9167 = t8770 + t8901;
  t9378 = t1231*t9215;
  t9403 = -1.*t9167*t1244;
  t9407 = t9378 + t9403;
  t9684 = -1.*t1375*t1869*t9407;
  t9686 = -1.*t1757*t9407*t1404;
  t9688 = t9684 + t9686;
  t9706 = t1757*t1375*t9407;
  t9727 = -1.*t1869*t9407*t1404;
  t9728 = t9706 + t9727;
  t9733 = t2301*t9688;
  t9749 = t2269*t9728;
  t9762 = t9733 + t9749;
  t9868 = t2269*t9688;
  t9872 = -1.*t2301*t9728;
  t9913 = t9868 + t9872;
  t9941 = -1.*t2480*t9762;
  t9961 = t2453*t9913;
  t9965 = t9941 + t9961;
  t9967 = t2453*t9762;
  t9968 = t2480*t9913;
  t9970 = t9967 + t9968;
  t10176 = t1100*t995*t1231;
  t10185 = t6061*t1244;
  t10195 = t10176 + t10185;
  t10242 = -1.*t1375*t10195;
  t10243 = -1.*t5294*t1404;
  t10256 = t10242 + t10243;
  t10274 = t1375*t5294;
  t10275 = -1.*t10195*t1404;
  t10285 = t10274 + t10275;
  t10317 = t1869*t10256;
  t10400 = t1757*t10285;
  t10415 = t10317 + t10400;
  t10429 = t1757*t10256;
  t10442 = -1.*t1869*t10285;
  t10445 = t10429 + t10442;
  t10459 = -1.*t2301*t10415;
  t10468 = t2269*t10445;
  t10473 = t10459 + t10468;
  t10495 = t2269*t10415;
  t10515 = t2301*t10445;
  t10535 = t10495 + t10515;
  t10546 = t2480*t10473;
  t10560 = t2453*t10535;
  t10566 = t10546 + t10560;
  t10568 = t2453*t10473;
  t10575 = -1.*t2480*t10535;
  t10576 = t10568 + t10575;
  t10151 = 0.049*t1375;
  t10158 = t10151 + t1406;
  t10199 = -0.09*t1375;
  t10202 = -0.049*t1404;
  t10213 = t10199 + t10202;
  t10723 = -1.*t1375*t2757;
  t10726 = -1.*t2767*t1404;
  t10749 = t10723 + t10726;
  t10759 = t1869*t10749;
  t10761 = t10759 + t2814;
  t10804 = t1757*t10749;
  t10805 = -1.*t1869*t2800;
  t10811 = t10804 + t10805;
  t10937 = -1.*t2301*t10761;
  t10949 = t2269*t10811;
  t10953 = t10937 + t10949;
  t11011 = t2269*t10761;
  t11018 = t2301*t10811;
  t11061 = t11011 + t11018;
  t11069 = t2480*t10953;
  t11070 = t2453*t11061;
  t11108 = t11069 + t11070;
  t11138 = t2453*t10953;
  t11139 = -1.*t2480*t11061;
  t11141 = t11138 + t11139;
  t11463 = t1231*t9167;
  t11465 = t9215*t1244;
  t11474 = t11463 + t11465;
  t11514 = -1.*t1375*t11474;
  t11540 = -1.*t5788*t1404;
  t11541 = t11514 + t11540;
  t11547 = t1375*t5788;
  t11599 = -1.*t11474*t1404;
  t11600 = t11547 + t11599;
  t11607 = t1869*t11541;
  t11608 = t1757*t11600;
  t11612 = t11607 + t11608;
  t11660 = t1757*t11541;
  t11686 = -1.*t1869*t11600;
  t11699 = t11660 + t11686;
  t11715 = -1.*t2301*t11612;
  t11728 = t2269*t11699;
  t11738 = t11715 + t11728;
  t11744 = t2269*t11612;
  t11746 = t2301*t11699;
  t11748 = t11744 + t11746;
  t11769 = t2480*t11738;
  t11771 = t2453*t11748;
  t11778 = t11769 + t11771;
  t11818 = t2453*t11738;
  t11834 = -1.*t2480*t11748;
  t11837 = t11818 + t11834;
  t11895 = t1375*t10195;
  t11909 = t5294*t1404;
  t11925 = t11895 + t11909;
  t11976 = -1.*t1869*t11925;
  t11977 = t11976 + t10400;
  t12005 = -1.*t1757*t11925;
  t12008 = t12005 + t10442;
  t12021 = -1.*t2301*t11977;
  t12054 = t2269*t12008;
  t12055 = t12021 + t12054;
  t12067 = t2269*t11977;
  t12070 = t2301*t12008;
  t12088 = t12067 + t12070;
  t12117 = t2480*t12055;
  t12120 = t2453*t12088;
  t12124 = t12117 + t12120;
  t12145 = t2453*t12055;
  t12165 = -1.*t2480*t12088;
  t12172 = t12145 + t12165;
  t11874 = -0.21*t1757;
  t11877 = -0.049*t1869;
  t11885 = t11874 + t11877;
  t11938 = 0.049*t1757;
  t11964 = t11938 + t1874;
  t12337 = -1.*t1757*t2788;
  t12342 = t12337 + t10805;
  t12346 = -1.*t2301*t2815;
  t12348 = t2269*t12342;
  t12350 = t12346 + t12348;
  t12365 = t2301*t12342;
  t12366 = t2852 + t12365;
  t12371 = t2480*t12350;
  t12372 = t2453*t12366;
  t12376 = t12371 + t12372;
  t12382 = t2453*t12350;
  t12383 = -1.*t2480*t12366;
  t12390 = t12382 + t12383;
  t12470 = t1375*t11474;
  t12477 = t5788*t1404;
  t12478 = t12470 + t12477;
  t12490 = -1.*t1869*t12478;
  t12493 = t12490 + t11608;
  t12496 = -1.*t1757*t12478;
  t12498 = t12496 + t11686;
  t12517 = -1.*t2301*t12493;
  t12519 = t2269*t12498;
  t12521 = t12517 + t12519;
  t12530 = t2269*t12493;
  t12531 = t2301*t12498;
  t12532 = t12530 + t12531;
  t12537 = t2480*t12521;
  t12540 = t2453*t12532;
  t12541 = t12537 + t12540;
  t12544 = t2453*t12521;
  t12546 = -1.*t2480*t12532;
  t12548 = t12544 + t12546;
  t12656 = t1757*t11925;
  t12658 = t1869*t10285;
  t12660 = t12656 + t12658;
  t12664 = -1.*t2269*t12660;
  t12667 = t12021 + t12664;
  t12683 = -1.*t2301*t12660;
  t12684 = t12067 + t12683;
  t12690 = t2480*t12667;
  t12692 = t2453*t12684;
  t12693 = t12690 + t12692;
  t12696 = t2453*t12667;
  t12697 = -1.*t2480*t12684;
  t12702 = t12696 + t12697;
  t12637 = 0.00159*t2269;
  t12638 = t12637 + t2389;
  t12649 = -0.27068*t2269;
  t12650 = -0.00159*t2301;
  t12655 = t12649 + t12650;
  t12795 = -1.*t2269*t2825;
  t12799 = t12346 + t12795;
  t12821 = t2480*t12799;
  t12822 = t12821 + t2879;
  t12833 = t2453*t12799;
  t12841 = -1.*t2480*t2867;
  t12842 = t12833 + t12841;
  t12954 = t1757*t12478;
  t13033 = t1869*t11600;
  t13067 = t12954 + t13033;
  t13111 = -1.*t2269*t13067;
  t13113 = t12517 + t13111;
  t13132 = -1.*t2301*t13067;
  t13164 = t12530 + t13132;
  t13240 = t2480*t13113;
  t13368 = t2453*t13164;
  t13518 = t13240 + t13368;
  t13619 = t2453*t13113;
  t13621 = -1.*t2480*t13164;
  t13638 = t13619 + t13621;
  t14169 = t2301*t11977;
  t14177 = t2269*t12660;
  t14181 = t14169 + t14177;
  t14454 = -1.*t2480*t14181;
  t14468 = t14454 + t12692;
  t14603 = -1.*t2453*t14181;
  t14617 = t14603 + t12697;
  t14119 = -0.70544*t2453;
  t14129 = 0.01841*t2480;
  t14145 = t14119 + t14129;
  t14200 = -0.01841*t2453;
  t14211 = t14200 + t2481;
  t14926 = -1.*t2453*t2846;
  t14932 = t14926 + t12841;
  t2903 = t2565*t2880;
  t15119 = t2301*t12493;
  t15120 = t2269*t13067;
  t15121 = t15119 + t15120;
  t15133 = -1.*t2480*t15121;
  t15135 = t15133 + t13368;
  t15145 = -1.*t2453*t15121;
  t15150 = t15145 + t13621;
  t14663 = -1.*t2590*t14468;
  t15778 = t2453*t14181;
  t15821 = t2480*t12684;
  t15828 = t15778 + t15821;
  t14844 = t2565*t14468;
  t15504 = 0.02159*t2565;
  t15552 = t15504 + t2648;
  t15592 = -1.11344*t2565;
  t15706 = -0.02159*t2590;
  t15730 = t15592 + t15706;
  t14938 = -1.*t2590*t2880;
  t2906 = -1.*t2590*t2890;
  t2907 = t2903 + t2906;
  t15162 = -1.*t2590*t15135;
  t15991 = t2453*t15121;
  t16222 = t2480*t13164;
  t16238 = t15991 + t16222;
  t15250 = t2565*t15135;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=-1.*t1018*t1100*t1146 + t1226*t1262 + 0.1305*(t1226*t1231 - 1.*t1244*t1294) + t1294*t1312 + t1369*t1407 + t1604*t1729 + t1973*t2142 + t2191*t2252 + t2314*t2323 + t2392*t2424 + t2490*t2507 + t2553*t2560 + t2601*t2627 + t2655*t2661 + 0.075595*(t2590*t2627 + t2565*t2661) - 1.077437*(t2565*t2627 - 1.*t2590*t2661) + t1090*t947;
  p_output1[11]=-1.*t1003*t1100*t1146 + t1262*t2705 + t1312*t2717 + 0.1305*t2737 + t1407*t2757 + t1729*t2767 + t1973*t2788 + t2191*t2800 + t2314*t2815 + t2392*t2825 + t2490*t2846 + t2553*t2867 + t2601*t2880 + t2655*t2890 + 0.075595*(t2590*t2880 + t2565*t2890) - 1.077437*t2907 + t2691*t947;
  p_output1[12]=t1100*t1146 + t1262*t2926 + t1407*t2979 + t1729*t2988 + t1973*t3011 + t2191*t3032 + t2314*t3042 + t2392*t3061 + t2490*t3119 + t2553*t3151 + t2601*t3182 + t2655*t3202 + 0.075595*(t2590*t3182 + t2565*t3202) - 1.077437*(t2565*t3182 - 1.*t2590*t3202) + t1066*t1080*t947 - 1.*t1066*t1312*t995 + 0.1305*(t1231*t2926 + t1066*t1244*t995);
  p_output1[13]=t1003*t1066*t1146 + t1262*t3296 + t1407*t3384 + t1729*t3440 + t1973*t3479 + t2191*t3513 + t2314*t3537 + t2392*t3548 + t2490*t3555 + t2553*t3568 + t2601*t3604 + t2655*t3618 + 0.075595*(t2590*t3604 + t2565*t3618) - 1.077437*(t2565*t3604 - 1.*t2590*t3618) - 1.*t1003*t1080*t1100*t947 + t1003*t1100*t1312*t995 + 0.1305*(t1231*t3296 - 1.*t1003*t1100*t1244*t995);
  p_output1[14]=-1.*t1018*t1066*t1146 + t1262*t3741 + t1407*t3840 + t1729*t3881 + t1973*t4011 + t2191*t4045 + t2314*t4089 + t2392*t4100 + t2490*t4108 + t2553*t4127 + t2601*t4144 + t2655*t4179 + 0.075595*(t2590*t4144 + t2565*t4179) - 1.077437*(t2565*t4144 - 1.*t2590*t4179) + t1018*t1080*t1100*t947 - 1.*t1018*t1100*t1312*t995 + 0.1305*(t1231*t3741 + t1018*t1100*t1244*t995);
  p_output1[15]=-1.*t1080*t1100*t1312 + t1407*t4276 + t1973*t4320 + t2191*t4349 + t2314*t4361 + t2392*t4384 + t2490*t4411 + t2553*t4432 + t2601*t4450 + t2655*t4460 + 0.075595*(t2590*t4450 + t2565*t4460) - 1.077437*(t2565*t4450 - 1.*t2590*t4460) + t1100*t1102*t1729*t995 - 1.*t1100*t1262*t694*t995 - 1.*t1100*t947*t995 + 0.1305*(t1080*t1100*t1244 - 1.*t1100*t1231*t694*t995);
  p_output1[16]=t1312*t2691 - 1.*t1102*t1729*t4545 + t1407*t4641 + t1973*t4669 + t2191*t4687 + t2314*t4704 + t2392*t4722 + t2490*t4765 + t2553*t4784 + t2601*t4814 + t2655*t4857 + 0.075595*(t2590*t4814 + t2565*t4857) - 1.077437*(t2565*t4814 - 1.*t2590*t4857) + t1262*t4545*t694 + 0.1305*(-1.*t1244*t2691 + t1231*t4545*t694) + t4545*t947;
  p_output1[17]=-1.*t1102*t1294*t1729 + t1312*t4923 + t1407*t4998 + t1973*t5022 + t2191*t5035 + t2314*t5042 + t2392*t5050 + t2490*t5092 + t2553*t5116 + t2601*t5176 + t2655*t5204 + 0.075595*(t2590*t5176 + t2565*t5204) - 1.077437*(t2565*t5176 - 1.*t2590*t5204) + t1262*t1294*t694 + 0.1305*(-1.*t1244*t4923 + t1231*t1294*t694) + t1294*t947;
  p_output1[18]=-0.135*t1080*t1100*t1102 + 0.1305*t1231*t5294 + t1262*t5294 + t1244*t1407*t5294 + t1729*t5323 + t1973*t5339 + t2191*t5390 + t2314*t5408 + t2392*t5427 + t2490*t5474 + t2553*t5486 + t2601*t5496 + t2655*t5514 + 0.075595*(t2590*t5496 + t2565*t5514) - 1.077437*(t2565*t5496 - 1.*t2590*t5514) - 0.135*t1066*t694;
  p_output1[19]=0.135*t1102*t2691 + 0.1305*t1231*t2767 + t1262*t2767 + t1244*t1407*t2767 + t1729*t5606 + t1973*t5646 + t2191*t5661 + t2314*t5671 + t2392*t5682 + t2490*t5688 + t2553*t5723 + t2601*t5730 + t2655*t5738 + 0.075595*(t2590*t5730 + t2565*t5738) - 1.077437*(t2565*t5730 - 1.*t2590*t5738) + 0.135*t1003*t1100*t694;
  p_output1[20]=0.135*t1102*t4923 + 0.1305*t1231*t5788 + t1262*t5788 + t1244*t1407*t5788 + t1729*t5810 + t1973*t5818 + t2191*t5823 + t2314*t5829 + t2392*t5839 + t2490*t5862 + t2553*t5937 + t2601*t5946 + t2655*t5967 + 0.075595*(t2590*t5946 + t2565*t5967) - 1.077437*(t2565*t5946 - 1.*t2590*t5967) - 0.135*t1018*t1100*t694;
  p_output1[21]=t6061*t6072 + t1407*t6138 + t1375*t1973*t6138 - 1.*t1404*t2191*t6138 + t2314*t6212 + t2392*t6229 + t2490*t6283 + t2553*t6292 + t2601*t6347 + t2655*t6376 + 0.075595*(t2590*t6347 + t2565*t6376) - 1.077437*(t2565*t6347 - 1.*t2590*t6376) + t1100*t6043*t995 + 0.1305*(-1.*t1244*t6061 - 1.*t1100*t1231*t995);
  p_output1[22]=0.1305*(-1.*t1244*t2705 - 1.*t1231*t2717) + t1407*t2737 + t1375*t1973*t2737 - 1.*t1404*t2191*t2737 + t2717*t6043 + t2705*t6072 + t2314*t6754 + t2392*t6759 + t2490*t6764 + t2553*t6854 + t2601*t7237 + t2655*t7337 + 0.075595*(t2590*t7237 + t2565*t7337) - 1.077437*(t2565*t7237 - 1.*t2590*t7337);
  p_output1[23]=t6043*t9167 + t6072*t9215 + 0.1305*(-1.*t1231*t9167 - 1.*t1244*t9215) + t1407*t9407 + t1375*t1973*t9407 - 1.*t1404*t2191*t9407 + t2314*t9688 + t2392*t9728 + t2490*t9762 + t2553*t9913 + t2601*t9965 + t2655*t9970 + 0.075595*(t2590*t9965 + t2565*t9970) - 1.077437*(t2565*t9965 - 1.*t2590*t9970);
  p_output1[24]=t10195*t10213 + t10285*t1973 + t10256*t2191 + t10445*t2314 + t10415*t2392 + t10535*t2490 + t10473*t2553 - 1.077437*(t10576*t2565 - 1.*t10566*t2590) + 0.075595*(t10566*t2565 + t10576*t2590) + t10576*t2601 + t10566*t2655 + t10158*t5294;
  p_output1[25]=t10749*t2191 + t10811*t2314 + t10761*t2392 + t11061*t2490 + t10953*t2553 - 1.077437*(t11141*t2565 - 1.*t11108*t2590) + 0.075595*(t11108*t2565 + t11141*t2590) + t11141*t2601 + t11108*t2655 + t10213*t2757 + t10158*t2767 + t1973*t2800;
  p_output1[26]=t10213*t11474 + t11600*t1973 + t11541*t2191 + t11699*t2314 + t11612*t2392 + t11748*t2490 + t11738*t2553 - 1.077437*(t11837*t2565 - 1.*t11778*t2590) + 0.075595*(t11778*t2565 + t11837*t2590) + t11837*t2601 + t11778*t2655 + t10158*t5788;
  p_output1[27]=t11885*t11925 + t10285*t11964 + t12008*t2314 + t11977*t2392 + t12088*t2490 + t12055*t2553 - 1.077437*(t12172*t2565 - 1.*t12124*t2590) + 0.075595*(t12124*t2565 + t12172*t2590) + t12172*t2601 + t12124*t2655;
  p_output1[28]=t12342*t2314 + t12366*t2490 + t12350*t2553 - 1.077437*(t12390*t2565 - 1.*t12376*t2590) + 0.075595*(t12376*t2565 + t12390*t2590) + t12390*t2601 + t12376*t2655 + t11885*t2788 + t11964*t2800 + t2392*t2815;
  p_output1[29]=t11600*t11964 + t11885*t12478 + t12498*t2314 + t12493*t2392 + t12532*t2490 + t12521*t2553 - 1.077437*(t12548*t2565 - 1.*t12541*t2590) + 0.075595*(t12541*t2565 + t12548*t2590) + t12548*t2601 + t12541*t2655;
  p_output1[30]=t11977*t12638 + t12655*t12660 + t12684*t2490 + t12667*t2553 - 1.077437*(t12702*t2565 - 1.*t12693*t2590) + 0.075595*(t12693*t2565 + t12702*t2590) + t12702*t2601 + t12693*t2655;
  p_output1[31]=t12799*t2553 - 1.077437*(t12842*t2565 - 1.*t12822*t2590) + 0.075595*(t12822*t2565 + t12842*t2590) + t12842*t2601 + t12822*t2655 + t12638*t2815 + t12655*t2825 + t2490*t2867;
  p_output1[32]=t12493*t12638 + t12655*t13067 + t13164*t2490 + t13113*t2553 - 1.077437*(t13638*t2565 - 1.*t13518*t2590) + 0.075595*(t13518*t2565 + t13638*t2590) + t13638*t2601 + t13518*t2655;
  p_output1[33]=t14145*t14181 + t12684*t14211 - 1.077437*(t14663 + t14617*t2565) + 0.075595*(t14844 + t14617*t2590) + t14617*t2601 + t14468*t2655;
  p_output1[34]=-1.077437*(t14938 + t14932*t2565) + t14932*t2601 + t14145*t2846 + t14211*t2867 + t2655*t2880 + 0.075595*(t14932*t2590 + t2903);
  p_output1[35]=t13164*t14211 + t14145*t15121 - 1.077437*(t15162 + t15150*t2565) + 0.075595*(t15250 + t15150*t2590) + t15150*t2601 + t15135*t2655;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t14468*t15552 + t15730*t15828 - 1.077437*(t14663 - 1.*t15828*t2565) + 0.075595*(t14844 - 1.*t15828*t2590);
  p_output1[40]=t15552*t2880 + t15730*t2890 - 1.077437*(t14938 - 1.*t2565*t2890) + 0.075595*t2907;
  p_output1[41]=t15135*t15552 + t15730*t16238 - 1.077437*(t15162 - 1.*t16238*t2565) + 0.075595*(t15250 - 1.*t16238*t2590);
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftToe_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




