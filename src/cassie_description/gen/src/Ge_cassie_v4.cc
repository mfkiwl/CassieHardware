/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:00 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "Ge_cassie_v4.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t9;
  double t20;
  double t13;
  double t15;
  double t22;
  double t7;
  double t17;
  double t25;
  double t26;
  double t30;
  double t32;
  double t34;
  double t42;
  double t48;
  double t43;
  double t49;
  double t50;
  double t51;
  double t74;
  double t76;
  double t77;
  double t79;
  double t53;
  double t56;
  double t58;
  double t62;
  double t63;
  double t64;
  double t78;
  double t83;
  double t85;
  double t86;
  double t88;
  double t90;
  double t92;
  double t93;
  double t98;
  double t99;
  double t100;
  double t116;
  double t117;
  double t118;
  double t122;
  double t105;
  double t108;
  double t109;
  double t120;
  double t125;
  double t127;
  double t129;
  double t132;
  double t135;
  double t137;
  double t138;
  double t139;
  double t141;
  double t143;
  double t155;
  double t156;
  double t158;
  double t161;
  double t145;
  double t146;
  double t148;
  double t160;
  double t163;
  double t165;
  double t166;
  double t167;
  double t168;
  double t172;
  double t174;
  double t175;
  double t177;
  double t179;
  double t194;
  double t197;
  double t199;
  double t202;
  double t183;
  double t185;
  double t187;
  double t200;
  double t204;
  double t206;
  double t208;
  double t209;
  double t210;
  double t212;
  double t214;
  double t216;
  double t217;
  double t219;
  double t234;
  double t236;
  double t237;
  double t243;
  double t222;
  double t223;
  double t225;
  double t282;
  double t284;
  double t286;
  double t296;
  double t241;
  double t244;
  double t246;
  double t248;
  double t249;
  double t254;
  double t257;
  double t258;
  double t303;
  double t262;
  double t264;
  double t266;
  double t290;
  double t323;
  double t272;
  double t274;
  double t275;
  double t340;
  double t346;
  double t330;
  double t361;
  double t325;
  double t379;
  double t305;
  double t353;
  double t297;
  double t427;
  double t430;
  double t432;
  double t436;
  double t45;
  double t463;
  double t472;
  double t467;
  double t470;
  double t471;
  double t473;
  double t483;
  double t484;
  double t486;
  double t475;
  double t478;
  double t480;
  double t495;
  double t496;
  double t497;
  double t504;
  double t501;
  double t506;
  double t508;
  double t511;
  double t516;
  double t517;
  double t518;
  double t521;
  double t523;
  double t524;
  double t528;
  double t532;
  double t533;
  double t534;
  double t542;
  double t544;
  double t547;
  double t551;
  double t549;
  double t553;
  double t554;
  double t555;
  double t556;
  double t560;
  double t563;
  double t564;
  double t565;
  double t567;
  double t568;
  double t584;
  double t587;
  double t589;
  double t591;
  double t570;
  double t574;
  double t576;
  double t590;
  double t592;
  double t596;
  double t599;
  double t600;
  double t601;
  double t602;
  double t604;
  double t606;
  double t607;
  double t608;
  double t626;
  double t628;
  double t629;
  double t632;
  double t611;
  double t613;
  double t616;
  double t630;
  double t634;
  double t635;
  double t636;
  double t637;
  double t641;
  double t643;
  double t644;
  double t645;
  double t646;
  double t648;
  double t662;
  double t663;
  double t665;
  double t668;
  double t651;
  double t654;
  double t656;
  double t702;
  double t706;
  double t707;
  double t713;
  double t666;
  double t670;
  double t672;
  double t673;
  double t676;
  double t678;
  double t679;
  double t680;
  double t712;
  double t682;
  double t684;
  double t685;
  double t719;
  double t735;
  double t690;
  double t691;
  double t692;
  double t754;
  double t759;
  double t742;
  double t773;
  double t738;
  double t788;
  double t714;
  double t769;
  double t720;
  double t829;
  double t831;
  double t834;
  double t839;
  double t886;
  double t888;
  double t889;
  double t890;
  double t891;
  double t895;
  double t896;
  double t897;
  double t903;
  double t905;
  double t908;
  double t909;
  double t911;
  double t914;
  double t915;
  double t918;
  double t926;
  double t930;
  double t932;
  double t934;
  double t936;
  double t944;
  double t945;
  double t949;
  double t958;
  double t959;
  double t961;
  double t963;
  double t964;
  double t969;
  double t971;
  double t974;
  double t982;
  double t984;
  double t986;
  double t987;
  double t988;
  double t995;
  double t996;
  double t998;
  double t281;
  double t288;
  double t299;
  double t301;
  double t306;
  double t309;
  double t311;
  double t1008;
  double t1009;
  double t318;
  double t321;
  double t326;
  double t328;
  double t331;
  double t332;
  double t334;
  double t1010;
  double t1016;
  double t1017;
  double t337;
  double t338;
  double t342;
  double t343;
  double t348;
  double t349;
  double t350;
  double t1022;
  double t1024;
  double t1026;
  double t357;
  double t362;
  double t367;
  double t371;
  double t384;
  double t387;
  double t390;
  double t393;
  double t399;
  double t402;
  double t406;
  double t411;
  double t434;
  double t437;
  double t440;
  double t443;
  double t444;
  double t446;
  double t883;
  double t1100;
  double t1102;
  double t1112;
  double t1113;
  double t1114;
  double t1103;
  double t1108;
  double t1109;
  double t1123;
  double t1129;
  double t1130;
  double t1132;
  double t1133;
  double t1138;
  double t1139;
  double t1140;
  double t1152;
  double t1153;
  double t1154;
  double t1158;
  double t1159;
  double t1162;
  double t1163;
  double t1164;
  double t1174;
  double t1179;
  double t1180;
  double t1182;
  double t1183;
  double t1189;
  double t1190;
  double t1191;
  double t1207;
  double t1210;
  double t1211;
  double t1213;
  double t1214;
  double t1223;
  double t1224;
  double t1230;
  double t700;
  double t708;
  double t716;
  double t718;
  double t725;
  double t727;
  double t728;
  double t1241;
  double t1243;
  double t732;
  double t734;
  double t740;
  double t741;
  double t746;
  double t747;
  double t748;
  double t1244;
  double t1249;
  double t1250;
  double t752;
  double t753;
  double t756;
  double t758;
  double t760;
  double t761;
  double t765;
  double t1253;
  double t1254;
  double t1260;
  double t770;
  double t775;
  double t780;
  double t782;
  double t790;
  double t793;
  double t794;
  double t797;
  double t808;
  double t809;
  double t813;
  double t817;
  double t837;
  double t840;
  double t841;
  double t845;
  double t846;
  double t849;
  double t1335;
  double t1339;
  double t1340;
  double t1350;
  double t1351;
  double t1353;
  double t1341;
  double t1376;
  double t1377;
  double t1380;
  double t1381;
  double t1383;
  double t1388;
  double t1389;
  double t1392;
  double t1400;
  double t1401;
  double t1405;
  double t1408;
  double t1409;
  double t1413;
  double t1416;
  double t1417;
  double t1425;
  double t1428;
  double t1429;
  double t1432;
  double t1433;
  double t1437;
  double t1440;
  double t1441;
  double t1452;
  double t1453;
  double t1456;
  double t1457;
  double t1461;
  double t1465;
  double t1468;
  double t1469;
  double t1480;
  double t1481;
  double t1484;
  double t1485;
  double t1488;
  double t1492;
  double t1493;
  double t1496;
  double t1354;
  double t1559;
  double t1572;
  double t1574;
  double t1588;
  double t1589;
  double t1590;
  double t1575;
  double t1576;
  double t1582;
  double t1598;
  double t1599;
  double t1602;
  double t1603;
  double t1604;
  double t1606;
  double t1608;
  double t1609;
  double t1616;
  double t1617;
  double t1620;
  double t1621;
  double t1626;
  double t1628;
  double t1629;
  double t1630;
  double t1641;
  double t1642;
  double t1644;
  double t1645;
  double t1646;
  double t1652;
  double t1653;
  double t1655;
  double t1662;
  double t1665;
  double t1666;
  double t1667;
  double t1668;
  double t1671;
  double t1672;
  double t1675;
  double t1741;
  double t1742;
  double t1743;
  double t1745;
  double t1746;
  double t1748;
  double t1749;
  double t1750;
  double t1762;
  double t1767;
  double t1775;
  double t1780;
  double t1783;
  double t1785;
  double t1789;
  double t1790;
  double t1792;
  double t1800;
  double t1801;
  double t1802;
  double t1804;
  double t1805;
  double t1808;
  double t1810;
  double t1811;
  double t1820;
  double t1821;
  double t1824;
  double t1825;
  double t1826;
  double t1828;
  double t1829;
  double t1832;
  double t1841;
  double t1842;
  double t1843;
  double t1844;
  double t1845;
  double t1853;
  double t1861;
  double t1863;
  double t1944;
  double t1946;
  double t1948;
  double t1929;
  double t1932;
  double t1933;
  double t1934;
  double t1937;
  double t1938;
  double t1942;
  double t1950;
  double t1951;
  double t1953;
  double t1955;
  double t1956;
  double t1959;
  double t1963;
  double t1964;
  double t1965;
  double t1975;
  double t1980;
  double t1984;
  double t1986;
  double t1987;
  double t1988;
  double t1991;
  double t1992;
  double t1993;
  double t2001;
  double t2002;
  double t2003;
  double t2004;
  double t2006;
  double t2008;
  double t2009;
  double t2012;
  double t2019;
  double t2020;
  double t2021;
  double t2024;
  double t2025;
  double t2027;
  double t2030;
  double t2031;
  double t2096;
  double t2097;
  double t2098;
  double t2091;
  double t2092;
  double t2094;
  double t2100;
  double t2101;
  double t2102;
  double t2104;
  double t2107;
  double t2108;
  double t2111;
  double t2113;
  double t2114;
  double t2115;
  double t2121;
  double t2122;
  double t2123;
  double t2124;
  double t2125;
  double t2129;
  double t2133;
  double t2135;
  double t2139;
  double t2140;
  double t2141;
  double t2149;
  double t2151;
  double t2159;
  double t2162;
  double t2164;
  double t2171;
  double t2174;
  double t2176;
  double t2178;
  double t2179;
  double t2184;
  double t2186;
  double t2188;
  double t2256;
  double t2257;
  double t2259;
  double t2246;
  double t2251;
  double t2253;
  double t2260;
  double t2261;
  double t2262;
  double t2265;
  double t2266;
  double t2269;
  double t2271;
  double t2272;
  double t2278;
  double t2280;
  double t2282;
  double t2284;
  double t2285;
  double t2287;
  double t2288;
  double t2289;
  double t2300;
  double t2301;
  double t2302;
  double t2305;
  double t2308;
  double t2316;
  double t2318;
  double t2319;
  double t2387;
  double t2389;
  double t2390;
  double t2377;
  double t2380;
  double t2381;
  double t2383;
  double t2385;
  double t2386;
  double t2391;
  double t2393;
  double t2394;
  double t2399;
  double t2400;
  double t2406;
  double t2407;
  double t2411;
  double t2412;
  double t2415;
  double t2418;
  double t2419;
  double t2420;
  double t2490;
  double t2496;
  double t2497;
  double t2484;
  double t2485;
  double t2489;
  double t2498;
  double t2499;
  double t2500;
  double t2501;
  double t2502;
  double t2505;
  double t2515;
  double t2516;
  double t2580;
  double t2571;
  double t2595;
  double t2586;
  double t2594;
  double t2621;
  double t2622;
  double t2625;
  double t2578;
  double t2628;
  double t2569;
  double t2607;
  double t2647;
  double t2613;
  double t2634;
  double t2552;
  double t2557;
  double t2691;
  double t2692;
  double t2696;
  double t2698;
  double t2699;
  double t2701;
  double t2703;
  double t2704;
  double t2712;
  double t2722;
  double t2727;
  double t2728;
  double t2729;
  double t2731;
  double t2734;
  double t2735;
  double t2739;
  double t2746;
  double t2747;
  double t2749;
  double t2751;
  double t2754;
  double t2757;
  double t2758;
  double t2761;
  double t2771;
  double t2772;
  double t2773;
  double t2774;
  double t2777;
  double t2779;
  double t2780;
  double t2781;
  double t2793;
  double t2794;
  double t2795;
  double t2796;
  double t2797;
  double t2801;
  double t2804;
  double t2805;
  double t2888;
  double t2889;
  double t2890;
  double t2892;
  double t2895;
  double t2899;
  double t2878;
  double t2879;
  double t2880;
  double t2883;
  double t2886;
  double t2887;
  double t2891;
  double t2906;
  double t2907;
  double t2908;
  double t2902;
  double t2923;
  double t2924;
  double t2927;
  double t2928;
  double t2929;
  double t2931;
  double t2934;
  double t2935;
  double t2946;
  double t2947;
  double t2950;
  double t2951;
  double t2956;
  double t2958;
  double t2959;
  double t2961;
  double t2971;
  double t2974;
  double t2975;
  double t2976;
  double t2977;
  double t2981;
  double t2984;
  double t2986;
  double t3055;
  double t3056;
  double t3057;
  double t3046;
  double t3047;
  double t3048;
  double t3049;
  double t3050;
  double t3051;
  double t3060;
  double t3061;
  double t3064;
  double t3065;
  double t3067;
  double t3070;
  double t3071;
  double t3078;
  double t3079;
  double t3080;
  double t3081;
  double t3084;
  double t3087;
  double t3088;
  double t3089;
  double t3095;
  double t3096;
  double t3097;
  double t3098;
  double t3099;
  double t3101;
  double t3106;
  double t3107;
  double t3111;
  double t3115;
  double t3116;
  double t3117;
  double t3118;
  double t3121;
  double t3124;
  double t3125;
  double t3179;
  double t3182;
  double t3183;
  double t3175;
  double t3176;
  double t3177;
  double t3184;
  double t3185;
  double t3186;
  double t3188;
  double t3189;
  double t3194;
  double t3196;
  double t3197;
  double t3205;
  double t3208;
  double t3209;
  double t3212;
  double t3213;
  double t3215;
  double t3218;
  double t3219;
  double t3226;
  double t3227;
  double t3228;
  double t3229;
  double t3233;
  double t3235;
  double t3238;
  double t3239;
  double t3302;
  double t3303;
  double t3304;
  double t3289;
  double t3293;
  double t3294;
  double t3295;
  double t3298;
  double t3299;
  double t3305;
  double t3308;
  double t3309;
  double t3314;
  double t3315;
  double t3319;
  double t3322;
  double t3324;
  double t3325;
  double t3326;
  double t3328;
  double t3329;
  double t3332;
  double t3386;
  double t3387;
  double t3388;
  double t3379;
  double t3382;
  double t3385;
  double t3389;
  double t3395;
  double t3396;
  double t3397;
  double t3398;
  double t3400;
  double t3402;
  double t3405;
  double t3454;
  double t3470;
  double t3460;
  double t3453;
  double t3459;
  double t3500;
  double t3501;
  double t3505;
  double t3473;
  double t3508;
  double t3469;
  double t3489;
  double t3518;
  double t3486;
  double t3537;
  double t3435;
  double t3440;
  t9 = Sin(var1[3]);
  t20 = Cos(var1[3]);
  t13 = Cos(var1[5]);
  t15 = Sin(var1[4]);
  t22 = Sin(var1[5]);
  t7 = Cos(var1[4]);
  t17 = t13*t9*t15;
  t25 = t20*t22;
  t26 = t17 + t25;
  t30 = t20*t13;
  t32 = -1.*t9*t15*t22;
  t34 = t30 + t32;
  t42 = Sin(var1[14]);
  t48 = Cos(var1[14]);
  t43 = -0.135*t7*t42*t9;
  t49 = -1.*t48;
  t50 = 1. + t49;
  t51 = -0.135*t50*t34;
  t74 = Cos(var1[15]);
  t76 = -1.*t74;
  t77 = 1. + t76;
  t79 = Sin(var1[15]);
  t53 = -1.*t7*t42*t9;
  t56 = t48*t34;
  t58 = t53 + t56;
  t62 = -1.*t48*t7*t9;
  t63 = -1.*t42*t34;
  t64 = t62 + t63;
  t78 = -0.049*t77;
  t83 = -0.135*t79;
  t85 = t78 + t83;
  t86 = t85*t26;
  t88 = -0.135*t77;
  t90 = 0.049*t79;
  t92 = t88 + t90;
  t93 = t92*t58;
  t98 = -1.*t79*t26;
  t99 = t74*t58;
  t100 = t98 + t99;
  t116 = Cos(var1[16]);
  t117 = -1.*t116;
  t118 = 1. + t117;
  t122 = Sin(var1[16]);
  t105 = t74*t26;
  t108 = t79*t58;
  t109 = t105 + t108;
  t120 = -0.09*t118;
  t125 = 0.049*t122;
  t127 = t120 + t125;
  t129 = t127*t64;
  t132 = -0.049*t118;
  t135 = -0.09*t122;
  t137 = t132 + t135;
  t138 = t137*t109;
  t139 = t122*t64;
  t141 = t116*t109;
  t143 = t139 + t141;
  t155 = Cos(var1[17]);
  t156 = -1.*t155;
  t158 = 1. + t156;
  t161 = Sin(var1[17]);
  t145 = t116*t64;
  t146 = -1.*t122*t109;
  t148 = t145 + t146;
  t160 = -0.049*t158;
  t163 = -0.21*t161;
  t165 = t160 + t163;
  t166 = t165*t143;
  t167 = -0.21*t158;
  t168 = 0.049*t161;
  t172 = t167 + t168;
  t174 = t172*t148;
  t175 = -1.*t161*t143;
  t177 = t155*t148;
  t179 = t175 + t177;
  t194 = Cos(var1[18]);
  t197 = -1.*t194;
  t199 = 1. + t197;
  t202 = Sin(var1[18]);
  t183 = t155*t143;
  t185 = t161*t148;
  t187 = t183 + t185;
  t200 = -0.27068*t199;
  t204 = 0.00159*t202;
  t206 = t200 + t204;
  t208 = t206*t179;
  t209 = -0.00159*t199;
  t210 = -0.27068*t202;
  t212 = t209 + t210;
  t214 = t212*t187;
  t216 = t202*t179;
  t217 = t194*t187;
  t219 = t216 + t217;
  t234 = Cos(var1[19]);
  t236 = -1.*t234;
  t237 = 1. + t236;
  t243 = Sin(var1[19]);
  t222 = t194*t179;
  t223 = -1.*t202*t187;
  t225 = t222 + t223;
  t282 = Cos(var1[20]);
  t284 = -1.*t282;
  t286 = 1. + t284;
  t296 = Sin(var1[20]);
  t241 = 0.01841*t237;
  t244 = -0.70544*t243;
  t246 = t241 + t244;
  t248 = t246*t219;
  t249 = -0.70544*t237;
  t254 = -0.01841*t243;
  t257 = t249 + t254;
  t258 = t257*t225;
  t303 = 0.005481192614*t286;
  t262 = -1.*t243*t219;
  t264 = t234*t225;
  t266 = t262 + t264;
  t290 = 0.07769774964800001*t286;
  t323 = -0.0004284921280000001*t286;
  t272 = t234*t219;
  t274 = t243*t225;
  t275 = t272 + t274;
  t340 = 0.005498*t296;
  t346 = 0.996943*t296;
  t330 = -0.077936*t296;
  t361 = 0.0004284921280000001*t286;
  t325 = -0.996943*t296;
  t379 = -0.005481192614*t286;
  t305 = 0.077936*t296;
  t353 = -0.07769774964800001*t286;
  t297 = -0.005498*t296;
  t427 = Cos(var1[21]);
  t430 = -1.*t427;
  t432 = 1. + t430;
  t436 = Sin(var1[21]);
  t45 = -0.0233*t26;
  t463 = Cos(var1[6]);
  t472 = Sin(var1[6]);
  t467 = -1.*t463;
  t470 = 1. + t467;
  t471 = 0.135*t470*t34;
  t473 = 0.135*t7*t9*t472;
  t483 = -1.*t7*t463*t9;
  t484 = -1.*t34*t472;
  t486 = t483 + t484;
  t475 = t463*t34;
  t478 = -1.*t7*t9*t472;
  t480 = t475 + t478;
  t495 = Cos(var1[7]);
  t496 = -1.*t495;
  t497 = 1. + t496;
  t504 = Sin(var1[7]);
  t501 = 0.135*t497;
  t506 = 0.049*t504;
  t508 = t501 + t506;
  t511 = t480*t508;
  t516 = -0.049*t497;
  t517 = 0.135*t504;
  t518 = t516 + t517;
  t521 = t26*t518;
  t523 = t495*t480;
  t524 = -1.*t26*t504;
  t528 = t523 + t524;
  t532 = t495*t26;
  t533 = t480*t504;
  t534 = t532 + t533;
  t542 = Cos(var1[8]);
  t544 = -1.*t542;
  t547 = 1. + t544;
  t551 = Sin(var1[8]);
  t549 = -0.049*t547;
  t553 = -0.09*t551;
  t554 = t549 + t553;
  t555 = t534*t554;
  t556 = -0.09*t547;
  t560 = 0.049*t551;
  t563 = t556 + t560;
  t564 = t486*t563;
  t565 = t542*t534;
  t567 = t486*t551;
  t568 = t565 + t567;
  t584 = Cos(var1[9]);
  t587 = -1.*t584;
  t589 = 1. + t587;
  t591 = Sin(var1[9]);
  t570 = t542*t486;
  t574 = -1.*t534*t551;
  t576 = t570 + t574;
  t590 = -0.049*t589;
  t592 = -0.21*t591;
  t596 = t590 + t592;
  t599 = t596*t568;
  t600 = -0.21*t589;
  t601 = 0.049*t591;
  t602 = t600 + t601;
  t604 = t602*t576;
  t606 = -1.*t591*t568;
  t607 = t584*t576;
  t608 = t606 + t607;
  t626 = Cos(var1[10]);
  t628 = -1.*t626;
  t629 = 1. + t628;
  t632 = Sin(var1[10]);
  t611 = t584*t568;
  t613 = t591*t576;
  t616 = t611 + t613;
  t630 = -0.27068*t629;
  t634 = 0.00159*t632;
  t635 = t630 + t634;
  t636 = t635*t608;
  t637 = -0.00159*t629;
  t641 = -0.27068*t632;
  t643 = t637 + t641;
  t644 = t643*t616;
  t645 = t632*t608;
  t646 = t626*t616;
  t648 = t645 + t646;
  t662 = Cos(var1[11]);
  t663 = -1.*t662;
  t665 = 1. + t663;
  t668 = Sin(var1[11]);
  t651 = t626*t608;
  t654 = -1.*t632*t616;
  t656 = t651 + t654;
  t702 = Cos(var1[12]);
  t706 = -1.*t702;
  t707 = 1. + t706;
  t713 = Sin(var1[12]);
  t666 = 0.01841*t665;
  t670 = -0.70544*t668;
  t672 = t666 + t670;
  t673 = t672*t648;
  t676 = -0.70544*t665;
  t678 = -0.01841*t668;
  t679 = t676 + t678;
  t680 = t679*t656;
  t712 = -0.005481192614*t707;
  t682 = -1.*t668*t648;
  t684 = t662*t656;
  t685 = t682 + t684;
  t719 = -0.07769774964800001*t707;
  t735 = -0.0004284921280000001*t707;
  t690 = t662*t648;
  t691 = t668*t656;
  t692 = t690 + t691;
  t754 = -0.005498*t713;
  t759 = 0.996943*t713;
  t742 = 0.077936*t713;
  t773 = 0.0004284921280000001*t707;
  t738 = -0.996943*t713;
  t788 = 0.005481192614*t707;
  t714 = -0.077936*t713;
  t769 = 0.07769774964800001*t707;
  t720 = 0.005498*t713;
  t829 = Cos(var1[13]);
  t831 = -1.*t829;
  t834 = 1. + t831;
  t839 = Sin(var1[13]);
  t886 = -0.135*t20*t42*t15;
  t888 = -0.135*t50*t20*t7*t22;
  t889 = -1.*t20*t42*t15;
  t890 = t48*t20*t7*t22;
  t891 = t889 + t890;
  t895 = -1.*t48*t20*t15;
  t896 = -1.*t20*t7*t42*t22;
  t897 = t895 + t896;
  t903 = -1.*t20*t7*t13*t85;
  t905 = t92*t891;
  t908 = t20*t7*t13*t79;
  t909 = t74*t891;
  t911 = t908 + t909;
  t914 = -1.*t74*t20*t7*t13;
  t915 = t79*t891;
  t918 = t914 + t915;
  t926 = t127*t897;
  t930 = t137*t918;
  t932 = t122*t897;
  t934 = t116*t918;
  t936 = t932 + t934;
  t944 = t116*t897;
  t945 = -1.*t122*t918;
  t949 = t944 + t945;
  t958 = t165*t936;
  t959 = t172*t949;
  t961 = -1.*t161*t936;
  t963 = t155*t949;
  t964 = t961 + t963;
  t969 = t155*t936;
  t971 = t161*t949;
  t974 = t969 + t971;
  t982 = t206*t964;
  t984 = t212*t974;
  t986 = t202*t964;
  t987 = t194*t974;
  t988 = t986 + t987;
  t995 = t194*t964;
  t996 = -1.*t202*t974;
  t998 = t995 + t996;
  t281 = 2.1934241414728571e-7*var1[20];
  t288 = -0.000033783761634830594*t286;
  t299 = t290 + t297;
  t301 = -0.021877537552*t299;
  t306 = t303 + t305;
  t309 = -0.6934341012630001*t306;
  t311 = t281 + t288 + t301 + t309;
  t1008 = t246*t988;
  t1009 = t257*t998;
  t318 = -1.2096424700126054e-9*var1[20];
  t321 = -0.6934128581485427*t286;
  t326 = t323 + t325;
  t328 = -0.021877537552*t326;
  t331 = t303 + t330;
  t332 = -0.005534467322*t331;
  t334 = t318 + t321 + t328 + t332;
  t1010 = -1.*t243*t988;
  t1016 = t234*t998;
  t1017 = t1010 + t1016;
  t337 = -1.7147089040178687e-8*var1[20];
  t338 = -0.021744644052735636*t286;
  t342 = t290 + t340;
  t343 = -0.005534467322*t342;
  t348 = t323 + t346;
  t349 = -0.6934341012630001*t348;
  t350 = t337 + t338 + t343 + t349;
  t1022 = t234*t988;
  t1024 = t243*t998;
  t1026 = t1022 + t1024;
  t357 = t353 + t340;
  t362 = t361 + t346;
  t367 = -0.993925573253*t286;
  t371 = 1. + t367;
  t384 = t379 + t330;
  t387 = -0.999969365345*t286;
  t390 = 1. + t387;
  t393 = t361 + t325;
  t399 = -0.006104248100000001*t286;
  t402 = 1. + t399;
  t406 = t379 + t305;
  t411 = t353 + t297;
  t434 = -1.11344*t432;
  t437 = 0.02159*t436;
  t440 = t434 + t437;
  t443 = -0.02159*t432;
  t444 = -1.11344*t436;
  t446 = t443 + t444;
  t883 = 0.0233*t20*t7*t13;
  t1100 = 0.135*t20*t7*t470*t22;
  t1102 = 0.135*t20*t15*t472;
  t1112 = -1.*t20*t463*t15;
  t1113 = -1.*t20*t7*t22*t472;
  t1114 = t1112 + t1113;
  t1103 = t20*t7*t463*t22;
  t1108 = -1.*t20*t15*t472;
  t1109 = t1103 + t1108;
  t1123 = t1109*t508;
  t1129 = -1.*t20*t7*t13*t518;
  t1130 = t495*t1109;
  t1132 = t20*t7*t13*t504;
  t1133 = t1130 + t1132;
  t1138 = -1.*t20*t7*t13*t495;
  t1139 = t1109*t504;
  t1140 = t1138 + t1139;
  t1152 = t1140*t554;
  t1153 = t1114*t563;
  t1154 = t542*t1140;
  t1158 = t1114*t551;
  t1159 = t1154 + t1158;
  t1162 = t542*t1114;
  t1163 = -1.*t1140*t551;
  t1164 = t1162 + t1163;
  t1174 = t596*t1159;
  t1179 = t602*t1164;
  t1180 = -1.*t591*t1159;
  t1182 = t584*t1164;
  t1183 = t1180 + t1182;
  t1189 = t584*t1159;
  t1190 = t591*t1164;
  t1191 = t1189 + t1190;
  t1207 = t635*t1183;
  t1210 = t643*t1191;
  t1211 = t632*t1183;
  t1213 = t626*t1191;
  t1214 = t1211 + t1213;
  t1223 = t626*t1183;
  t1224 = -1.*t632*t1191;
  t1230 = t1223 + t1224;
  t700 = -2.1934241414728571e-7*var1[12];
  t708 = 0.000033783761634830594*t707;
  t716 = t712 + t714;
  t718 = -0.6934341012630001*t716;
  t725 = t719 + t720;
  t727 = -0.021877537552*t725;
  t728 = t700 + t708 + t718 + t727;
  t1241 = t672*t1214;
  t1243 = t679*t1230;
  t732 = -1.2096424700126054e-9*var1[12];
  t734 = -0.6934128581485427*t707;
  t740 = t735 + t738;
  t741 = -0.021877537552*t740;
  t746 = t712 + t742;
  t747 = 0.005534467322*t746;
  t748 = t732 + t734 + t741 + t747;
  t1244 = -1.*t668*t1214;
  t1249 = t662*t1230;
  t1250 = t1244 + t1249;
  t752 = -1.7147089040178687e-8*var1[12];
  t753 = -0.021744644052735636*t707;
  t756 = t719 + t754;
  t758 = 0.005534467322*t756;
  t760 = t735 + t759;
  t761 = -0.6934341012630001*t760;
  t765 = t752 + t753 + t758 + t761;
  t1253 = t662*t1214;
  t1254 = t668*t1230;
  t1260 = t1253 + t1254;
  t770 = t769 + t754;
  t775 = t773 + t759;
  t780 = -0.993925573253*t707;
  t782 = 1. + t780;
  t790 = t788 + t742;
  t793 = -0.999969365345*t707;
  t794 = 1. + t793;
  t797 = t773 + t738;
  t808 = -0.006104248100000001*t707;
  t809 = 1. + t808;
  t813 = t788 + t714;
  t817 = t769 + t720;
  t837 = -1.11344*t834;
  t840 = 0.02159*t839;
  t841 = t837 + t840;
  t845 = -0.02159*t834;
  t846 = -1.11344*t839;
  t849 = t845 + t846;
  t1335 = t20*t13*t15;
  t1339 = -1.*t9*t22;
  t1340 = t1335 + t1339;
  t1350 = t13*t9;
  t1351 = t20*t15*t22;
  t1353 = t1350 + t1351;
  t1341 = -0.135*t50*t1340;
  t1376 = t48*t92*t1340;
  t1377 = t85*t1353;
  t1380 = t48*t79*t1340;
  t1381 = t74*t1353;
  t1383 = t1380 + t1381;
  t1388 = t48*t74*t1340;
  t1389 = -1.*t79*t1353;
  t1392 = t1388 + t1389;
  t1400 = -1.*t42*t127*t1340;
  t1401 = t137*t1383;
  t1405 = -1.*t42*t122*t1340;
  t1408 = t116*t1383;
  t1409 = t1405 + t1408;
  t1413 = -1.*t116*t42*t1340;
  t1416 = -1.*t122*t1383;
  t1417 = t1413 + t1416;
  t1425 = t165*t1409;
  t1428 = t172*t1417;
  t1429 = -1.*t161*t1409;
  t1432 = t155*t1417;
  t1433 = t1429 + t1432;
  t1437 = t155*t1409;
  t1440 = t161*t1417;
  t1441 = t1437 + t1440;
  t1452 = t206*t1433;
  t1453 = t212*t1441;
  t1456 = t202*t1433;
  t1457 = t194*t1441;
  t1461 = t1456 + t1457;
  t1465 = t194*t1433;
  t1468 = -1.*t202*t1441;
  t1469 = t1465 + t1468;
  t1480 = t246*t1461;
  t1481 = t257*t1469;
  t1484 = -1.*t243*t1461;
  t1485 = t234*t1469;
  t1488 = t1484 + t1485;
  t1492 = t234*t1461;
  t1493 = t243*t1469;
  t1496 = t1492 + t1493;
  t1354 = -0.0233*t1353;
  t1559 = 0.135*t470*t1340;
  t1572 = t463*t1340*t508;
  t1574 = t1353*t518;
  t1588 = t463*t495*t1340;
  t1589 = -1.*t1353*t504;
  t1590 = t1588 + t1589;
  t1575 = t495*t1353;
  t1576 = t463*t1340*t504;
  t1582 = t1575 + t1576;
  t1598 = t1582*t554;
  t1599 = -1.*t1340*t472*t563;
  t1602 = t542*t1582;
  t1603 = -1.*t1340*t472*t551;
  t1604 = t1602 + t1603;
  t1606 = -1.*t542*t1340*t472;
  t1608 = -1.*t1582*t551;
  t1609 = t1606 + t1608;
  t1616 = t596*t1604;
  t1617 = t602*t1609;
  t1620 = -1.*t591*t1604;
  t1621 = t584*t1609;
  t1626 = t1620 + t1621;
  t1628 = t584*t1604;
  t1629 = t591*t1609;
  t1630 = t1628 + t1629;
  t1641 = t635*t1626;
  t1642 = t643*t1630;
  t1644 = t632*t1626;
  t1645 = t626*t1630;
  t1646 = t1644 + t1645;
  t1652 = t626*t1626;
  t1653 = -1.*t632*t1630;
  t1655 = t1652 + t1653;
  t1662 = t672*t1646;
  t1665 = t679*t1655;
  t1666 = -1.*t668*t1646;
  t1667 = t662*t1655;
  t1668 = t1666 + t1667;
  t1671 = t662*t1646;
  t1672 = t668*t1655;
  t1675 = t1671 + t1672;
  t1741 = -0.135*t20*t7*t463;
  t1742 = 0.135*t1353*t472;
  t1743 = -1.*t463*t1353;
  t1745 = -1.*t20*t7*t472;
  t1746 = t1743 + t1745;
  t1748 = t20*t7*t463;
  t1749 = -1.*t1353*t472;
  t1750 = t1748 + t1749;
  t1762 = t1750*t508;
  t1767 = t1750*t504*t554;
  t1775 = t1746*t563;
  t1780 = t542*t1750*t504;
  t1783 = t1746*t551;
  t1785 = t1780 + t1783;
  t1789 = t542*t1746;
  t1790 = -1.*t1750*t504*t551;
  t1792 = t1789 + t1790;
  t1800 = t596*t1785;
  t1801 = t602*t1792;
  t1802 = -1.*t591*t1785;
  t1804 = t584*t1792;
  t1805 = t1802 + t1804;
  t1808 = t584*t1785;
  t1810 = t591*t1792;
  t1811 = t1808 + t1810;
  t1820 = t635*t1805;
  t1821 = t643*t1811;
  t1824 = t632*t1805;
  t1825 = t626*t1811;
  t1826 = t1824 + t1825;
  t1828 = t626*t1805;
  t1829 = -1.*t632*t1811;
  t1832 = t1828 + t1829;
  t1841 = t672*t1826;
  t1842 = t679*t1832;
  t1843 = -1.*t668*t1826;
  t1844 = t662*t1832;
  t1845 = t1843 + t1844;
  t1853 = t662*t1826;
  t1861 = t668*t1832;
  t1863 = t1853 + t1861;
  t1944 = t463*t1353;
  t1946 = t20*t7*t472;
  t1948 = t1944 + t1946;
  t1929 = -1.*t20*t13*t15;
  t1932 = t9*t22;
  t1933 = t1929 + t1932;
  t1934 = 0.135*t495;
  t1937 = -0.049*t504;
  t1938 = t1934 + t1937;
  t1942 = t1933*t1938;
  t1950 = 0.049*t495;
  t1951 = t1950 + t517;
  t1953 = t1948*t1951;
  t1955 = t495*t1948;
  t1956 = -1.*t1933*t504;
  t1959 = t1955 + t1956;
  t1963 = -1.*t495*t1933;
  t1964 = -1.*t1948*t504;
  t1965 = t1963 + t1964;
  t1975 = t1959*t554;
  t1980 = t542*t596*t1959;
  t1984 = -1.*t602*t1959*t551;
  t1986 = -1.*t542*t591*t1959;
  t1987 = -1.*t584*t1959*t551;
  t1988 = t1986 + t1987;
  t1991 = t584*t542*t1959;
  t1992 = -1.*t591*t1959*t551;
  t1993 = t1991 + t1992;
  t2001 = t635*t1988;
  t2002 = t643*t1993;
  t2003 = t632*t1988;
  t2004 = t626*t1993;
  t2006 = t2003 + t2004;
  t2008 = t626*t1988;
  t2009 = -1.*t632*t1993;
  t2012 = t2008 + t2009;
  t2019 = t672*t2006;
  t2020 = t679*t2012;
  t2021 = -1.*t668*t2006;
  t2024 = t662*t2012;
  t2025 = t2021 + t2024;
  t2027 = t662*t2006;
  t2030 = t668*t2012;
  t2031 = t2027 + t2030;
  t2096 = t495*t1933;
  t2097 = t1948*t504;
  t2098 = t2096 + t2097;
  t2091 = 0.049*t542;
  t2092 = t2091 + t553;
  t2094 = t1750*t2092;
  t2100 = -0.09*t542;
  t2101 = -0.049*t551;
  t2102 = t2100 + t2101;
  t2104 = t2098*t2102;
  t2107 = -1.*t542*t2098;
  t2108 = -1.*t1750*t551;
  t2111 = t2107 + t2108;
  t2113 = t542*t1750;
  t2114 = -1.*t2098*t551;
  t2115 = t2113 + t2114;
  t2121 = t602*t2111;
  t2122 = t596*t2115;
  t2123 = t591*t2111;
  t2124 = t584*t2115;
  t2125 = t2123 + t2124;
  t2129 = t584*t2111;
  t2133 = -1.*t591*t2115;
  t2135 = t2129 + t2133;
  t2139 = t643*t2125;
  t2140 = t635*t2135;
  t2141 = -1.*t632*t2125;
  t2149 = t626*t2135;
  t2151 = t2141 + t2149;
  t2159 = t626*t2125;
  t2162 = t632*t2135;
  t2164 = t2159 + t2162;
  t2171 = t679*t2151;
  t2174 = t672*t2164;
  t2176 = t668*t2151;
  t2178 = t662*t2164;
  t2179 = t2176 + t2178;
  t2184 = t662*t2151;
  t2186 = -1.*t668*t2164;
  t2188 = t2184 + t2186;
  t2256 = t542*t2098;
  t2257 = t1750*t551;
  t2259 = t2256 + t2257;
  t2246 = -0.21*t584;
  t2251 = -0.049*t591;
  t2253 = t2246 + t2251;
  t2260 = t2253*t2259;
  t2261 = 0.049*t584;
  t2262 = t2261 + t592;
  t2265 = t2262*t2115;
  t2266 = -1.*t591*t2259;
  t2269 = t2266 + t2124;
  t2271 = -1.*t584*t2259;
  t2272 = t2271 + t2133;
  t2278 = t643*t2269;
  t2280 = t635*t2272;
  t2282 = -1.*t632*t2269;
  t2284 = t626*t2272;
  t2285 = t2282 + t2284;
  t2287 = t626*t2269;
  t2288 = t632*t2272;
  t2289 = t2287 + t2288;
  t2300 = t679*t2285;
  t2301 = t672*t2289;
  t2302 = t668*t2285;
  t2305 = t662*t2289;
  t2308 = t2302 + t2305;
  t2316 = t662*t2285;
  t2318 = -1.*t668*t2289;
  t2319 = t2316 + t2318;
  t2387 = t584*t2259;
  t2389 = t591*t2115;
  t2390 = t2387 + t2389;
  t2377 = 0.00159*t626;
  t2380 = t2377 + t641;
  t2381 = t2380*t2269;
  t2383 = -0.27068*t626;
  t2385 = -0.00159*t632;
  t2386 = t2383 + t2385;
  t2391 = t2386*t2390;
  t2393 = -1.*t626*t2390;
  t2394 = t2282 + t2393;
  t2399 = -1.*t632*t2390;
  t2400 = t2287 + t2399;
  t2406 = t679*t2394;
  t2407 = t672*t2400;
  t2411 = t668*t2394;
  t2412 = t662*t2400;
  t2415 = t2411 + t2412;
  t2418 = t662*t2394;
  t2419 = -1.*t668*t2400;
  t2420 = t2418 + t2419;
  t2490 = t632*t2269;
  t2496 = t626*t2390;
  t2497 = t2490 + t2496;
  t2484 = -0.70544*t662;
  t2485 = 0.01841*t668;
  t2489 = t2484 + t2485;
  t2498 = t2489*t2497;
  t2499 = -0.01841*t662;
  t2500 = t2499 + t670;
  t2501 = t2500*t2400;
  t2502 = -1.*t668*t2497;
  t2505 = t2502 + t2412;
  t2515 = -1.*t662*t2497;
  t2516 = t2515 + t2419;
  t2580 = -0.005481192614*t713;
  t2571 = -0.07769774964800001*t713;
  t2595 = -0.0004284921280000001*t713;
  t2586 = 0.077936*t702;
  t2594 = -0.996943*t702;
  t2621 = t662*t2497;
  t2622 = t668*t2400;
  t2625 = t2621 + t2622;
  t2578 = -0.077936*t702;
  t2628 = 0.005481192614*t713;
  t2569 = 0.005498*t702;
  t2607 = -0.005498*t702;
  t2647 = 0.07769774964800001*t713;
  t2613 = 0.996943*t702;
  t2634 = 0.0004284921280000001*t713;
  t2552 = -1.*t839*t2505;
  t2557 = t829*t2505;
  t2691 = 0.135*t48*t20*t7;
  t2692 = -0.135*t42*t1353;
  t2696 = -1.*t20*t7*t42;
  t2698 = -1.*t48*t1353;
  t2699 = t2696 + t2698;
  t2701 = t48*t20*t7;
  t2703 = -1.*t42*t1353;
  t2704 = t2701 + t2703;
  t2712 = t92*t2704;
  t2722 = t127*t2699;
  t2727 = t79*t137*t2704;
  t2728 = t122*t2699;
  t2729 = t116*t79*t2704;
  t2731 = t2728 + t2729;
  t2734 = t116*t2699;
  t2735 = -1.*t79*t122*t2704;
  t2739 = t2734 + t2735;
  t2746 = t165*t2731;
  t2747 = t172*t2739;
  t2749 = -1.*t161*t2731;
  t2751 = t155*t2739;
  t2754 = t2749 + t2751;
  t2757 = t155*t2731;
  t2758 = t161*t2739;
  t2761 = t2757 + t2758;
  t2771 = t206*t2754;
  t2772 = t212*t2761;
  t2773 = t202*t2754;
  t2774 = t194*t2761;
  t2777 = t2773 + t2774;
  t2779 = t194*t2754;
  t2780 = -1.*t202*t2761;
  t2781 = t2779 + t2780;
  t2793 = t246*t2777;
  t2794 = t257*t2781;
  t2795 = -1.*t243*t2777;
  t2796 = t234*t2781;
  t2797 = t2795 + t2796;
  t2801 = t234*t2777;
  t2804 = t243*t2781;
  t2805 = t2801 + t2804;
  t2888 = t20*t7*t42;
  t2889 = t48*t1353;
  t2890 = t2888 + t2889;
  t2892 = -1.*t79*t1933;
  t2895 = t74*t2890;
  t2899 = t2892 + t2895;
  t2878 = -0.135*t74;
  t2879 = -0.049*t79;
  t2880 = t2878 + t2879;
  t2883 = t2880*t1933;
  t2886 = 0.049*t74;
  t2887 = t2886 + t83;
  t2891 = t2887*t2890;
  t2906 = -1.*t74*t1933;
  t2907 = -1.*t79*t2890;
  t2908 = t2906 + t2907;
  t2902 = t137*t2899;
  t2923 = t116*t165*t2899;
  t2924 = -1.*t122*t172*t2899;
  t2927 = -1.*t155*t122*t2899;
  t2928 = -1.*t116*t161*t2899;
  t2929 = t2927 + t2928;
  t2931 = t116*t155*t2899;
  t2934 = -1.*t122*t161*t2899;
  t2935 = t2931 + t2934;
  t2946 = t206*t2929;
  t2947 = t212*t2935;
  t2950 = t202*t2929;
  t2951 = t194*t2935;
  t2956 = t2950 + t2951;
  t2958 = t194*t2929;
  t2959 = -1.*t202*t2935;
  t2961 = t2958 + t2959;
  t2971 = t246*t2956;
  t2974 = t257*t2961;
  t2975 = -1.*t243*t2956;
  t2976 = t234*t2961;
  t2977 = t2975 + t2976;
  t2981 = t234*t2956;
  t2984 = t243*t2961;
  t2986 = t2981 + t2984;
  t3055 = t74*t1933;
  t3056 = t79*t2890;
  t3057 = t3055 + t3056;
  t3046 = 0.049*t116;
  t3047 = t3046 + t135;
  t3048 = t3047*t2704;
  t3049 = -0.09*t116;
  t3050 = -0.049*t122;
  t3051 = t3049 + t3050;
  t3060 = t3051*t3057;
  t3061 = -1.*t122*t2704;
  t3064 = -1.*t116*t3057;
  t3065 = t3061 + t3064;
  t3067 = t116*t2704;
  t3070 = -1.*t122*t3057;
  t3071 = t3067 + t3070;
  t3078 = t172*t3065;
  t3079 = t165*t3071;
  t3080 = t161*t3065;
  t3081 = t155*t3071;
  t3084 = t3080 + t3081;
  t3087 = t155*t3065;
  t3088 = -1.*t161*t3071;
  t3089 = t3087 + t3088;
  t3095 = t212*t3084;
  t3096 = t206*t3089;
  t3097 = -1.*t202*t3084;
  t3098 = t194*t3089;
  t3099 = t3097 + t3098;
  t3101 = t194*t3084;
  t3106 = t202*t3089;
  t3107 = t3101 + t3106;
  t3111 = t257*t3099;
  t3115 = t246*t3107;
  t3116 = t243*t3099;
  t3117 = t234*t3107;
  t3118 = t3116 + t3117;
  t3121 = t234*t3099;
  t3124 = -1.*t243*t3107;
  t3125 = t3121 + t3124;
  t3179 = t122*t2704;
  t3182 = t116*t3057;
  t3183 = t3179 + t3182;
  t3175 = -0.21*t155;
  t3176 = -0.049*t161;
  t3177 = t3175 + t3176;
  t3184 = t3177*t3183;
  t3185 = 0.049*t155;
  t3186 = t3185 + t163;
  t3188 = t3186*t3071;
  t3189 = -1.*t161*t3183;
  t3194 = t3189 + t3081;
  t3196 = -1.*t155*t3183;
  t3197 = t3196 + t3088;
  t3205 = t212*t3194;
  t3208 = t206*t3197;
  t3209 = -1.*t202*t3194;
  t3212 = t194*t3197;
  t3213 = t3209 + t3212;
  t3215 = t194*t3194;
  t3218 = t202*t3197;
  t3219 = t3215 + t3218;
  t3226 = t257*t3213;
  t3227 = t246*t3219;
  t3228 = t243*t3213;
  t3229 = t234*t3219;
  t3233 = t3228 + t3229;
  t3235 = t234*t3213;
  t3238 = -1.*t243*t3219;
  t3239 = t3235 + t3238;
  t3302 = t155*t3183;
  t3303 = t161*t3071;
  t3304 = t3302 + t3303;
  t3289 = 0.00159*t194;
  t3293 = t3289 + t210;
  t3294 = t3293*t3194;
  t3295 = -0.27068*t194;
  t3298 = -0.00159*t202;
  t3299 = t3295 + t3298;
  t3305 = t3299*t3304;
  t3308 = -1.*t194*t3304;
  t3309 = t3209 + t3308;
  t3314 = -1.*t202*t3304;
  t3315 = t3215 + t3314;
  t3319 = t257*t3309;
  t3322 = t246*t3315;
  t3324 = t243*t3309;
  t3325 = t234*t3315;
  t3326 = t3324 + t3325;
  t3328 = t234*t3309;
  t3329 = -1.*t243*t3315;
  t3332 = t3328 + t3329;
  t3386 = t202*t3194;
  t3387 = t194*t3304;
  t3388 = t3386 + t3387;
  t3379 = -0.70544*t234;
  t3382 = 0.01841*t243;
  t3385 = t3379 + t3382;
  t3389 = t3385*t3388;
  t3395 = -0.01841*t234;
  t3396 = t3395 + t244;
  t3397 = t3396*t3315;
  t3398 = -1.*t243*t3388;
  t3400 = t3398 + t3325;
  t3402 = -1.*t234*t3388;
  t3405 = t3402 + t3329;
  t3454 = 0.005481192614*t296;
  t3470 = -0.0004284921280000001*t296;
  t3460 = 0.07769774964800001*t296;
  t3453 = 0.077936*t282;
  t3459 = -0.005498*t282;
  t3500 = t234*t3388;
  t3501 = t243*t3315;
  t3505 = t3500 + t3501;
  t3473 = -0.077936*t282;
  t3508 = -0.005481192614*t296;
  t3469 = -0.996943*t282;
  t3489 = 0.005498*t282;
  t3518 = -0.07769774964800001*t296;
  t3486 = 0.996943*t282;
  t3537 = 0.0004284921280000001*t296;
  t3435 = -1.*t436*t3400;
  t3440 = t427*t3400;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=340.17893712;
  p_output1[3]=19.28261448*(t45 + t471 + t473 + 0.1351*t480 + 0.01793*t486) + 12.915924480000001*(t471 + t473 - 0.0343*t486 + t511 + t521 + 0.135*t528 - 0.049*t534) + 56.8222668*(t471 + t473 + t511 + t521 + 0.17081*t528 + t555 + t564 - 0.04895*t568 - 0.14946*t576) + 10.105084800000002*(t471 + t473 + t511 + t521 + 0.132168*t528 + t555 + t564 + t599 + t604 - 0.255862*t608 - 0.007761*t616) + 19.28261448*(t43 + t45 + t51 - 0.1351*t58 + 0.01793*t64) + 7.48503*(t471 + t473 + t511 + t521 + 0.130288*t528 + t555 + t564 + t599 + t604 + t636 + t644 - 0.000421*t648 - 0.45406*t656) + 10.1043*(t471 + t473 + t511 + t521 + 0.127241*t528 + t555 + t564 + t599 + t604 + t636 + t644 + t673 + t680 - 0.826587*t685 - 0.004179*t692) + 1.2360600000000002*(t471 + t473 + t511 + t521 + t555 + t564 + t599 + t604 + t636 + t644 + t673 + t680 + t528*t728 + t685*t748 + t692*t765 + 0.01889*(t528*t770 + t685*t775 + t692*t782) - 0.617968*(t528*t790 + t685*t794 + t692*t797) + 0.126739*(t528*t809 + t685*t813 + t692*t817)) + 1.469538*(t471 + t473 + t511 + t521 + 0.13064*t528 + t555 + t564 + t599 + t604 + t636 + t644 + t673 + t680 + 0.00589*(t692*t829 + t685*t839) - 1.11818*(t685*t829 - 1.*t692*t839) + t685*t841 + t692*t849) + 101.3373*(0.05066*t26 + 0.000346*t34 - 0.02841*t7*t9) + 56.8222668*(-0.17081*t100 + t129 + t138 - 0.04895*t143 - 0.14946*t148 + t43 + t51 + t86 + t93) + 10.105084800000002*(-0.132168*t100 + t129 + t138 + t166 + t174 - 0.255862*t179 - 0.007761*t187 + t43 + t51 + t86 + t93) + 7.48503*(-0.130288*t100 + t129 + t138 + t166 + t174 + t208 + t214 - 0.000421*t219 - 0.45406*t225 + t43 + t51 + t86 + t93) + 10.1043*(-0.127241*t100 + t129 + t138 + t166 + t174 + t208 + t214 + t248 + t258 - 0.826587*t266 - 0.004179*t275 + t43 + t51 + t86 + t93) + 1.2360600000000002*(t129 + t138 + t166 + t174 + t208 + t214 + t248 + t258 + t100*t311 + t266*t334 + t275*t350 + 0.01889*(t100*t357 + t266*t362 + t275*t371) - 0.617968*(t100*t384 + t266*t390 + t275*t393) - 0.126739*(t100*t402 + t266*t406 + t275*t411) + t43 + t51 + t86 + t93) + 1.469538*(-0.13064*t100 + t129 + t138 + t166 + t174 + t208 + t214 + t248 + t258 + t43 + 0.00589*(t275*t427 + t266*t436) - 1.11818*(t266*t427 - 1.*t275*t436) + t266*t440 + t275*t446 + t51 + t86 + t93) + 12.915924480000001*(-0.135*t100 - 0.049*t109 + t43 + t51 - 0.0343*t64 + t86 + t93);
  p_output1[4]=12.915924480000001*(t1100 + t1102 - 0.0343*t1114 + t1123 + t1129 + 0.135*t1133 - 0.049*t1140) + 56.8222668*(t1100 + t1102 + t1123 + t1129 + 0.17081*t1133 + t1152 + t1153 - 0.04895*t1159 - 0.14946*t1164) + 10.105084800000002*(t1100 + t1102 + t1123 + t1129 + 0.132168*t1133 + t1152 + t1153 + t1174 + t1179 - 0.255862*t1183 - 0.007761*t1191) + 7.48503*(t1100 + t1102 + t1123 + t1129 + 0.130288*t1133 + t1152 + t1153 + t1174 + t1179 + t1207 + t1210 - 0.000421*t1214 - 0.45406*t1230) + 10.1043*(t1100 + t1102 + t1123 + t1129 + 0.127241*t1133 + t1152 + t1153 + t1174 + t1179 + t1207 + t1210 + t1241 + t1243 - 0.826587*t1250 - 0.004179*t1260) + 101.3373*(-0.02841*t15*t20 - 0.05066*t13*t20*t7 + 0.000346*t20*t22*t7) + 1.2360600000000002*(t1100 + t1102 + t1123 + t1129 + t1152 + t1153 + t1174 + t1179 + t1207 + t1210 + t1241 + t1243 + t1133*t728 + t1250*t748 + t1260*t765 + 0.01889*(t1133*t770 + t1250*t775 + t1260*t782) - 0.617968*(t1133*t790 + t1250*t794 + t1260*t797) + 0.126739*(t1133*t809 + t1250*t813 + t1260*t817)) + 1.469538*(t1100 + t1102 + t1123 + t1129 + 0.13064*t1133 + t1152 + t1153 + t1174 + t1179 + t1207 + t1210 + t1241 + t1243 + 0.00589*(t1260*t829 + t1250*t839) - 1.11818*(t1250*t829 - 1.*t1260*t839) + t1250*t841 + t1260*t849) + 19.28261448*(t1100 + t1102 + 0.1351*t1109 + 0.01793*t1114 + t883) + 19.28261448*(t883 + t886 + t888 - 0.1351*t891 + 0.01793*t897) + 12.915924480000001*(t886 + t888 - 0.0343*t897 + t903 + t905 - 0.135*t911 - 0.049*t918) + 56.8222668*(t886 + t888 + t903 + t905 - 0.17081*t911 + t926 + t930 - 0.04895*t936 - 0.14946*t949) + 10.105084800000002*(t886 + t888 + t903 + t905 - 0.132168*t911 + t926 + t930 + t958 + t959 - 0.255862*t964 - 0.007761*t974) + 1.469538*(t1008 + t1009 + 0.00589*(t1026*t427 + t1017*t436) - 1.11818*(t1017*t427 - 1.*t1026*t436) + t1017*t440 + t1026*t446 + t886 + t888 + t903 + t905 - 0.13064*t911 + t926 + t930 + t958 + t959 + t982 + t984) + 10.1043*(t1008 + t1009 - 0.826587*t1017 - 0.004179*t1026 + t886 + t888 + t903 + t905 - 0.127241*t911 + t926 + t930 + t958 + t959 + t982 + t984) + 1.2360600000000002*(t1008 + t1009 + t1017*t334 + t1026*t350 + t886 + t888 + t903 + t905 + t311*t911 + 0.01889*(t1017*t362 + t1026*t371 + t357*t911) - 0.617968*(t1017*t390 + t1026*t393 + t384*t911) - 0.126739*(t1017*t406 + t1026*t411 + t402*t911) + t926 + t930 + t958 + t959 + t982 + t984) + 7.48503*(t886 + t888 + t903 + t905 - 0.130288*t911 + t926 + t930 + t958 + t959 + t982 + t984 - 0.000421*t988 - 0.45406*t998);
  p_output1[5]=101.3373*(0.000346*t1340 + 0.05066*t1353) + 56.8222668*(t1341 + t1376 + t1377 - 0.17081*t1392 + t1400 + t1401 - 0.04895*t1409 - 0.14946*t1417) + 10.105084800000002*(t1341 + t1376 + t1377 - 0.132168*t1392 + t1400 + t1401 + t1425 + t1428 - 0.255862*t1433 - 0.007761*t1441) + 7.48503*(t1341 + t1376 + t1377 - 0.130288*t1392 + t1400 + t1401 + t1425 + t1428 + t1452 + t1453 - 0.000421*t1461 - 0.45406*t1469) + 10.1043*(t1341 + t1376 + t1377 - 0.127241*t1392 + t1400 + t1401 + t1425 + t1428 + t1452 + t1453 + t1480 + t1481 - 0.826587*t1488 - 0.004179*t1496) + 56.8222668*(t1559 + t1572 + t1574 + 0.17081*t1590 + t1598 + t1599 - 0.04895*t1604 - 0.14946*t1609) + 10.105084800000002*(t1559 + t1572 + t1574 + 0.132168*t1590 + t1598 + t1599 + t1616 + t1617 - 0.255862*t1626 - 0.007761*t1630) + 7.48503*(t1559 + t1572 + t1574 + 0.130288*t1590 + t1598 + t1599 + t1616 + t1617 + t1641 + t1642 - 0.000421*t1646 - 0.45406*t1655) + 10.1043*(t1559 + t1572 + t1574 + 0.127241*t1590 + t1598 + t1599 + t1616 + t1617 + t1641 + t1642 + t1662 + t1665 - 0.826587*t1668 - 0.004179*t1675) + 1.2360600000000002*(t1341 + t1376 + t1377 + t1400 + t1401 + t1425 + t1428 + t1452 + t1453 + t1480 + t1481 + t1392*t311 + t1488*t334 + t1496*t350 + 0.01889*(t1392*t357 + t1488*t362 + t1496*t371) - 0.617968*(t1392*t384 + t1488*t390 + t1496*t393) - 0.126739*(t1392*t402 + t1488*t406 + t1496*t411)) + 12.915924480000001*(t1341 + t1376 + t1377 - 0.049*t1383 - 0.135*t1392 + 0.0343*t1340*t42) + 1.469538*(t1341 + t1376 + t1377 - 0.13064*t1392 + t1400 + t1401 + t1425 + t1428 + t1452 + t1453 + t1480 + t1481 + 0.00589*(t1496*t427 + t1488*t436) - 1.11818*(t1488*t427 - 1.*t1496*t436) + t1488*t440 + t1496*t446) + 19.28261448*(t1354 + t1559 + 0.1351*t1340*t463 - 0.01793*t1340*t472) + 12.915924480000001*(t1559 + t1572 + t1574 - 0.049*t1582 + 0.135*t1590 + 0.0343*t1340*t472) + 19.28261448*(t1341 + t1354 - 0.01793*t1340*t42 - 0.1351*t1340*t48) + 1.2360600000000002*(t1559 + t1572 + t1574 + t1598 + t1599 + t1616 + t1617 + t1641 + t1642 + t1662 + t1665 + t1590*t728 + t1668*t748 + t1675*t765 + 0.01889*(t1590*t770 + t1668*t775 + t1675*t782) - 0.617968*(t1590*t790 + t1668*t794 + t1675*t797) + 0.126739*(t1590*t809 + t1668*t813 + t1675*t817)) + 1.469538*(t1559 + t1572 + t1574 + 0.13064*t1590 + t1598 + t1599 + t1616 + t1617 + t1641 + t1642 + t1662 + t1665 + 0.00589*(t1675*t829 + t1668*t839) - 1.11818*(t1668*t829 - 1.*t1675*t839) + t1668*t841 + t1675*t849);
  p_output1[6]=19.28261448*(t1741 + t1742 + 0.01793*t1746 + 0.1351*t1750) + 10.1043*(t1741 + t1742 + t1762 + t1767 + t1775 + t1800 + t1801 + t1820 + t1821 + t1841 + t1842 - 0.826587*t1845 - 0.004179*t1863 + 0.127241*t1750*t495) + 7.48503*(t1741 + t1742 + t1762 + t1767 + t1775 + t1800 + t1801 + t1820 + t1821 - 0.000421*t1826 - 0.45406*t1832 + 0.130288*t1750*t495) + 10.105084800000002*(t1741 + t1742 + t1762 + t1767 + t1775 + t1800 + t1801 - 0.255862*t1805 - 0.007761*t1811 + 0.132168*t1750*t495) + 56.8222668*(t1741 + t1742 + t1762 + t1767 + t1775 - 0.04895*t1785 - 0.14946*t1792 + 0.17081*t1750*t495) + 12.915924480000001*(t1741 + t1742 - 0.0343*t1746 + t1762 + 0.135*t1750*t495 - 0.049*t1750*t504) + 1.2360600000000002*(t1741 + t1742 + t1762 + t1767 + t1775 + t1800 + t1801 + t1820 + t1821 + t1841 + t1842 + t1750*t495*t728 + t1845*t748 + t1863*t765 + 0.01889*(t1750*t495*t770 + t1845*t775 + t1863*t782) - 0.617968*(t1750*t495*t790 + t1845*t794 + t1863*t797) + 0.126739*(t1750*t495*t809 + t1845*t813 + t1863*t817)) + 1.469538*(t1741 + t1742 + t1762 + t1767 + t1775 + t1800 + t1801 + t1820 + t1821 + t1841 + t1842 + 0.13064*t1750*t495 + 0.00589*(t1863*t829 + t1845*t839) - 1.11818*(t1845*t829 - 1.*t1863*t839) + t1845*t841 + t1863*t849);
  p_output1[7]=12.915924480000001*(t1942 + t1953 - 0.049*t1959 + 0.135*t1965) + 10.105084800000002*(t1942 + t1953 + 0.132168*t1965 + t1975 + t1980 + t1984 - 0.255862*t1988 - 0.007761*t1993) + 7.48503*(t1942 + t1953 + 0.130288*t1965 + t1975 + t1980 + t1984 + t2001 + t2002 - 0.000421*t2006 - 0.45406*t2012) + 10.1043*(t1942 + t1953 + 0.127241*t1965 + t1975 + t1980 + t1984 + t2001 + t2002 + t2019 + t2020 - 0.826587*t2025 - 0.004179*t2031) + 56.8222668*(t1942 + t1953 + 0.17081*t1965 + t1975 - 0.04895*t1959*t542 + 0.14946*t1959*t551) + 1.2360600000000002*(t1942 + t1953 + t1975 + t1980 + t1984 + t2001 + t2002 + t2019 + t2020 + t1965*t728 + t2025*t748 + t2031*t765 + 0.01889*(t1965*t770 + t2025*t775 + t2031*t782) - 0.617968*(t1965*t790 + t2025*t794 + t2031*t797) + 0.126739*(t1965*t809 + t2025*t813 + t2031*t817)) + 1.469538*(t1942 + t1953 + 0.13064*t1965 + t1975 + t1980 + t1984 + t2001 + t2002 + t2019 + t2020 + 0.00589*(t2031*t829 + t2025*t839) - 1.11818*(t2025*t829 - 1.*t2031*t839) + t2025*t841 + t2031*t849);
  p_output1[8]=56.8222668*(t2094 + t2104 - 0.14946*t2111 - 0.04895*t2115) + 10.105084800000002*(t2094 + t2104 + t2121 + t2122 - 0.007761*t2125 - 0.255862*t2135) + 7.48503*(t2094 + t2104 + t2121 + t2122 + t2139 + t2140 - 0.45406*t2151 - 0.000421*t2164) + 10.1043*(t2094 + t2104 + t2121 + t2122 + t2139 + t2140 + t2171 + t2174 - 0.004179*t2179 - 0.826587*t2188) + 1.2360600000000002*(t2094 + t2104 + t2121 + t2122 + t2139 + t2140 + t2171 + t2174 + t2188*t748 + t2179*t765 + 0.01889*(t2188*t775 + t2179*t782) - 0.617968*(t2188*t794 + t2179*t797) + 0.126739*(t2188*t813 + t2179*t817)) + 1.469538*(t2094 + t2104 + t2121 + t2122 + t2139 + t2140 + t2171 + t2174 - 1.11818*(t2188*t829 - 1.*t2179*t839) + 0.00589*(t2179*t829 + t2188*t839) + t2188*t841 + t2179*t849);
  p_output1[9]=10.105084800000002*(t2260 + t2265 - 0.007761*t2269 - 0.255862*t2272) + 7.48503*(t2260 + t2265 + t2278 + t2280 - 0.45406*t2285 - 0.000421*t2289) + 10.1043*(t2260 + t2265 + t2278 + t2280 + t2300 + t2301 - 0.004179*t2308 - 0.826587*t2319) + 1.2360600000000002*(t2260 + t2265 + t2278 + t2280 + t2300 + t2301 + t2319*t748 + t2308*t765 + 0.01889*(t2319*t775 + t2308*t782) - 0.617968*(t2319*t794 + t2308*t797) + 0.126739*(t2319*t813 + t2308*t817)) + 1.469538*(t2260 + t2265 + t2278 + t2280 + t2300 + t2301 - 1.11818*(t2319*t829 - 1.*t2308*t839) + 0.00589*(t2308*t829 + t2319*t839) + t2319*t841 + t2308*t849);
  p_output1[10]=7.48503*(t2381 + t2391 - 0.45406*t2394 - 0.000421*t2400) + 10.1043*(t2381 + t2391 + t2406 + t2407 - 0.004179*t2415 - 0.826587*t2420) + 1.2360600000000002*(t2381 + t2391 + t2406 + t2407 + t2420*t748 + t2415*t765 + 0.01889*(t2420*t775 + t2415*t782) - 0.617968*(t2420*t794 + t2415*t797) + 0.126739*(t2420*t813 + t2415*t817)) + 1.469538*(t2381 + t2391 + t2406 + t2407 - 1.11818*(t2420*t829 - 1.*t2415*t839) + 0.00589*(t2415*t829 + t2420*t839) + t2420*t841 + t2415*t849);
  p_output1[11]=10.1043*(t2498 + t2501 - 0.004179*t2505 - 0.826587*t2516) + 1.2360600000000002*(t2498 + t2501 + t2516*t748 + t2505*t765 + 0.01889*(t2516*t775 + t2505*t782) - 0.617968*(t2516*t794 + t2505*t797) + 0.126739*(t2516*t813 + t2505*t817)) + 1.469538*(t2498 + t2501 - 1.11818*(t2552 + t2516*t829) + 0.00589*(t2557 + t2516*t839) + t2516*t841 + t2505*t849);
  p_output1[12]=1.2360600000000002*(t2505*(-1.2096424700126054e-9 + 0.005534467322*(t2580 + t2586) - 0.021877537552*(t2594 + t2595) - 0.6934128581485427*t713) + t2625*(-1.7147089040178687e-8 + 0.005534467322*(t2571 + t2607) - 0.6934341012630001*(t2595 + t2613) - 0.021744644052735636*t713) + t1959*(-2.1934241414728571e-7 - 0.021877537552*(t2569 + t2571) - 0.6934341012630001*(t2578 + t2580) + 0.000033783761634830594*t713) + 0.126739*(t2505*(t2578 + t2628) + t2625*(t2569 + t2647) - 0.006104248100000001*t1959*t713) - 0.617968*(t1959*(t2586 + t2628) + t2625*(t2594 + t2634) - 0.999969365345*t2505*t713) + 0.01889*(t2505*(t2613 + t2634) + t1959*(t2607 + t2647) - 0.993925573253*t2625*t713));
  p_output1[13]=1.469538*(-1.11818*(t2552 - 1.*t2625*t829) + t2625*(-1.11344*t829 - 0.02159*t839) + 0.00589*(t2557 - 1.*t2625*t839) + t2505*(0.02159*t829 + t846));
  p_output1[14]=19.28261448*(t2691 + t2692 + 0.01793*t2699 - 0.1351*t2704) + 56.8222668*(t2691 + t2692 + t2712 + t2722 + t2727 - 0.04895*t2731 - 0.14946*t2739 - 0.17081*t2704*t74) + 10.105084800000002*(t2691 + t2692 + t2712 + t2722 + t2727 + t2746 + t2747 - 0.255862*t2754 - 0.007761*t2761 - 0.132168*t2704*t74) + 1.469538*(t2691 + t2692 + t2712 + t2722 + t2727 + t2746 + t2747 + t2771 + t2772 + t2793 + t2794 + 0.00589*(t2805*t427 + t2797*t436) - 1.11818*(t2797*t427 - 1.*t2805*t436) + t2797*t440 + t2805*t446 - 0.13064*t2704*t74) + 7.48503*(t2691 + t2692 + t2712 + t2722 + t2727 + t2746 + t2747 + t2771 + t2772 - 0.000421*t2777 - 0.45406*t2781 - 0.130288*t2704*t74) + 10.1043*(t2691 + t2692 + t2712 + t2722 + t2727 + t2746 + t2747 + t2771 + t2772 + t2793 + t2794 - 0.826587*t2797 - 0.004179*t2805 - 0.127241*t2704*t74) + 1.2360600000000002*(t2691 + t2692 + t2712 + t2722 + t2727 + t2746 + t2747 + t2771 + t2772 + t2793 + t2794 + t2797*t334 + t2805*t350 + t2704*t311*t74 + 0.01889*(t2797*t362 + t2805*t371 + t2704*t357*t74) - 0.617968*(t2797*t390 + t2805*t393 + t2704*t384*t74) - 0.126739*(t2797*t406 + t2805*t411 + t2704*t402*t74)) + 12.915924480000001*(t2691 + t2692 - 0.0343*t2699 + t2712 - 0.135*t2704*t74 - 0.049*t2704*t79);
  p_output1[15]=56.8222668*(t2883 + t2891 - 0.04895*t116*t2899 + 0.14946*t122*t2899 + t2902 - 0.17081*t2908) + 12.915924480000001*(t2883 + t2891 - 0.049*t2899 - 0.135*t2908) + 10.105084800000002*(t2883 + t2891 + t2902 - 0.132168*t2908 + t2923 + t2924 - 0.255862*t2929 - 0.007761*t2935) + 7.48503*(t2883 + t2891 + t2902 - 0.130288*t2908 + t2923 + t2924 + t2946 + t2947 - 0.000421*t2956 - 0.45406*t2961) + 10.1043*(t2883 + t2891 + t2902 - 0.127241*t2908 + t2923 + t2924 + t2946 + t2947 + t2971 + t2974 - 0.826587*t2977 - 0.004179*t2986) + 1.2360600000000002*(t2883 + t2891 + t2902 + t2923 + t2924 + t2946 + t2947 + t2971 + t2974 + t2908*t311 + t2977*t334 + t2986*t350 + 0.01889*(t2908*t357 + t2977*t362 + t2986*t371) - 0.617968*(t2908*t384 + t2977*t390 + t2986*t393) - 0.126739*(t2908*t402 + t2977*t406 + t2986*t411)) + 1.469538*(t2883 + t2891 + t2902 - 0.13064*t2908 + t2923 + t2924 + t2946 + t2947 + t2971 + t2974 + 0.00589*(t2986*t427 + t2977*t436) - 1.11818*(t2977*t427 - 1.*t2986*t436) + t2977*t440 + t2986*t446);
  p_output1[16]=56.8222668*(t3048 + t3060 - 0.14946*t3065 - 0.04895*t3071) + 10.105084800000002*(t3048 + t3060 + t3078 + t3079 - 0.007761*t3084 - 0.255862*t3089) + 7.48503*(t3048 + t3060 + t3078 + t3079 + t3095 + t3096 - 0.45406*t3099 - 0.000421*t3107) + 10.1043*(t3048 + t3060 + t3078 + t3079 + t3095 + t3096 + t3111 + t3115 - 0.004179*t3118 - 0.826587*t3125) + 1.2360600000000002*(t3048 + t3060 + t3078 + t3079 + t3095 + t3096 + t3111 + t3115 + t3125*t334 + t3118*t350 + 0.01889*(t3125*t362 + t3118*t371) - 0.617968*(t3125*t390 + t3118*t393) - 0.126739*(t3125*t406 + t3118*t411)) + 1.469538*(t3048 + t3060 + t3078 + t3079 + t3095 + t3096 + t3111 + t3115 - 1.11818*(t3125*t427 - 1.*t3118*t436) + 0.00589*(t3118*t427 + t3125*t436) + t3125*t440 + t3118*t446);
  p_output1[17]=10.105084800000002*(t3184 + t3188 - 0.007761*t3194 - 0.255862*t3197) + 7.48503*(t3184 + t3188 + t3205 + t3208 - 0.45406*t3213 - 0.000421*t3219) + 10.1043*(t3184 + t3188 + t3205 + t3208 + t3226 + t3227 - 0.004179*t3233 - 0.826587*t3239) + 1.2360600000000002*(t3184 + t3188 + t3205 + t3208 + t3226 + t3227 + t3239*t334 + t3233*t350 + 0.01889*(t3239*t362 + t3233*t371) - 0.617968*(t3239*t390 + t3233*t393) - 0.126739*(t3239*t406 + t3233*t411)) + 1.469538*(t3184 + t3188 + t3205 + t3208 + t3226 + t3227 - 1.11818*(t3239*t427 - 1.*t3233*t436) + 0.00589*(t3233*t427 + t3239*t436) + t3239*t440 + t3233*t446);
  p_output1[18]=7.48503*(t3294 + t3305 - 0.45406*t3309 - 0.000421*t3315) + 10.1043*(t3294 + t3305 + t3319 + t3322 - 0.004179*t3326 - 0.826587*t3332) + 1.2360600000000002*(t3294 + t3305 + t3319 + t3322 + t3332*t334 + t3326*t350 + 0.01889*(t3332*t362 + t3326*t371) - 0.617968*(t3332*t390 + t3326*t393) - 0.126739*(t3332*t406 + t3326*t411)) + 1.469538*(t3294 + t3305 + t3319 + t3322 - 1.11818*(t3332*t427 - 1.*t3326*t436) + 0.00589*(t3326*t427 + t3332*t436) + t3332*t440 + t3326*t446);
  p_output1[19]=10.1043*(t3389 + t3397 - 0.004179*t3400 - 0.826587*t3405) + 1.2360600000000002*(t3389 + t3397 + t334*t3405 + t3400*t350 + 0.01889*(t3405*t362 + t3400*t371) - 0.617968*(t3405*t390 + t3400*t393) - 0.126739*(t3405*t406 + t3400*t411)) + 1.469538*(t3389 + t3397 - 1.11818*(t3435 + t3405*t427) + 0.00589*(t3440 + t3405*t436) + t3405*t440 + t3400*t446);
  p_output1[20]=1.2360600000000002*(t2899*(2.1934241414728571e-7 - 0.000033783761634830594*t296 - 0.6934341012630001*(t3453 + t3454) - 0.021877537552*(t3459 + t3460)) + t3400*(-1.2096424700126054e-9 - 0.6934128581485427*t296 - 0.021877537552*(t3469 + t3470) - 0.005534467322*(t3454 + t3473)) + (-1.7147089040178687e-8 - 0.021744644052735636*t296 - 0.6934341012630001*(t3470 + t3486) - 0.005534467322*(t3460 + t3489))*t3505 - 0.126739*(-0.006104248100000001*t2899*t296 + t3400*(t3453 + t3508) + t3505*(t3459 + t3518)) - 0.617968*(-0.999969365345*t296*t3400 + t2899*(t3473 + t3508) + t3505*(t3469 + t3537)) + 0.01889*(-0.993925573253*t296*t3505 + t2899*(t3489 + t3518) + t3400*(t3486 + t3537)));
  p_output1[21]=1.469538*(-1.11818*(t3435 - 1.*t3505*t427) + t3505*(-1.11344*t427 - 0.02159*t436) + 0.00589*(t3440 - 1.*t3505*t436) + t3400*(0.02159*t427 + t444));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void Ge_cassie_v4_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




