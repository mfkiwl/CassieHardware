/*
 * Automatically Generated from Mathematica.
 * Mon 13 Sep 2021 16:09:03 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightToe.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1883;
  double t2297;
  double t2466;
  double t2352;
  double t2487;
  double t2103;
  double t2198;
  double t2221;
  double t2241;
  double t1925;
  double t1978;
  double t2706;
  double t2732;
  double t2737;
  double t2741;
  double t2406;
  double t2528;
  double t2563;
  double t2878;
  double t3064;
  double t3313;
  double t3593;
  double t3625;
  double t3632;
  double t3660;
  double t3882;
  double t3918;
  double t4026;
  double t5689;
  double t5768;
  double t5789;
  double t5920;
  double t5992;
  double t6038;
  double t6251;
  double t6566;
  double t6690;
  double t6942;
  double t7246;
  double t7250;
  double t7276;
  double t7303;
  double t7311;
  double t7404;
  double t7604;
  double t7760;
  double t7826;
  double t7939;
  double t8095;
  double t8146;
  double t8147;
  double t8174;
  double t8193;
  double t8206;
  double t8215;
  double t8225;
  double t8230;
  double t8232;
  double t8270;
  double t8274;
  double t8294;
  double t8352;
  double t8371;
  double t8385;
  double t8400;
  double t8451;
  double t8469;
  double t8482;
  double t8543;
  double t8574;
  double t8631;
  double t2239;
  double t2253;
  double t2259;
  double t2712;
  double t2720;
  double t2751;
  double t2766;
  double t2779;
  double t8758;
  double t8762;
  double t8765;
  double t3656;
  double t3663;
  double t3670;
  double t8737;
  double t8745;
  double t8755;
  double t8787;
  double t8808;
  double t8818;
  double t4871;
  double t5308;
  double t5517;
  double t6086;
  double t6339;
  double t6388;
  double t8833;
  double t8861;
  double t8877;
  double t8992;
  double t9005;
  double t9043;
  double t7012;
  double t7059;
  double t7123;
  double t7524;
  double t7654;
  double t7719;
  double t9049;
  double t9050;
  double t9052;
  double t9059;
  double t9060;
  double t9065;
  double t8070;
  double t8075;
  double t8084;
  double t8210;
  double t8217;
  double t8218;
  double t9069;
  double t9073;
  double t9076;
  double t9098;
  double t9104;
  double t9111;
  double t8257;
  double t8258;
  double t8259;
  double t8396;
  double t8415;
  double t8442;
  double t9129;
  double t9157;
  double t9172;
  double t9191;
  double t9217;
  double t9227;
  double t8504;
  double t8525;
  double t8538;
  double t9240;
  double t9242;
  double t9243;
  double t9247;
  double t9253;
  double t9259;
  double t9329;
  double t9334;
  double t9339;
  double t9381;
  double t9403;
  double t9405;
  double t9420;
  double t9426;
  double t9429;
  double t9433;
  double t9450;
  double t9453;
  double t9456;
  double t9462;
  double t9469;
  double t9478;
  double t9484;
  double t9488;
  double t9497;
  double t9511;
  double t9518;
  double t9552;
  double t9558;
  double t9562;
  double t9573;
  double t9576;
  double t9577;
  double t9584;
  double t9585;
  double t9586;
  double t9600;
  double t9617;
  double t9618;
  double t9679;
  double t9686;
  double t9687;
  double t9691;
  double t9692;
  double t9695;
  double t9737;
  double t9741;
  double t9745;
  double t9758;
  double t9767;
  double t9774;
  double t9788;
  double t9800;
  double t9801;
  double t9813;
  double t9815;
  double t9819;
  double t9824;
  double t9827;
  double t9828;
  double t9834;
  double t9835;
  double t9836;
  double t9846;
  double t9847;
  double t9849;
  double t9856;
  double t9862;
  double t9870;
  double t9881;
  double t9890;
  double t9899;
  double t9965;
  double t9966;
  double t9969;
  double t9974;
  double t9975;
  double t9983;
  double t10028;
  double t10029;
  double t10033;
  double t10037;
  double t10038;
  double t10044;
  double t10048;
  double t10049;
  double t10051;
  double t10056;
  double t10057;
  double t10058;
  double t10061;
  double t10062;
  double t10066;
  double t10075;
  double t10080;
  double t10086;
  double t10097;
  double t10099;
  double t10100;
  double t10105;
  double t10108;
  double t10109;
  double t10114;
  double t10116;
  double t10121;
  double t10214;
  double t10217;
  double t10218;
  double t10230;
  double t10234;
  double t10244;
  double t10257;
  double t10266;
  double t10276;
  double t10298;
  double t10306;
  double t10311;
  double t10313;
  double t10314;
  double t10318;
  double t10321;
  double t10322;
  double t10323;
  double t10325;
  double t10326;
  double t10333;
  double t10338;
  double t10345;
  double t10351;
  double t10359;
  double t10367;
  double t10374;
  double t10410;
  double t10417;
  double t10423;
  double t10452;
  double t10453;
  double t10458;
  double t10472;
  double t10475;
  double t10484;
  double t10490;
  double t10493;
  double t10497;
  double t10514;
  double t10518;
  double t10519;
  double t10522;
  double t10523;
  double t10524;
  double t10528;
  double t10529;
  double t10533;
  double t10538;
  double t10539;
  double t10540;
  double t10543;
  double t10545;
  double t10546;
  double t10558;
  double t10565;
  double t10572;
  double t10626;
  double t10629;
  double t10637;
  double t10649;
  double t10660;
  double t10661;
  double t10668;
  double t10669;
  double t10670;
  double t10681;
  double t10684;
  double t10687;
  double t10714;
  double t10715;
  double t10718;
  double t10722;
  double t10723;
  double t10725;
  double t10727;
  double t10728;
  double t10731;
  double t10738;
  double t10739;
  double t10745;
  double t10754;
  double t10756;
  double t10759;
  double t10762;
  double t10763;
  double t10764;
  double t10813;
  double t10814;
  double t10822;
  double t10809;
  double t10810;
  double t10811;
  double t10836;
  double t10841;
  double t10843;
  double t10847;
  double t10848;
  double t10850;
  double t10857;
  double t10859;
  double t10872;
  double t10878;
  double t10879;
  double t10881;
  double t10886;
  double t10887;
  double t10897;
  double t10908;
  double t10914;
  double t10916;
  double t10922;
  double t10927;
  double t10928;
  double t10933;
  double t10939;
  double t10948;
  double t10962;
  double t10963;
  double t10964;
  double t10973;
  double t10974;
  double t10975;
  double t10979;
  double t10980;
  double t10982;
  double t10985;
  double t10986;
  double t10989;
  double t10993;
  double t10994;
  double t10995;
  double t11001;
  double t11002;
  double t11005;
  double t11013;
  double t11017;
  double t11021;
  double t11025;
  double t11027;
  double t11029;
  double t11035;
  double t11038;
  double t11039;
  double t11062;
  double t11063;
  double t11064;
  double t11059;
  double t11060;
  double t11069;
  double t11070;
  double t11071;
  double t11074;
  double t11075;
  double t11076;
  double t11082;
  double t11083;
  double t11084;
  double t11086;
  double t11087;
  double t11089;
  double t11091;
  double t11093;
  double t11097;
  double t11102;
  double t11103;
  double t11107;
  double t11112;
  double t11114;
  double t11119;
  double t11123;
  double t11126;
  double t11130;
  double t11168;
  double t11169;
  double t11172;
  double t11174;
  double t11175;
  double t11176;
  double t11186;
  double t11187;
  double t11188;
  double t11190;
  double t11191;
  double t11192;
  double t11194;
  double t11195;
  double t11196;
  double t11198;
  double t11199;
  double t11200;
  double t11202;
  double t11203;
  double t11204;
  double t11206;
  double t11207;
  double t11208;
  double t11153;
  double t11159;
  double t11161;
  double t11165;
  double t11167;
  double t8951;
  double t8978;
  double t8989;
  double t11269;
  double t11272;
  double t11273;
  double t11276;
  double t11281;
  double t11282;
  double t11284;
  double t11287;
  double t11288;
  double t11290;
  double t11291;
  double t11294;
  double t11296;
  double t11297;
  double t11298;
  double t11300;
  double t11301;
  double t11302;
  double t11313;
  double t11314;
  double t11315;
  double t11317;
  double t11320;
  double t11323;
  double t11325;
  double t11329;
  double t11331;
  double t11353;
  double t11354;
  double t11358;
  double t11361;
  double t11362;
  double t11364;
  double t11368;
  double t11371;
  double t11373;
  double t11375;
  double t11376;
  double t11377;
  double t11379;
  double t11380;
  double t11383;
  double t11385;
  double t11386;
  double t11387;
  double t11414;
  double t11416;
  double t11417;
  double t11421;
  double t11422;
  double t11423;
  double t11425;
  double t11426;
  double t11427;
  double t11429;
  double t11430;
  double t11431;
  double t11433;
  double t11434;
  double t11436;
  double t11440;
  double t11441;
  double t11442;
  double t11446;
  double t11449;
  double t11450;
  double t11454;
  double t11455;
  double t11456;
  double t11459;
  double t11460;
  double t11462;
  double t11402;
  double t11403;
  double t11409;
  double t11410;
  double t11411;
  double t11487;
  double t11488;
  double t11489;
  double t11494;
  double t11495;
  double t11497;
  double t11498;
  double t11501;
  double t11503;
  double t11504;
  double t11505;
  double t11509;
  double t11510;
  double t11511;
  double t11513;
  double t11514;
  double t11515;
  double t11517;
  double t11519;
  double t11520;
  double t11538;
  double t11540;
  double t11551;
  double t11560;
  double t11561;
  double t11563;
  double t11568;
  double t11571;
  double t11572;
  double t11576;
  double t11577;
  double t11580;
  double t11584;
  double t11585;
  double t11587;
  double t11596;
  double t11597;
  double t11600;
  double t11603;
  double t11606;
  double t11607;
  double t11609;
  double t11612;
  double t11613;
  double t11615;
  double t11616;
  double t11617;
  double t11631;
  double t11632;
  double t11633;
  double t11638;
  double t11639;
  double t11641;
  double t11642;
  double t11644;
  double t11646;
  double t11647;
  double t11650;
  double t11654;
  double t11656;
  double t11660;
  double t11664;
  double t11670;
  double t11673;
  double t11674;
  double t11675;
  double t11628;
  double t11629;
  double t11630;
  double t11635;
  double t11636;
  double t11705;
  double t11706;
  double t11708;
  double t11709;
  double t11710;
  double t11712;
  double t11713;
  double t11715;
  double t11716;
  double t11717;
  double t11720;
  double t11721;
  double t11722;
  double t11744;
  double t11745;
  double t11749;
  double t11753;
  double t11754;
  double t11760;
  double t11762;
  double t11766;
  double t11770;
  double t11772;
  double t11776;
  double t11782;
  double t11784;
  double t11788;
  double t11790;
  double t11793;
  double t11795;
  double t11798;
  double t11799;
  double t11826;
  double t11828;
  double t11831;
  double t11834;
  double t11837;
  double t11841;
  double t11842;
  double t11845;
  double t11846;
  double t11847;
  double t11850;
  double t11853;
  double t11855;
  double t11818;
  double t11819;
  double t11821;
  double t11823;
  double t11825;
  double t11876;
  double t11877;
  double t11880;
  double t11882;
  double t11885;
  double t11886;
  double t11887;
  double t11906;
  double t11910;
  double t11914;
  double t11921;
  double t11922;
  double t11926;
  double t11930;
  double t11936;
  double t11937;
  double t11938;
  double t11943;
  double t11944;
  double t11945;
  double t11970;
  double t11971;
  double t11972;
  double t11977;
  double t11978;
  double t11981;
  double t11984;
  double t11966;
  double t11967;
  double t11968;
  double t11974;
  double t11975;
  double t12007;
  double t12008;
  double t9288;
  double t12022;
  double t12023;
  double t12027;
  double t12030;
  double t12031;
  double t12035;
  double t12037;
  double t11987;
  double t12078;
  double t12079;
  double t12082;
  double t11993;
  double t12061;
  double t12062;
  double t12071;
  double t12074;
  double t12075;
  double t12010;
  double t9289;
  double t9290;
  double t12041;
  double t12114;
  double t12115;
  double t12116;
  double t12047;
  t1883 = Cos(var1[3]);
  t2297 = Cos(var1[5]);
  t2466 = Sin(var1[3]);
  t2352 = Sin(var1[4]);
  t2487 = Sin(var1[5]);
  t2103 = Cos(var1[15]);
  t2198 = -1.*t2103;
  t2221 = 1. + t2198;
  t2241 = Sin(var1[15]);
  t1925 = Cos(var1[4]);
  t1978 = Sin(var1[14]);
  t2706 = Cos(var1[14]);
  t2732 = -1.*t2297*t2466;
  t2737 = -1.*t1883*t2352*t2487;
  t2741 = t2732 + t2737;
  t2406 = t1883*t2297*t2352;
  t2528 = -1.*t2466*t2487;
  t2563 = t2406 + t2528;
  t2878 = -1.*t1883*t1925*t1978;
  t3064 = t2706*t2741;
  t3313 = t2878 + t3064;
  t3593 = Cos(var1[16]);
  t3625 = -1.*t3593;
  t3632 = 1. + t3625;
  t3660 = Sin(var1[16]);
  t3882 = -1.*t2706*t1883*t1925;
  t3918 = -1.*t1978*t2741;
  t4026 = t3882 + t3918;
  t5689 = t2103*t2563;
  t5768 = t2241*t3313;
  t5789 = t5689 + t5768;
  t5920 = Cos(var1[17]);
  t5992 = -1.*t5920;
  t6038 = 1. + t5992;
  t6251 = Sin(var1[17]);
  t6566 = t3660*t4026;
  t6690 = t3593*t5789;
  t6942 = t6566 + t6690;
  t7246 = t3593*t4026;
  t7250 = -1.*t3660*t5789;
  t7276 = t7246 + t7250;
  t7303 = Cos(var1[18]);
  t7311 = -1.*t7303;
  t7404 = 1. + t7311;
  t7604 = Sin(var1[18]);
  t7760 = -1.*t6251*t6942;
  t7826 = t5920*t7276;
  t7939 = t7760 + t7826;
  t8095 = t5920*t6942;
  t8146 = t6251*t7276;
  t8147 = t8095 + t8146;
  t8174 = Cos(var1[19]);
  t8193 = -1.*t8174;
  t8206 = 1. + t8193;
  t8215 = Sin(var1[19]);
  t8225 = t7604*t7939;
  t8230 = t7303*t8147;
  t8232 = t8225 + t8230;
  t8270 = t7303*t7939;
  t8274 = -1.*t7604*t8147;
  t8294 = t8270 + t8274;
  t8352 = Cos(var1[21]);
  t8371 = -1.*t8352;
  t8385 = 1. + t8371;
  t8400 = Sin(var1[21]);
  t8451 = -1.*t8215*t8232;
  t8469 = t8174*t8294;
  t8482 = t8451 + t8469;
  t8543 = t8174*t8232;
  t8574 = t8215*t8294;
  t8631 = t8543 + t8574;
  t2239 = -0.049*t2221;
  t2253 = -0.135*t2241;
  t2259 = t2239 + t2253;
  t2712 = -1.*t2706;
  t2720 = 1. + t2712;
  t2751 = -0.135*t2221;
  t2766 = 0.049*t2241;
  t2779 = t2751 + t2766;
  t8758 = t1883*t2297;
  t8762 = -1.*t2466*t2352*t2487;
  t8765 = t8758 + t8762;
  t3656 = -0.09*t3632;
  t3663 = 0.049*t3660;
  t3670 = t3656 + t3663;
  t8737 = t2297*t2466*t2352;
  t8745 = t1883*t2487;
  t8755 = t8737 + t8745;
  t8787 = -1.*t1925*t1978*t2466;
  t8808 = t2706*t8765;
  t8818 = t8787 + t8808;
  t4871 = -0.049*t3632;
  t5308 = -0.09*t3660;
  t5517 = t4871 + t5308;
  t6086 = -0.049*t6038;
  t6339 = -0.21*t6251;
  t6388 = t6086 + t6339;
  t8833 = -1.*t2706*t1925*t2466;
  t8861 = -1.*t1978*t8765;
  t8877 = t8833 + t8861;
  t8992 = t2103*t8755;
  t9005 = t2241*t8818;
  t9043 = t8992 + t9005;
  t7012 = -0.21*t6038;
  t7059 = 0.049*t6251;
  t7123 = t7012 + t7059;
  t7524 = -0.27068*t7404;
  t7654 = 0.00159*t7604;
  t7719 = t7524 + t7654;
  t9049 = t3660*t8877;
  t9050 = t3593*t9043;
  t9052 = t9049 + t9050;
  t9059 = t3593*t8877;
  t9060 = -1.*t3660*t9043;
  t9065 = t9059 + t9060;
  t8070 = -0.00159*t7404;
  t8075 = -0.27068*t7604;
  t8084 = t8070 + t8075;
  t8210 = 0.01841*t8206;
  t8217 = -0.70544*t8215;
  t8218 = t8210 + t8217;
  t9069 = -1.*t6251*t9052;
  t9073 = t5920*t9065;
  t9076 = t9069 + t9073;
  t9098 = t5920*t9052;
  t9104 = t6251*t9065;
  t9111 = t9098 + t9104;
  t8257 = -0.70544*t8206;
  t8258 = -0.01841*t8215;
  t8259 = t8257 + t8258;
  t8396 = -1.11344*t8385;
  t8415 = 0.02159*t8400;
  t8442 = t8396 + t8415;
  t9129 = t7604*t9076;
  t9157 = t7303*t9111;
  t9172 = t9129 + t9157;
  t9191 = t7303*t9076;
  t9217 = -1.*t7604*t9111;
  t9227 = t9191 + t9217;
  t8504 = -0.02159*t8385;
  t8525 = -1.11344*t8400;
  t8538 = t8504 + t8525;
  t9240 = -1.*t8215*t9172;
  t9242 = t8174*t9227;
  t9243 = t9240 + t9242;
  t9247 = t8174*t9172;
  t9253 = t8215*t9227;
  t9259 = t9247 + t9253;
  t9329 = t1925*t1978;
  t9334 = t2706*t2352*t2487;
  t9339 = t9329 + t9334;
  t9381 = t2706*t1925;
  t9403 = -1.*t1978*t2352*t2487;
  t9405 = t9381 + t9403;
  t9420 = -1.*t2103*t2297*t2352;
  t9426 = t2241*t9339;
  t9429 = t9420 + t9426;
  t9433 = t3660*t9405;
  t9450 = t3593*t9429;
  t9453 = t9433 + t9450;
  t9456 = t3593*t9405;
  t9462 = -1.*t3660*t9429;
  t9469 = t9456 + t9462;
  t9478 = -1.*t6251*t9453;
  t9484 = t5920*t9469;
  t9488 = t9478 + t9484;
  t9497 = t5920*t9453;
  t9511 = t6251*t9469;
  t9518 = t9497 + t9511;
  t9552 = t7604*t9488;
  t9558 = t7303*t9518;
  t9562 = t9552 + t9558;
  t9573 = t7303*t9488;
  t9576 = -1.*t7604*t9518;
  t9577 = t9573 + t9576;
  t9584 = -1.*t8215*t9562;
  t9585 = t8174*t9577;
  t9586 = t9584 + t9585;
  t9600 = t8174*t9562;
  t9617 = t8215*t9577;
  t9618 = t9600 + t9617;
  t9679 = t1978*t2466*t2352;
  t9686 = -1.*t2706*t1925*t2466*t2487;
  t9687 = t9679 + t9686;
  t9691 = t2706*t2466*t2352;
  t9692 = t1925*t1978*t2466*t2487;
  t9695 = t9691 + t9692;
  t9737 = t2103*t1925*t2297*t2466;
  t9741 = t2241*t9687;
  t9745 = t9737 + t9741;
  t9758 = t3660*t9695;
  t9767 = t3593*t9745;
  t9774 = t9758 + t9767;
  t9788 = t3593*t9695;
  t9800 = -1.*t3660*t9745;
  t9801 = t9788 + t9800;
  t9813 = -1.*t6251*t9774;
  t9815 = t5920*t9801;
  t9819 = t9813 + t9815;
  t9824 = t5920*t9774;
  t9827 = t6251*t9801;
  t9828 = t9824 + t9827;
  t9834 = t7604*t9819;
  t9835 = t7303*t9828;
  t9836 = t9834 + t9835;
  t9846 = t7303*t9819;
  t9847 = -1.*t7604*t9828;
  t9849 = t9846 + t9847;
  t9856 = -1.*t8215*t9836;
  t9862 = t8174*t9849;
  t9870 = t9856 + t9862;
  t9881 = t8174*t9836;
  t9890 = t8215*t9849;
  t9899 = t9881 + t9890;
  t9965 = -1.*t1883*t1978*t2352;
  t9966 = t2706*t1883*t1925*t2487;
  t9969 = t9965 + t9966;
  t9974 = -1.*t2706*t1883*t2352;
  t9975 = -1.*t1883*t1925*t1978*t2487;
  t9983 = t9974 + t9975;
  t10028 = -1.*t2103*t1883*t1925*t2297;
  t10029 = t2241*t9969;
  t10033 = t10028 + t10029;
  t10037 = t3660*t9983;
  t10038 = t3593*t10033;
  t10044 = t10037 + t10038;
  t10048 = t3593*t9983;
  t10049 = -1.*t3660*t10033;
  t10051 = t10048 + t10049;
  t10056 = -1.*t6251*t10044;
  t10057 = t5920*t10051;
  t10058 = t10056 + t10057;
  t10061 = t5920*t10044;
  t10062 = t6251*t10051;
  t10066 = t10061 + t10062;
  t10075 = t7604*t10058;
  t10080 = t7303*t10066;
  t10086 = t10075 + t10080;
  t10097 = t7303*t10058;
  t10099 = -1.*t7604*t10066;
  t10100 = t10097 + t10099;
  t10105 = -1.*t8215*t10086;
  t10108 = t8174*t10100;
  t10109 = t10105 + t10108;
  t10114 = t8174*t10086;
  t10116 = t8215*t10100;
  t10121 = t10114 + t10116;
  t10214 = -1.*t2706*t1925*t2297*t2241;
  t10217 = -1.*t2103*t1925*t2487;
  t10218 = t10214 + t10217;
  t10230 = t1925*t2297*t1978*t3660;
  t10234 = t3593*t10218;
  t10244 = t10230 + t10234;
  t10257 = t3593*t1925*t2297*t1978;
  t10266 = -1.*t3660*t10218;
  t10276 = t10257 + t10266;
  t10298 = -1.*t6251*t10244;
  t10306 = t5920*t10276;
  t10311 = t10298 + t10306;
  t10313 = t5920*t10244;
  t10314 = t6251*t10276;
  t10318 = t10313 + t10314;
  t10321 = t7604*t10311;
  t10322 = t7303*t10318;
  t10323 = t10321 + t10322;
  t10325 = t7303*t10311;
  t10326 = -1.*t7604*t10318;
  t10333 = t10325 + t10326;
  t10338 = -1.*t8215*t10323;
  t10345 = t8174*t10333;
  t10351 = t10338 + t10345;
  t10359 = t8174*t10323;
  t10367 = t8215*t10333;
  t10374 = t10359 + t10367;
  t10410 = -1.*t2297*t2466*t2352;
  t10417 = -1.*t1883*t2487;
  t10423 = t10410 + t10417;
  t10452 = t2706*t2241*t10423;
  t10453 = t2103*t8765;
  t10458 = t10452 + t10453;
  t10472 = -1.*t1978*t3660*t10423;
  t10475 = t3593*t10458;
  t10484 = t10472 + t10475;
  t10490 = -1.*t3593*t1978*t10423;
  t10493 = -1.*t3660*t10458;
  t10497 = t10490 + t10493;
  t10514 = -1.*t6251*t10484;
  t10518 = t5920*t10497;
  t10519 = t10514 + t10518;
  t10522 = t5920*t10484;
  t10523 = t6251*t10497;
  t10524 = t10522 + t10523;
  t10528 = t7604*t10519;
  t10529 = t7303*t10524;
  t10533 = t10528 + t10529;
  t10538 = t7303*t10519;
  t10539 = -1.*t7604*t10524;
  t10540 = t10538 + t10539;
  t10543 = -1.*t8215*t10533;
  t10545 = t8174*t10540;
  t10546 = t10543 + t10545;
  t10558 = t8174*t10533;
  t10565 = t8215*t10540;
  t10572 = t10558 + t10565;
  t10626 = t2297*t2466;
  t10629 = t1883*t2352*t2487;
  t10637 = t10626 + t10629;
  t10649 = t2706*t2241*t2563;
  t10660 = t2103*t10637;
  t10661 = t10649 + t10660;
  t10668 = -1.*t1978*t3660*t2563;
  t10669 = t3593*t10661;
  t10670 = t10668 + t10669;
  t10681 = -1.*t3593*t1978*t2563;
  t10684 = -1.*t3660*t10661;
  t10687 = t10681 + t10684;
  t10714 = -1.*t6251*t10670;
  t10715 = t5920*t10687;
  t10718 = t10714 + t10715;
  t10722 = t5920*t10670;
  t10723 = t6251*t10687;
  t10725 = t10722 + t10723;
  t10727 = t7604*t10718;
  t10728 = t7303*t10725;
  t10731 = t10727 + t10728;
  t10738 = t7303*t10718;
  t10739 = -1.*t7604*t10725;
  t10745 = t10738 + t10739;
  t10754 = -1.*t8215*t10731;
  t10756 = t8174*t10745;
  t10759 = t10754 + t10756;
  t10762 = t8174*t10731;
  t10763 = t8215*t10745;
  t10764 = t10762 + t10763;
  t10813 = t2706*t2352;
  t10814 = t1925*t1978*t2487;
  t10822 = t10813 + t10814;
  t10809 = -1.*t1978*t2352;
  t10810 = t2706*t1925*t2487;
  t10811 = t10809 + t10810;
  t10836 = t3660*t10811;
  t10841 = t3593*t2241*t10822;
  t10843 = t10836 + t10841;
  t10847 = t3593*t10811;
  t10848 = -1.*t2241*t3660*t10822;
  t10850 = t10847 + t10848;
  t10857 = -1.*t6251*t10843;
  t10859 = t5920*t10850;
  t10872 = t10857 + t10859;
  t10878 = t5920*t10843;
  t10879 = t6251*t10850;
  t10881 = t10878 + t10879;
  t10886 = t7604*t10872;
  t10887 = t7303*t10881;
  t10897 = t10886 + t10887;
  t10908 = t7303*t10872;
  t10914 = -1.*t7604*t10881;
  t10916 = t10908 + t10914;
  t10922 = -1.*t8215*t10897;
  t10927 = t8174*t10916;
  t10928 = t10922 + t10927;
  t10933 = t8174*t10897;
  t10939 = t8215*t10916;
  t10948 = t10933 + t10939;
  t10962 = t1925*t1978*t2466;
  t10963 = -1.*t2706*t8765;
  t10964 = t10962 + t10963;
  t10973 = t3660*t10964;
  t10974 = t3593*t2241*t8877;
  t10975 = t10973 + t10974;
  t10979 = t3593*t10964;
  t10980 = -1.*t2241*t3660*t8877;
  t10982 = t10979 + t10980;
  t10985 = -1.*t6251*t10975;
  t10986 = t5920*t10982;
  t10989 = t10985 + t10986;
  t10993 = t5920*t10975;
  t10994 = t6251*t10982;
  t10995 = t10993 + t10994;
  t11001 = t7604*t10989;
  t11002 = t7303*t10995;
  t11005 = t11001 + t11002;
  t11013 = t7303*t10989;
  t11017 = -1.*t7604*t10995;
  t11021 = t11013 + t11017;
  t11025 = -1.*t8215*t11005;
  t11027 = t8174*t11021;
  t11029 = t11025 + t11027;
  t11035 = t8174*t11005;
  t11038 = t8215*t11021;
  t11039 = t11035 + t11038;
  t11062 = t2706*t1883*t1925;
  t11063 = -1.*t1978*t10637;
  t11064 = t11062 + t11063;
  t11059 = -1.*t2706*t10637;
  t11060 = t2878 + t11059;
  t11069 = t3660*t11060;
  t11070 = t3593*t2241*t11064;
  t11071 = t11069 + t11070;
  t11074 = t3593*t11060;
  t11075 = -1.*t2241*t3660*t11064;
  t11076 = t11074 + t11075;
  t11082 = -1.*t6251*t11071;
  t11083 = t5920*t11076;
  t11084 = t11082 + t11083;
  t11086 = t5920*t11071;
  t11087 = t6251*t11076;
  t11089 = t11086 + t11087;
  t11091 = t7604*t11084;
  t11093 = t7303*t11089;
  t11097 = t11091 + t11093;
  t11102 = t7303*t11084;
  t11103 = -1.*t7604*t11089;
  t11107 = t11102 + t11103;
  t11112 = -1.*t8215*t11097;
  t11114 = t8174*t11107;
  t11119 = t11112 + t11114;
  t11123 = t8174*t11097;
  t11126 = t8215*t11107;
  t11130 = t11123 + t11126;
  t11168 = t1978*t2352;
  t11169 = -1.*t2706*t1925*t2487;
  t11172 = t11168 + t11169;
  t11174 = -1.*t1925*t2297*t2241;
  t11175 = t2103*t11172;
  t11176 = t11174 + t11175;
  t11186 = -1.*t5920*t3660*t11176;
  t11187 = -1.*t3593*t6251*t11176;
  t11188 = t11186 + t11187;
  t11190 = t3593*t5920*t11176;
  t11191 = -1.*t3660*t6251*t11176;
  t11192 = t11190 + t11191;
  t11194 = t7604*t11188;
  t11195 = t7303*t11192;
  t11196 = t11194 + t11195;
  t11198 = t7303*t11188;
  t11199 = -1.*t7604*t11192;
  t11200 = t11198 + t11199;
  t11202 = -1.*t8215*t11196;
  t11203 = t8174*t11200;
  t11204 = t11202 + t11203;
  t11206 = t8174*t11196;
  t11207 = t8215*t11200;
  t11208 = t11206 + t11207;
  t11153 = -0.135*t2103;
  t11159 = -0.049*t2241;
  t11161 = t11153 + t11159;
  t11165 = 0.049*t2103;
  t11167 = t11165 + t2253;
  t8951 = -1.*t2241*t8755;
  t8978 = t2103*t8818;
  t8989 = t8951 + t8978;
  t11269 = -1.*t5920*t3660*t8989;
  t11272 = -1.*t3593*t6251*t8989;
  t11273 = t11269 + t11272;
  t11276 = t3593*t5920*t8989;
  t11281 = -1.*t3660*t6251*t8989;
  t11282 = t11276 + t11281;
  t11284 = t7604*t11273;
  t11287 = t7303*t11282;
  t11288 = t11284 + t11287;
  t11290 = t7303*t11273;
  t11291 = -1.*t7604*t11282;
  t11294 = t11290 + t11291;
  t11296 = -1.*t8215*t11288;
  t11297 = t8174*t11294;
  t11298 = t11296 + t11297;
  t11300 = t8174*t11288;
  t11301 = t8215*t11294;
  t11302 = t11300 + t11301;
  t11313 = -1.*t1883*t2297*t2352;
  t11314 = t2466*t2487;
  t11315 = t11313 + t11314;
  t11317 = t1883*t1925*t1978;
  t11320 = t2706*t10637;
  t11323 = t11317 + t11320;
  t11325 = -1.*t2241*t11315;
  t11329 = t2103*t11323;
  t11331 = t11325 + t11329;
  t11353 = -1.*t5920*t3660*t11331;
  t11354 = -1.*t3593*t6251*t11331;
  t11358 = t11353 + t11354;
  t11361 = t3593*t5920*t11331;
  t11362 = -1.*t3660*t6251*t11331;
  t11364 = t11361 + t11362;
  t11368 = t7604*t11358;
  t11371 = t7303*t11364;
  t11373 = t11368 + t11371;
  t11375 = t7303*t11358;
  t11376 = -1.*t7604*t11364;
  t11377 = t11375 + t11376;
  t11379 = -1.*t8215*t11373;
  t11380 = t8174*t11377;
  t11383 = t11379 + t11380;
  t11385 = t8174*t11373;
  t11386 = t8215*t11377;
  t11387 = t11385 + t11386;
  t11414 = t2103*t1925*t2297;
  t11416 = t2241*t11172;
  t11417 = t11414 + t11416;
  t11421 = -1.*t3660*t10822;
  t11422 = -1.*t3593*t11417;
  t11423 = t11421 + t11422;
  t11425 = t3593*t10822;
  t11426 = -1.*t3660*t11417;
  t11427 = t11425 + t11426;
  t11429 = t6251*t11423;
  t11430 = t5920*t11427;
  t11431 = t11429 + t11430;
  t11433 = t5920*t11423;
  t11434 = -1.*t6251*t11427;
  t11436 = t11433 + t11434;
  t11440 = -1.*t7604*t11431;
  t11441 = t7303*t11436;
  t11442 = t11440 + t11441;
  t11446 = t7303*t11431;
  t11449 = t7604*t11436;
  t11450 = t11446 + t11449;
  t11454 = t8215*t11442;
  t11455 = t8174*t11450;
  t11456 = t11454 + t11455;
  t11459 = t8174*t11442;
  t11460 = -1.*t8215*t11450;
  t11462 = t11459 + t11460;
  t11402 = 0.049*t3593;
  t11403 = t11402 + t5308;
  t11409 = -0.09*t3593;
  t11410 = -0.049*t3660;
  t11411 = t11409 + t11410;
  t11487 = -1.*t3660*t8877;
  t11488 = -1.*t3593*t9043;
  t11489 = t11487 + t11488;
  t11494 = t6251*t11489;
  t11495 = t11494 + t9073;
  t11497 = t5920*t11489;
  t11498 = -1.*t6251*t9065;
  t11501 = t11497 + t11498;
  t11503 = -1.*t7604*t11495;
  t11504 = t7303*t11501;
  t11505 = t11503 + t11504;
  t11509 = t7303*t11495;
  t11510 = t7604*t11501;
  t11511 = t11509 + t11510;
  t11513 = t8215*t11505;
  t11514 = t8174*t11511;
  t11515 = t11513 + t11514;
  t11517 = t8174*t11505;
  t11519 = -1.*t8215*t11511;
  t11520 = t11517 + t11519;
  t11538 = t2103*t11315;
  t11540 = t2241*t11323;
  t11551 = t11538 + t11540;
  t11560 = -1.*t3660*t11064;
  t11561 = -1.*t3593*t11551;
  t11563 = t11560 + t11561;
  t11568 = t3593*t11064;
  t11571 = -1.*t3660*t11551;
  t11572 = t11568 + t11571;
  t11576 = t6251*t11563;
  t11577 = t5920*t11572;
  t11580 = t11576 + t11577;
  t11584 = t5920*t11563;
  t11585 = -1.*t6251*t11572;
  t11587 = t11584 + t11585;
  t11596 = -1.*t7604*t11580;
  t11597 = t7303*t11587;
  t11600 = t11596 + t11597;
  t11603 = t7303*t11580;
  t11606 = t7604*t11587;
  t11607 = t11603 + t11606;
  t11609 = t8215*t11600;
  t11612 = t8174*t11607;
  t11613 = t11609 + t11612;
  t11615 = t8174*t11600;
  t11616 = -1.*t8215*t11607;
  t11617 = t11615 + t11616;
  t11631 = t3660*t10822;
  t11632 = t3593*t11417;
  t11633 = t11631 + t11632;
  t11638 = -1.*t6251*t11633;
  t11639 = t11638 + t11430;
  t11641 = -1.*t5920*t11633;
  t11642 = t11641 + t11434;
  t11644 = -1.*t7604*t11639;
  t11646 = t7303*t11642;
  t11647 = t11644 + t11646;
  t11650 = t7303*t11639;
  t11654 = t7604*t11642;
  t11656 = t11650 + t11654;
  t11660 = t8215*t11647;
  t11664 = t8174*t11656;
  t11670 = t11660 + t11664;
  t11673 = t8174*t11647;
  t11674 = -1.*t8215*t11656;
  t11675 = t11673 + t11674;
  t11628 = -0.21*t5920;
  t11629 = -0.049*t6251;
  t11630 = t11628 + t11629;
  t11635 = 0.049*t5920;
  t11636 = t11635 + t6339;
  t11705 = -1.*t5920*t9052;
  t11706 = t11705 + t11498;
  t11708 = -1.*t7604*t9076;
  t11709 = t7303*t11706;
  t11710 = t11708 + t11709;
  t11712 = t7604*t11706;
  t11713 = t9191 + t11712;
  t11715 = t8215*t11710;
  t11716 = t8174*t11713;
  t11717 = t11715 + t11716;
  t11720 = t8174*t11710;
  t11721 = -1.*t8215*t11713;
  t11722 = t11720 + t11721;
  t11744 = t3660*t11064;
  t11745 = t3593*t11551;
  t11749 = t11744 + t11745;
  t11753 = -1.*t6251*t11749;
  t11754 = t11753 + t11577;
  t11760 = -1.*t5920*t11749;
  t11762 = t11760 + t11585;
  t11766 = -1.*t7604*t11754;
  t11770 = t7303*t11762;
  t11772 = t11766 + t11770;
  t11776 = t7303*t11754;
  t11782 = t7604*t11762;
  t11784 = t11776 + t11782;
  t11788 = t8215*t11772;
  t11790 = t8174*t11784;
  t11793 = t11788 + t11790;
  t11795 = t8174*t11772;
  t11798 = -1.*t8215*t11784;
  t11799 = t11795 + t11798;
  t11826 = t5920*t11633;
  t11828 = t6251*t11427;
  t11831 = t11826 + t11828;
  t11834 = -1.*t7303*t11831;
  t11837 = t11644 + t11834;
  t11841 = -1.*t7604*t11831;
  t11842 = t11650 + t11841;
  t11845 = t8215*t11837;
  t11846 = t8174*t11842;
  t11847 = t11845 + t11846;
  t11850 = t8174*t11837;
  t11853 = -1.*t8215*t11842;
  t11855 = t11850 + t11853;
  t11818 = 0.00159*t7303;
  t11819 = t11818 + t8075;
  t11821 = -0.27068*t7303;
  t11823 = -0.00159*t7604;
  t11825 = t11821 + t11823;
  t11876 = -1.*t7303*t9111;
  t11877 = t11708 + t11876;
  t11880 = t8215*t11877;
  t11882 = t11880 + t9242;
  t11885 = t8174*t11877;
  t11886 = -1.*t8215*t9227;
  t11887 = t11885 + t11886;
  t11906 = t5920*t11749;
  t11910 = t6251*t11572;
  t11914 = t11906 + t11910;
  t11921 = -1.*t7303*t11914;
  t11922 = t11766 + t11921;
  t11926 = -1.*t7604*t11914;
  t11930 = t11776 + t11926;
  t11936 = t8215*t11922;
  t11937 = t8174*t11930;
  t11938 = t11936 + t11937;
  t11943 = t8174*t11922;
  t11944 = -1.*t8215*t11930;
  t11945 = t11943 + t11944;
  t11970 = t7604*t11639;
  t11971 = t7303*t11831;
  t11972 = t11970 + t11971;
  t11977 = -1.*t8215*t11972;
  t11978 = t11977 + t11846;
  t11981 = -1.*t8174*t11972;
  t11984 = t11981 + t11853;
  t11966 = -0.70544*t8174;
  t11967 = 0.01841*t8215;
  t11968 = t11966 + t11967;
  t11974 = -0.01841*t8174;
  t11975 = t11974 + t8217;
  t12007 = -1.*t8174*t9172;
  t12008 = t12007 + t11886;
  t9288 = t8352*t9243;
  t12022 = t7604*t11754;
  t12023 = t7303*t11914;
  t12027 = t12022 + t12023;
  t12030 = -1.*t8215*t12027;
  t12031 = t12030 + t11937;
  t12035 = -1.*t8174*t12027;
  t12037 = t12035 + t11944;
  t11987 = -1.*t8400*t11978;
  t12078 = t8174*t11972;
  t12079 = t8215*t11842;
  t12082 = t12078 + t12079;
  t11993 = t8352*t11978;
  t12061 = 0.02159*t8352;
  t12062 = t12061 + t8525;
  t12071 = -1.11344*t8352;
  t12074 = -0.02159*t8400;
  t12075 = t12071 + t12074;
  t12010 = -1.*t8400*t9243;
  t9289 = -1.*t8400*t9259;
  t9290 = t9288 + t9289;
  t12041 = -1.*t8400*t12031;
  t12114 = t8174*t12027;
  t12115 = t8215*t11930;
  t12116 = t12114 + t12115;
  t12047 = t8352*t12031;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=-0.135*t1883*t1925*t1978 + t2259*t2563 - 0.135*t2720*t2741 + t2779*t3313 - 0.1305*(-1.*t2241*t2563 + t2103*t3313) + t3670*t4026 + t5517*t5789 + t6388*t6942 + t7123*t7276 + t7719*t7939 + t8084*t8147 + t8218*t8232 + t8259*t8294 + t8442*t8482 + t8538*t8631 - 0.02159*(t8400*t8482 + t8352*t8631) - 1.11344*(t8352*t8482 - 1.*t8400*t8631);
  p_output1[11]=-0.135*t1925*t1978*t2466 + t2259*t8755 - 0.135*t2720*t8765 + t2779*t8818 + t3670*t8877 - 0.1305*t8989 + t5517*t9043 + t6388*t9052 + t7123*t9065 + t7719*t9076 + t8084*t9111 + t8218*t9172 + t8259*t9227 + t8442*t9243 + t8538*t9259 - 0.02159*(t8400*t9243 + t8352*t9259) - 1.11344*t9290;
  p_output1[12]=0.135*t1925*t1978 - 1.*t2259*t2297*t2352 - 0.135*t2352*t2487*t2720 + t2779*t9339 - 0.1305*(t2241*t2297*t2352 + t2103*t9339) + t3670*t9405 + t5517*t9429 + t6388*t9453 + t7123*t9469 + t7719*t9488 + t8084*t9518 + t8218*t9562 + t8259*t9577 + t8442*t9586 + t8538*t9618 - 0.02159*(t8400*t9586 + t8352*t9618) - 1.11344*(t8352*t9586 - 1.*t8400*t9618);
  p_output1[13]=t1925*t2259*t2297*t2466 + 0.135*t1978*t2352*t2466 + 0.135*t1925*t2466*t2487*t2720 + t2779*t9687 - 0.1305*(-1.*t1925*t2241*t2297*t2466 + t2103*t9687) + t3670*t9695 + t5517*t9745 + t6388*t9774 + t7123*t9801 + t7719*t9819 + t8084*t9828 + t8218*t9836 + t8259*t9849 + t8442*t9870 + t8538*t9899 - 0.02159*(t8400*t9870 + t8352*t9899) - 1.11344*(t8352*t9870 - 1.*t8400*t9899);
  p_output1[14]=-1.*t1883*t1925*t2259*t2297 - 0.135*t1883*t1978*t2352 - 0.135*t1883*t1925*t2487*t2720 + t10033*t5517 + t10044*t6388 + t10051*t7123 + t10058*t7719 + t10066*t8084 + t10086*t8218 + t10100*t8259 - 0.02159*(t10121*t8352 + t10109*t8400) - 1.11344*(t10109*t8352 - 1.*t10121*t8400) + t10109*t8442 + t10121*t8538 + t2779*t9969 - 0.1305*(t1883*t1925*t2241*t2297 + t2103*t9969) + t3670*t9983;
  p_output1[15]=-1.*t1925*t2259*t2487 - 0.1305*(t1925*t2241*t2487 - 1.*t1925*t2103*t2297*t2706) + 0.135*t1925*t2297*t2720 - 1.*t1925*t2297*t2706*t2779 + t1925*t1978*t2297*t3670 + t10218*t5517 + t10244*t6388 + t10276*t7123 + t10311*t7719 + t10318*t8084 + t10323*t8218 + t10333*t8259 - 0.02159*(t10374*t8352 + t10351*t8400) - 1.11344*(t10351*t8352 - 1.*t10374*t8400) + t10351*t8442 + t10374*t8538;
  p_output1[16]=-0.135*t10423*t2720 + t10423*t2706*t2779 - 1.*t10423*t1978*t3670 + t10458*t5517 + t10484*t6388 + t10497*t7123 + t10519*t7719 + t10524*t8084 + t10533*t8218 + t10540*t8259 - 0.02159*(t10572*t8352 + t10546*t8400) - 1.11344*(t10546*t8352 - 1.*t10572*t8400) + t10546*t8442 + t10572*t8538 + t2259*t8765 - 0.1305*(t10423*t2103*t2706 - 1.*t2241*t8765);
  p_output1[17]=t10637*t2259 - 0.1305*(-1.*t10637*t2241 + t2103*t2563*t2706) - 0.135*t2563*t2720 + t2563*t2706*t2779 - 1.*t1978*t2563*t3670 + t10661*t5517 + t10670*t6388 + t10687*t7123 + t10718*t7719 + t10725*t8084 + t10731*t8218 + t10745*t8259 - 0.02159*(t10764*t8352 + t10759*t8400) - 1.11344*(t10759*t8352 - 1.*t10764*t8400) + t10759*t8442 + t10764*t8538;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=-0.1305*t10822*t2103 + 0.135*t1925*t1978*t2487 + 0.135*t2352*t2706 + t10822*t2779 + t10811*t3670 + t10822*t2241*t5517 + t10843*t6388 + t10850*t7123 + t10872*t7719 + t10881*t8084 + t10897*t8218 + t10916*t8259 - 0.02159*(t10948*t8352 + t10928*t8400) - 1.11344*(t10928*t8352 - 1.*t10948*t8400) + t10928*t8442 + t10948*t8538;
  p_output1[43]=-0.135*t1925*t2466*t2706 + t10964*t3670 + t10975*t6388 + t10982*t7123 + t10989*t7719 + t10995*t8084 + t11005*t8218 + t11021*t8259 - 0.02159*(t11039*t8352 + t11029*t8400) - 1.11344*(t11029*t8352 - 1.*t11039*t8400) + t11029*t8442 + t11039*t8538 - 0.135*t1978*t8765 - 0.1305*t2103*t8877 + t2779*t8877 + t2241*t5517*t8877;
  p_output1[44]=-0.135*t10637*t1978 - 0.1305*t11064*t2103 + 0.135*t1883*t1925*t2706 + t11064*t2779 + t11060*t3670 + t11064*t2241*t5517 + t11071*t6388 + t11076*t7123 + t11084*t7719 + t11089*t8084 + t11097*t8218 + t11107*t8259 - 0.02159*(t11130*t8352 + t11119*t8400) - 1.11344*(t11119*t8352 - 1.*t11130*t8400) + t11119*t8442 + t11130*t8538;
  p_output1[45]=t11167*t11172 + t11161*t1925*t2297 - 0.1305*(-1.*t11172*t2241 - 1.*t1925*t2103*t2297) + t11176*t5517 + t11176*t3593*t6388 - 1.*t11176*t3660*t7123 + t11188*t7719 + t11192*t8084 + t11196*t8218 + t11200*t8259 - 0.02159*(t11208*t8352 + t11204*t8400) - 1.11344*(t11204*t8352 - 1.*t11208*t8400) + t11204*t8442 + t11208*t8538;
  p_output1[46]=t11273*t7719 + t11282*t8084 + t11288*t8218 + t11294*t8259 - 0.02159*(t11302*t8352 + t11298*t8400) - 1.11344*(t11298*t8352 - 1.*t11302*t8400) + t11298*t8442 + t11302*t8538 + t11161*t8755 + t11167*t8818 - 0.1305*(-1.*t2103*t8755 - 1.*t2241*t8818) + t5517*t8989 + t3593*t6388*t8989 - 1.*t3660*t7123*t8989;
  p_output1[47]=t11161*t11315 + t11167*t11323 - 0.1305*(-1.*t11315*t2103 - 1.*t11323*t2241) + t11331*t5517 + t11331*t3593*t6388 - 1.*t11331*t3660*t7123 + t11358*t7719 + t11364*t8084 + t11373*t8218 + t11377*t8259 - 0.02159*(t11387*t8352 + t11383*t8400) - 1.11344*(t11383*t8352 - 1.*t11387*t8400) + t11383*t8442 + t11387*t8538;
  p_output1[48]=t10822*t11403 + t11411*t11417 + t11427*t6388 + t11423*t7123 + t11436*t7719 + t11431*t8084 + t11450*t8218 + t11442*t8259 - 1.11344*(t11462*t8352 - 1.*t11456*t8400) - 0.02159*(t11456*t8352 + t11462*t8400) + t11462*t8442 + t11456*t8538;
  p_output1[49]=t11489*t7123 + t11501*t7719 + t11495*t8084 + t11511*t8218 + t11505*t8259 - 1.11344*(t11520*t8352 - 1.*t11515*t8400) - 0.02159*(t11515*t8352 + t11520*t8400) + t11520*t8442 + t11515*t8538 + t11403*t8877 + t11411*t9043 + t6388*t9065;
  p_output1[50]=t11064*t11403 + t11411*t11551 + t11572*t6388 + t11563*t7123 + t11587*t7719 + t11580*t8084 + t11607*t8218 + t11600*t8259 - 1.11344*(t11617*t8352 - 1.*t11613*t8400) - 0.02159*(t11613*t8352 + t11617*t8400) + t11617*t8442 + t11613*t8538;
  p_output1[51]=t11630*t11633 + t11427*t11636 + t11642*t7719 + t11639*t8084 + t11656*t8218 + t11647*t8259 - 1.11344*(t11675*t8352 - 1.*t11670*t8400) - 0.02159*(t11670*t8352 + t11675*t8400) + t11675*t8442 + t11670*t8538;
  p_output1[52]=t11706*t7719 + t11713*t8218 + t11710*t8259 - 1.11344*(t11722*t8352 - 1.*t11717*t8400) - 0.02159*(t11717*t8352 + t11722*t8400) + t11722*t8442 + t11717*t8538 + t11630*t9052 + t11636*t9065 + t8084*t9076;
  p_output1[53]=t11572*t11636 + t11630*t11749 + t11762*t7719 + t11754*t8084 + t11784*t8218 + t11772*t8259 - 1.11344*(t11799*t8352 - 1.*t11793*t8400) - 0.02159*(t11793*t8352 + t11799*t8400) + t11799*t8442 + t11793*t8538;
  p_output1[54]=t11639*t11819 + t11825*t11831 + t11842*t8218 + t11837*t8259 - 1.11344*(t11855*t8352 - 1.*t11847*t8400) - 0.02159*(t11847*t8352 + t11855*t8400) + t11855*t8442 + t11847*t8538;
  p_output1[55]=t11877*t8259 - 1.11344*(t11887*t8352 - 1.*t11882*t8400) - 0.02159*(t11882*t8352 + t11887*t8400) + t11887*t8442 + t11882*t8538 + t11819*t9076 + t11825*t9111 + t8218*t9227;
  p_output1[56]=t11754*t11819 + t11825*t11914 + t11930*t8218 + t11922*t8259 - 1.11344*(t11945*t8352 - 1.*t11938*t8400) - 0.02159*(t11938*t8352 + t11945*t8400) + t11945*t8442 + t11938*t8538;
  p_output1[57]=t11968*t11972 + t11842*t11975 - 1.11344*(t11987 + t11984*t8352) - 0.02159*(t11993 + t11984*t8400) + t11984*t8442 + t11978*t8538;
  p_output1[58]=-1.11344*(t12010 + t12008*t8352) + t12008*t8442 + t11968*t9172 + t11975*t9227 + t8538*t9243 - 0.02159*(t12008*t8400 + t9288);
  p_output1[59]=t11930*t11975 + t11968*t12027 - 1.11344*(t12041 + t12037*t8352) - 0.02159*(t12047 + t12037*t8400) + t12037*t8442 + t12031*t8538;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t11978*t12062 + t12075*t12082 - 1.11344*(t11987 - 1.*t12082*t8352) - 0.02159*(t11993 - 1.*t12082*t8400);
  p_output1[64]=t12062*t9243 + t12075*t9259 - 1.11344*(t12010 - 1.*t8352*t9259) - 0.02159*t9290;
  p_output1[65]=t12031*t12062 + t12075*t12116 - 1.11344*(t12041 - 1.*t12116*t8352) - 0.02159*(t12047 - 1.*t12116*t8400);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightToe_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




