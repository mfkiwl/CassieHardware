/*
 * Automatically Generated from Mathematica.
 * Tue 2 Feb 2021 13:46:15 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightPoint_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t136;
  double t594;
  double t788;
  double t658;
  double t844;
  double t354;
  double t359;
  double t364;
  double t377;
  double t160;
  double t209;
  double t858;
  double t901;
  double t933;
  double t949;
  double t724;
  double t845;
  double t852;
  double t1018;
  double t1024;
  double t1049;
  double t1078;
  double t1098;
  double t1122;
  double t1219;
  double t1238;
  double t1256;
  double t1283;
  double t1451;
  double t1456;
  double t1492;
  double t1521;
  double t1546;
  double t1558;
  double t1625;
  double t1728;
  double t1732;
  double t1740;
  double t1798;
  double t1802;
  double t1831;
  double t1837;
  double t1852;
  double t1855;
  double t1858;
  double t1872;
  double t1873;
  double t1880;
  double t1920;
  double t1925;
  double t1935;
  double t1939;
  double t1946;
  double t1948;
  double t1967;
  double t1985;
  double t1990;
  double t1991;
  double t2036;
  double t2045;
  double t2046;
  double t373;
  double t460;
  double t536;
  double t892;
  double t894;
  double t999;
  double t1001;
  double t1013;
  double t2192;
  double t2193;
  double t2197;
  double t1176;
  double t1225;
  double t1236;
  double t2159;
  double t2163;
  double t2175;
  double t2200;
  double t2204;
  double t2205;
  double t1424;
  double t1439;
  double t1444;
  double t1583;
  double t1673;
  double t1718;
  double t2243;
  double t2251;
  double t2258;
  double t2276;
  double t2282;
  double t2291;
  double t1785;
  double t1792;
  double t1794;
  double t1856;
  double t1865;
  double t1871;
  double t2317;
  double t2318;
  double t2327;
  double t2334;
  double t2340;
  double t2344;
  double t1900;
  double t1908;
  double t1917;
  double t1964;
  double t1971;
  double t1972;
  double t2348;
  double t2360;
  double t2369;
  double t2378;
  double t2402;
  double t2410;
  double t2011;
  double t2013;
  double t2024;
  double t2413;
  double t2424;
  double t2439;
  double t2480;
  double t2511;
  double t2524;
  double t2616;
  double t2631;
  double t2640;
  double t2605;
  double t2659;
  double t2663;
  double t2671;
  double t2672;
  double t2679;
  double t2680;
  double t2688;
  double t2690;
  double t2699;
  double t2703;
  double t2707;
  double t2669;
  double t2724;
  double t2726;
  double t2735;
  double t2736;
  double t2748;
  double t2730;
  double t2749;
  double t2776;
  double t2795;
  double t2811;
  double t2818;
  double t2780;
  double t2842;
  double t2844;
  double t2890;
  double t2894;
  double t2927;
  double t2959;
  double t2965;
  double t3046;
  double t3059;
  double t3064;
  double t3089;
  double t2561;
  double t2566;
  double t2577;
  double t3119;
  double t3129;
  double t3151;
  double t3176;
  double t2587;
  double t2588;
  double t2594;
  double t3241;
  double t3245;
  double t3280;
  double t3309;
  double t3380;
  double t3381;
  double t3392;
  double t3393;
  double t3453;
  double t3297;
  double t3459;
  double t3482;
  double t3505;
  double t3532;
  double t3544;
  double t3483;
  double t3545;
  double t3555;
  double t3563;
  double t3581;
  double t3612;
  double t3559;
  double t3621;
  double t3640;
  double t3652;
  double t3657;
  double t3666;
  double t3669;
  double t3685;
  double t3704;
  double t3714;
  double t3729;
  double t3746;
  double t3767;
  double t3771;
  double t3772;
  double t3774;
  double t3192;
  double t3201;
  double t3213;
  double t2107;
  double t2109;
  double t2126;
  double t3806;
  double t3824;
  double t3837;
  double t3838;
  double t3886;
  double t3898;
  double t3903;
  double t4008;
  double t4021;
  double t4026;
  double t4030;
  double t4034;
  double t4035;
  double t4059;
  double t4065;
  double t4066;
  double t4097;
  double t4098;
  double t4111;
  double t4115;
  double t4117;
  double t4118;
  double t4125;
  double t4129;
  double t4135;
  double t4150;
  double t4155;
  double t4163;
  double t4175;
  double t4177;
  double t4184;
  double t4198;
  double t4207;
  double t4209;
  double t4264;
  double t4274;
  double t4275;
  double t4278;
  double t4282;
  double t4283;
  double t4321;
  double t4322;
  double t4325;
  double t4329;
  double t4330;
  double t4334;
  double t4349;
  double t4358;
  double t4359;
  double t4379;
  double t4384;
  double t4394;
  double t4416;
  double t4422;
  double t4424;
  double t4441;
  double t4444;
  double t4449;
  double t4469;
  double t4473;
  double t4475;
  double t4545;
  double t4550;
  double t4551;
  double t4571;
  double t4575;
  double t4576;
  double t4621;
  double t4629;
  double t4634;
  double t4650;
  double t4651;
  double t4662;
  double t4678;
  double t4680;
  double t4683;
  double t4705;
  double t4712;
  double t4718;
  double t4720;
  double t4727;
  double t4728;
  double t4731;
  double t4732;
  double t4738;
  double t4746;
  double t4747;
  double t4749;
  double t3913;
  double t3917;
  double t3922;
  double t4786;
  double t4788;
  double t4794;
  double t4836;
  double t4837;
  double t4839;
  double t4840;
  double t4847;
  double t4851;
  double t4525;
  double t4527;
  double t4531;
  double t4238;
  double t4242;
  double t4243;
  double t4918;
  double t4920;
  double t4921;
  double t4932;
  double t4934;
  double t4939;
  double t4942;
  double t4945;
  double t4946;
  double t4953;
  double t4959;
  double t4960;
  double t4969;
  double t4974;
  double t4977;
  double t4994;
  double t4999;
  double t5001;
  double t5004;
  double t5005;
  double t5007;
  double t5063;
  double t5064;
  double t5065;
  double t5074;
  double t5075;
  double t5076;
  double t5091;
  double t5106;
  double t5109;
  double t5120;
  double t5123;
  double t5125;
  double t5129;
  double t5131;
  double t5134;
  double t5137;
  double t5141;
  double t5142;
  double t5150;
  double t5156;
  double t5165;
  double t5168;
  double t5169;
  double t5171;
  double t5215;
  double t5238;
  double t5239;
  double t5255;
  double t5257;
  double t5258;
  double t5268;
  double t5273;
  double t5275;
  double t5280;
  double t5281;
  double t5283;
  double t5296;
  double t5297;
  double t5316;
  double t5326;
  double t5328;
  double t5333;
  double t5339;
  double t5341;
  double t5350;
  double t5372;
  double t5373;
  double t5383;
  double t5390;
  double t5392;
  double t5394;
  double t5397;
  double t5398;
  double t5401;
  double t5194;
  double t5196;
  double t5197;
  double t5028;
  double t5038;
  double t5041;
  double t5483;
  double t5484;
  double t5491;
  double t5505;
  double t5511;
  double t5526;
  double t5539;
  double t5543;
  double t5545;
  double t5549;
  double t5552;
  double t5557;
  double t5561;
  double t5563;
  double t5582;
  double t5584;
  double t5589;
  double t5619;
  double t5630;
  double t5640;
  double t5672;
  double t5748;
  double t5755;
  double t5756;
  double t5791;
  double t5795;
  double t5799;
  double t5809;
  double t5813;
  double t5821;
  double t5823;
  double t5829;
  double t5838;
  double t5852;
  double t5856;
  double t5861;
  double t5867;
  double t5870;
  double t5875;
  double t5889;
  double t5896;
  double t5897;
  double t6047;
  double t6068;
  double t6131;
  double t6134;
  double t6136;
  double t6138;
  double t6139;
  double t6140;
  double t6144;
  double t6146;
  double t6149;
  double t6152;
  double t6155;
  double t6159;
  double t6167;
  double t6169;
  double t6170;
  double t6172;
  double t6173;
  double t6174;
  double t6181;
  double t6182;
  double t6183;
  double t6186;
  double t6187;
  double t6188;
  double t5908;
  double t5911;
  double t5940;
  double t5708;
  double t5719;
  double t5726;
  double t6240;
  double t6241;
  double t6242;
  double t6251;
  double t6252;
  double t6253;
  double t6255;
  double t6256;
  double t6258;
  double t6260;
  double t6261;
  double t6262;
  double t6283;
  double t6287;
  double t6291;
  double t6209;
  double t6210;
  double t6212;
  double t6216;
  double t6222;
  double t2266;
  double t2268;
  double t2269;
  double t6409;
  double t6412;
  double t6415;
  double t6430;
  double t6432;
  double t6433;
  double t6439;
  double t6441;
  double t6444;
  double t6465;
  double t6523;
  double t6527;
  double t6608;
  double t6609;
  double t6611;
  double t6626;
  double t6627;
  double t6630;
  double t6632;
  double t6648;
  double t6652;
  double t6698;
  double t6703;
  double t6710;
  double t6724;
  double t6726;
  double t6728;
  double t6790;
  double t6795;
  double t6883;
  double t6938;
  double t6945;
  double t6952;
  double t6324;
  double t6327;
  double t6329;
  double t6572;
  double t6580;
  double t6581;
  double t7197;
  double t7201;
  double t7202;
  double t7205;
  double t7208;
  double t7212;
  double t7213;
  double t7219;
  double t7223;
  double t7224;
  double t7225;
  double t7227;
  double t7230;
  double t7231;
  double t7147;
  double t7159;
  double t7170;
  double t7185;
  double t7188;
  double t7254;
  double t7257;
  double t7258;
  double t7273;
  double t7279;
  double t7292;
  double t7303;
  double t7304;
  double t7339;
  double t7356;
  double t7386;
  double t7427;
  double t7437;
  double t7440;
  double t7493;
  double t7494;
  double t7495;
  double t7499;
  double t7500;
  double t7502;
  double t7504;
  double t7505;
  double t7507;
  double t7508;
  double t7509;
  double t7511;
  double t7512;
  double t7513;
  double t7552;
  double t7555;
  double t7559;
  double t7453;
  double t7470;
  double t7477;
  double t7233;
  double t7234;
  double t7235;
  double t7702;
  double t7704;
  double t7707;
  double t7708;
  double t7710;
  double t7719;
  double t7725;
  double t7650;
  double t7651;
  double t7652;
  double t7665;
  double t7688;
  double t7918;
  double t7929;
  double t7970;
  double t7977;
  double t7982;
  double t8024;
  double t8031;
  double t8120;
  double t8140;
  double t8201;
  double t8249;
  double t8270;
  double t8322;
  double t8323;
  double t8325;
  double t8326;
  double t8327;
  double t8034;
  double t8036;
  double t8039;
  double t7734;
  double t7767;
  double t7768;
  double t8399;
  double t8402;
  double t8381;
  double t8382;
  double t8385;
  double t8390;
  double t8395;
  double t8502;
  double t8508;
  double t2536;
  double t8591;
  double t8594;
  double t8597;
  double t8598;
  double t8599;
  double t8525;
  double t8527;
  double t8409;
  double t8410;
  double t8411;
  double t8418;
  double t8869;
  double t8871;
  double t8872;
  double t8880;
  double t8891;
  double t2533;
  double t2540;
  double t8535;
  double t8631;
  double t8963;
  double t8964;
  double t8902;
  double t8903;
  t136 = Cos(var1[3]);
  t594 = Cos(var1[5]);
  t788 = Sin(var1[3]);
  t658 = Sin(var1[4]);
  t844 = Sin(var1[5]);
  t354 = Cos(var1[15]);
  t359 = -1.*t354;
  t364 = 1. + t359;
  t377 = Sin(var1[15]);
  t160 = Cos(var1[4]);
  t209 = Sin(var1[14]);
  t858 = Cos(var1[14]);
  t901 = -1.*t594*t788;
  t933 = -1.*t136*t658*t844;
  t949 = t901 + t933;
  t724 = t136*t594*t658;
  t845 = -1.*t788*t844;
  t852 = t724 + t845;
  t1018 = -1.*t136*t160*t209;
  t1024 = t858*t949;
  t1049 = t1018 + t1024;
  t1078 = Cos(var1[16]);
  t1098 = -1.*t1078;
  t1122 = 1. + t1098;
  t1219 = Sin(var1[16]);
  t1238 = -1.*t858*t136*t160;
  t1256 = -1.*t209*t949;
  t1283 = t1238 + t1256;
  t1451 = t354*t852;
  t1456 = t377*t1049;
  t1492 = t1451 + t1456;
  t1521 = Cos(var1[17]);
  t1546 = -1.*t1521;
  t1558 = 1. + t1546;
  t1625 = Sin(var1[17]);
  t1728 = t1219*t1283;
  t1732 = t1078*t1492;
  t1740 = t1728 + t1732;
  t1798 = t1078*t1283;
  t1802 = -1.*t1219*t1492;
  t1831 = t1798 + t1802;
  t1837 = Cos(var1[18]);
  t1852 = -1.*t1837;
  t1855 = 1. + t1852;
  t1858 = Sin(var1[18]);
  t1872 = -1.*t1625*t1740;
  t1873 = t1521*t1831;
  t1880 = t1872 + t1873;
  t1920 = t1521*t1740;
  t1925 = t1625*t1831;
  t1935 = t1920 + t1925;
  t1939 = Cos(var1[19]);
  t1946 = -1.*t1939;
  t1948 = 1. + t1946;
  t1967 = Sin(var1[19]);
  t1985 = t1858*t1880;
  t1990 = t1837*t1935;
  t1991 = t1985 + t1990;
  t2036 = t1837*t1880;
  t2045 = -1.*t1858*t1935;
  t2046 = t2036 + t2045;
  t373 = -0.049*t364;
  t460 = -0.135*t377;
  t536 = t373 + t460;
  t892 = -1.*t858;
  t894 = 1. + t892;
  t999 = -0.135*t364;
  t1001 = 0.049*t377;
  t1013 = t999 + t1001;
  t2192 = t136*t594;
  t2193 = -1.*t788*t658*t844;
  t2197 = t2192 + t2193;
  t1176 = -0.09*t1122;
  t1225 = 0.049*t1219;
  t1236 = t1176 + t1225;
  t2159 = t594*t788*t658;
  t2163 = t136*t844;
  t2175 = t2159 + t2163;
  t2200 = -1.*t160*t209*t788;
  t2204 = t858*t2197;
  t2205 = t2200 + t2204;
  t1424 = -0.049*t1122;
  t1439 = -0.09*t1219;
  t1444 = t1424 + t1439;
  t1583 = -0.049*t1558;
  t1673 = -0.21*t1625;
  t1718 = t1583 + t1673;
  t2243 = -1.*t858*t160*t788;
  t2251 = -1.*t209*t2197;
  t2258 = t2243 + t2251;
  t2276 = t354*t2175;
  t2282 = t377*t2205;
  t2291 = t2276 + t2282;
  t1785 = -0.21*t1558;
  t1792 = 0.049*t1625;
  t1794 = t1785 + t1792;
  t1856 = -0.27068*t1855;
  t1865 = 0.00159*t1858;
  t1871 = t1856 + t1865;
  t2317 = t1219*t2258;
  t2318 = t1078*t2291;
  t2327 = t2317 + t2318;
  t2334 = t1078*t2258;
  t2340 = -1.*t1219*t2291;
  t2344 = t2334 + t2340;
  t1900 = -0.00159*t1855;
  t1908 = -0.27068*t1858;
  t1917 = t1900 + t1908;
  t1964 = 0.01841*t1948;
  t1971 = -0.70544*t1967;
  t1972 = t1964 + t1971;
  t2348 = -1.*t1625*t2327;
  t2360 = t1521*t2344;
  t2369 = t2348 + t2360;
  t2378 = t1521*t2327;
  t2402 = t1625*t2344;
  t2410 = t2378 + t2402;
  t2011 = -0.70544*t1948;
  t2013 = -0.01841*t1967;
  t2024 = t2011 + t2013;
  t2413 = t1858*t2369;
  t2424 = t1837*t2410;
  t2439 = t2413 + t2424;
  t2480 = t1837*t2369;
  t2511 = -1.*t1858*t2410;
  t2524 = t2480 + t2511;
  t2616 = t594*t788;
  t2631 = t136*t658*t844;
  t2640 = t2616 + t2631;
  t2605 = t858*t136*t160;
  t2659 = -1.*t209*t2640;
  t2663 = t2605 + t2659;
  t2671 = -1.*t136*t594*t658;
  t2672 = t788*t844;
  t2679 = t2671 + t2672;
  t2680 = t354*t2679;
  t2688 = t136*t160*t209;
  t2690 = t858*t2640;
  t2699 = t2688 + t2690;
  t2703 = t377*t2699;
  t2707 = t2680 + t2703;
  t2669 = t1219*t2663;
  t2724 = t1078*t2707;
  t2726 = t2669 + t2724;
  t2735 = t1078*t2663;
  t2736 = -1.*t1219*t2707;
  t2748 = t2735 + t2736;
  t2730 = -1.*t1625*t2726;
  t2749 = t1521*t2748;
  t2776 = t2730 + t2749;
  t2795 = t1521*t2726;
  t2811 = t1625*t2748;
  t2818 = t2795 + t2811;
  t2780 = t1858*t2776;
  t2842 = t1837*t2818;
  t2844 = t2780 + t2842;
  t2890 = t1939*t2844;
  t2894 = t1837*t2776;
  t2927 = -1.*t1858*t2818;
  t2959 = t2894 + t2927;
  t2965 = t1967*t2959;
  t3046 = t2890 + t2965;
  t3059 = t377*t2679;
  t3064 = -1.*t354*t2699;
  t3089 = t3059 + t3064;
  t2561 = t1939*t2439;
  t2566 = t1967*t2524;
  t2577 = t2561 + t2566;
  t3119 = Power(t3089,2);
  t3129 = Power(t3046,2);
  t3151 = t3119 + t3129;
  t3176 = 1/Sqrt(t3151);
  t2587 = t377*t2175;
  t2588 = -1.*t354*t2205;
  t2594 = t2587 + t2588;
  t3241 = t858*t658;
  t3245 = t160*t209*t844;
  t3280 = t3241 + t3245;
  t3309 = t354*t160*t594;
  t3380 = t209*t658;
  t3381 = -1.*t858*t160*t844;
  t3392 = t3380 + t3381;
  t3393 = t377*t3392;
  t3453 = t3309 + t3393;
  t3297 = t1219*t3280;
  t3459 = t1078*t3453;
  t3482 = t3297 + t3459;
  t3505 = t1078*t3280;
  t3532 = -1.*t1219*t3453;
  t3544 = t3505 + t3532;
  t3483 = -1.*t1625*t3482;
  t3545 = t1521*t3544;
  t3555 = t3483 + t3545;
  t3563 = t1521*t3482;
  t3581 = t1625*t3544;
  t3612 = t3563 + t3581;
  t3559 = t1858*t3555;
  t3621 = t1837*t3612;
  t3640 = t3559 + t3621;
  t3652 = t1939*t3640;
  t3657 = t1837*t3555;
  t3666 = -1.*t1858*t3612;
  t3669 = t3657 + t3666;
  t3685 = t1967*t3669;
  t3704 = t3652 + t3685;
  t3714 = t160*t594*t377;
  t3729 = -1.*t354*t3392;
  t3746 = t3714 + t3729;
  t3767 = Power(t3151,-1.5);
  t3771 = 2.*t3089*t2594;
  t3772 = 2.*t3046*t2577;
  t3774 = t3771 + t3772;
  t3192 = -1.*t2594*t3046*t3176;
  t3201 = t3089*t2577*t3176;
  t3213 = t3192 + t3201;
  t2107 = t1939*t1991;
  t2109 = t1967*t2046;
  t2126 = t2107 + t2109;
  t3806 = -1.*t3089*t3704*t3176;
  t3824 = t3746*t3046*t3176;
  t3837 = t3806 + t3824;
  t3838 = Power(t3837,2);
  t3886 = Power(t3213,2);
  t3898 = t3838 + t3886;
  t3903 = 1/t3898;
  t4008 = t160*t209;
  t4021 = t858*t658*t844;
  t4026 = t4008 + t4021;
  t4030 = t858*t160;
  t4034 = -1.*t209*t658*t844;
  t4035 = t4030 + t4034;
  t4059 = -1.*t354*t594*t658;
  t4065 = t377*t4026;
  t4066 = t4059 + t4065;
  t4097 = t1219*t4035;
  t4098 = t1078*t4066;
  t4111 = t4097 + t4098;
  t4115 = t1078*t4035;
  t4117 = -1.*t1219*t4066;
  t4118 = t4115 + t4117;
  t4125 = -1.*t1625*t4111;
  t4129 = t1521*t4118;
  t4135 = t4125 + t4129;
  t4150 = t1521*t4111;
  t4155 = t1625*t4118;
  t4163 = t4150 + t4155;
  t4175 = t1858*t4135;
  t4177 = t1837*t4163;
  t4184 = t4175 + t4177;
  t4198 = t1837*t4135;
  t4207 = -1.*t1858*t4163;
  t4209 = t4198 + t4207;
  t4264 = t209*t788*t658;
  t4274 = -1.*t858*t160*t788*t844;
  t4275 = t4264 + t4274;
  t4278 = t858*t788*t658;
  t4282 = t160*t209*t788*t844;
  t4283 = t4278 + t4282;
  t4321 = t354*t160*t594*t788;
  t4322 = t377*t4275;
  t4325 = t4321 + t4322;
  t4329 = t1219*t4283;
  t4330 = t1078*t4325;
  t4334 = t4329 + t4330;
  t4349 = t1078*t4283;
  t4358 = -1.*t1219*t4325;
  t4359 = t4349 + t4358;
  t4379 = -1.*t1625*t4334;
  t4384 = t1521*t4359;
  t4394 = t4379 + t4384;
  t4416 = t1521*t4334;
  t4422 = t1625*t4359;
  t4424 = t4416 + t4422;
  t4441 = t1858*t4394;
  t4444 = t1837*t4424;
  t4449 = t4441 + t4444;
  t4469 = t1837*t4394;
  t4473 = -1.*t1858*t4424;
  t4475 = t4469 + t4473;
  t4545 = -1.*t136*t209*t658;
  t4550 = t858*t136*t160*t844;
  t4551 = t4545 + t4550;
  t4571 = -1.*t858*t136*t658;
  t4575 = -1.*t136*t160*t209*t844;
  t4576 = t4571 + t4575;
  t4621 = -1.*t354*t136*t160*t594;
  t4629 = t377*t4551;
  t4634 = t4621 + t4629;
  t4650 = t1219*t4576;
  t4651 = t1078*t4634;
  t4662 = t4650 + t4651;
  t4678 = t1078*t4576;
  t4680 = -1.*t1219*t4634;
  t4683 = t4678 + t4680;
  t4705 = -1.*t1625*t4662;
  t4712 = t1521*t4683;
  t4718 = t4705 + t4712;
  t4720 = t1521*t4662;
  t4727 = t1625*t4683;
  t4728 = t4720 + t4727;
  t4731 = t1858*t4718;
  t4732 = t1837*t4728;
  t4738 = t4731 + t4732;
  t4746 = t1837*t4718;
  t4747 = -1.*t1858*t4728;
  t4749 = t4746 + t4747;
  t3913 = t3089*t3704*t3176;
  t3917 = -1.*t3746*t3046*t3176;
  t3922 = t3913 + t3917;
  t4786 = t1939*t4738;
  t4788 = t1967*t4749;
  t4794 = t4786 + t4788;
  t4836 = -1.*t136*t160*t594*t377;
  t4837 = -1.*t354*t4551;
  t4839 = t4836 + t4837;
  t4840 = 2.*t4839*t3089;
  t4847 = 2.*t4794*t3046;
  t4851 = t4840 + t4847;
  t4525 = t1939*t4449;
  t4527 = t1967*t4475;
  t4531 = t4525 + t4527;
  t4238 = t1939*t4184;
  t4242 = t1967*t4209;
  t4243 = t4238 + t4242;
  t4918 = -1.*t858*t160*t594*t377;
  t4920 = -1.*t354*t160*t844;
  t4921 = t4918 + t4920;
  t4932 = t160*t594*t209*t1219;
  t4934 = t1078*t4921;
  t4939 = t4932 + t4934;
  t4942 = t1078*t160*t594*t209;
  t4945 = -1.*t1219*t4921;
  t4946 = t4942 + t4945;
  t4953 = -1.*t1625*t4939;
  t4959 = t1521*t4946;
  t4960 = t4953 + t4959;
  t4969 = t1521*t4939;
  t4974 = t1625*t4946;
  t4977 = t4969 + t4974;
  t4994 = t1858*t4960;
  t4999 = t1837*t4977;
  t5001 = t4994 + t4999;
  t5004 = t1837*t4960;
  t5005 = -1.*t1858*t4977;
  t5007 = t5004 + t5005;
  t5063 = -1.*t594*t788*t658;
  t5064 = -1.*t136*t844;
  t5065 = t5063 + t5064;
  t5074 = t858*t377*t5065;
  t5075 = t354*t2197;
  t5076 = t5074 + t5075;
  t5091 = -1.*t209*t1219*t5065;
  t5106 = t1078*t5076;
  t5109 = t5091 + t5106;
  t5120 = -1.*t1078*t209*t5065;
  t5123 = -1.*t1219*t5076;
  t5125 = t5120 + t5123;
  t5129 = -1.*t1625*t5109;
  t5131 = t1521*t5125;
  t5134 = t5129 + t5131;
  t5137 = t1521*t5109;
  t5141 = t1625*t5125;
  t5142 = t5137 + t5141;
  t5150 = t1858*t5134;
  t5156 = t1837*t5142;
  t5165 = t5150 + t5156;
  t5168 = t1837*t5134;
  t5169 = -1.*t1858*t5142;
  t5171 = t5168 + t5169;
  t5215 = t858*t377*t852;
  t5238 = t354*t2640;
  t5239 = t5215 + t5238;
  t5255 = -1.*t209*t1219*t852;
  t5257 = t1078*t5239;
  t5258 = t5255 + t5257;
  t5268 = -1.*t1078*t209*t852;
  t5273 = -1.*t1219*t5239;
  t5275 = t5268 + t5273;
  t5280 = -1.*t1625*t5258;
  t5281 = t1521*t5275;
  t5283 = t5280 + t5281;
  t5296 = t1521*t5258;
  t5297 = t1625*t5275;
  t5316 = t5296 + t5297;
  t5326 = t1858*t5283;
  t5328 = t1837*t5316;
  t5333 = t5326 + t5328;
  t5339 = t1837*t5283;
  t5341 = -1.*t1858*t5316;
  t5350 = t5339 + t5341;
  t5372 = t1939*t5333;
  t5373 = t1967*t5350;
  t5383 = t5372 + t5373;
  t5390 = -1.*t858*t354*t852;
  t5392 = t377*t2640;
  t5394 = t5390 + t5392;
  t5397 = 2.*t5394*t3089;
  t5398 = 2.*t5383*t3046;
  t5401 = t5397 + t5398;
  t5194 = t1939*t5165;
  t5196 = t1967*t5171;
  t5197 = t5194 + t5196;
  t5028 = t1939*t5001;
  t5038 = t1967*t5007;
  t5041 = t5028 + t5038;
  t5483 = -1.*t209*t658;
  t5484 = t858*t160*t844;
  t5491 = t5483 + t5484;
  t5505 = t1219*t5491;
  t5511 = t1078*t377*t3280;
  t5526 = t5505 + t5511;
  t5539 = t1078*t5491;
  t5543 = -1.*t377*t1219*t3280;
  t5545 = t5539 + t5543;
  t5549 = -1.*t1625*t5526;
  t5552 = t1521*t5545;
  t5557 = t5549 + t5552;
  t5561 = t1521*t5526;
  t5563 = t1625*t5545;
  t5582 = t5561 + t5563;
  t5584 = t1858*t5557;
  t5589 = t1837*t5582;
  t5619 = t5584 + t5589;
  t5630 = t1837*t5557;
  t5640 = -1.*t1858*t5582;
  t5672 = t5630 + t5640;
  t5748 = t160*t209*t788;
  t5755 = -1.*t858*t2197;
  t5756 = t5748 + t5755;
  t5791 = t1219*t5756;
  t5795 = t1078*t377*t2258;
  t5799 = t5791 + t5795;
  t5809 = t1078*t5756;
  t5813 = -1.*t377*t1219*t2258;
  t5821 = t5809 + t5813;
  t5823 = -1.*t1625*t5799;
  t5829 = t1521*t5821;
  t5838 = t5823 + t5829;
  t5852 = t1521*t5799;
  t5856 = t1625*t5821;
  t5861 = t5852 + t5856;
  t5867 = t1858*t5838;
  t5870 = t1837*t5861;
  t5875 = t5867 + t5870;
  t5889 = t1837*t5838;
  t5896 = -1.*t1858*t5861;
  t5897 = t5889 + t5896;
  t6047 = -1.*t858*t2640;
  t6068 = t1018 + t6047;
  t6131 = t1219*t6068;
  t6134 = t1078*t377*t2663;
  t6136 = t6131 + t6134;
  t6138 = t1078*t6068;
  t6139 = -1.*t377*t1219*t2663;
  t6140 = t6138 + t6139;
  t6144 = -1.*t1625*t6136;
  t6146 = t1521*t6140;
  t6149 = t6144 + t6146;
  t6152 = t1521*t6136;
  t6155 = t1625*t6140;
  t6159 = t6152 + t6155;
  t6167 = t1858*t6149;
  t6169 = t1837*t6159;
  t6170 = t6167 + t6169;
  t6172 = t1837*t6149;
  t6173 = -1.*t1858*t6159;
  t6174 = t6172 + t6173;
  t6181 = t1939*t6170;
  t6182 = t1967*t6174;
  t6183 = t6181 + t6182;
  t6186 = -2.*t354*t2663*t3089;
  t6187 = 2.*t6183*t3046;
  t6188 = t6186 + t6187;
  t5908 = t1939*t5875;
  t5911 = t1967*t5897;
  t5940 = t5908 + t5911;
  t5708 = t1939*t5619;
  t5719 = t1967*t5672;
  t5726 = t5708 + t5719;
  t6240 = -1.*t160*t594*t377;
  t6241 = t354*t3392;
  t6242 = t6240 + t6241;
  t6251 = -1.*t1521*t1219*t6242;
  t6252 = -1.*t1078*t1625*t6242;
  t6253 = t6251 + t6252;
  t6255 = t1078*t1521*t6242;
  t6256 = -1.*t1219*t1625*t6242;
  t6258 = t6255 + t6256;
  t6260 = t1858*t6253;
  t6261 = t1837*t6258;
  t6262 = t6260 + t6261;
  t6283 = t1837*t6253;
  t6287 = -1.*t1858*t6258;
  t6291 = t6283 + t6287;
  t6209 = -0.135*t354;
  t6210 = -0.049*t377;
  t6212 = t6209 + t6210;
  t6216 = 0.049*t354;
  t6222 = t6216 + t460;
  t2266 = -1.*t377*t2175;
  t2268 = t354*t2205;
  t2269 = t2266 + t2268;
  t6409 = -1.*t1521*t1219*t2269;
  t6412 = -1.*t1078*t1625*t2269;
  t6415 = t6409 + t6412;
  t6430 = t1078*t1521*t2269;
  t6432 = -1.*t1219*t1625*t2269;
  t6433 = t6430 + t6432;
  t6439 = t1858*t6415;
  t6441 = t1837*t6433;
  t6444 = t6439 + t6441;
  t6465 = t1837*t6415;
  t6523 = -1.*t1858*t6433;
  t6527 = t6465 + t6523;
  t6608 = -1.*t377*t2679;
  t6609 = t354*t2699;
  t6611 = t6608 + t6609;
  t6626 = -1.*t1521*t1219*t6611;
  t6627 = -1.*t1078*t1625*t6611;
  t6630 = t6626 + t6627;
  t6632 = t1078*t1521*t6611;
  t6648 = -1.*t1219*t1625*t6611;
  t6652 = t6632 + t6648;
  t6698 = t1858*t6630;
  t6703 = t1837*t6652;
  t6710 = t6698 + t6703;
  t6724 = t1837*t6630;
  t6726 = -1.*t1858*t6652;
  t6728 = t6724 + t6726;
  t6790 = t1939*t6710;
  t6795 = t1967*t6728;
  t6883 = t6790 + t6795;
  t6938 = 2.*t3089*t2707;
  t6945 = 2.*t6883*t3046;
  t6952 = t6938 + t6945;
  t6324 = t1939*t6262;
  t6327 = t1967*t6291;
  t6329 = t6324 + t6327;
  t6572 = t1939*t6444;
  t6580 = t1967*t6527;
  t6581 = t6572 + t6580;
  t7197 = -1.*t1219*t3280;
  t7201 = -1.*t1078*t3453;
  t7202 = t7197 + t7201;
  t7205 = t1625*t7202;
  t7208 = t7205 + t3545;
  t7212 = t1521*t7202;
  t7213 = -1.*t1625*t3544;
  t7219 = t7212 + t7213;
  t7223 = -1.*t1858*t7208;
  t7224 = t1837*t7219;
  t7225 = t7223 + t7224;
  t7227 = t1837*t7208;
  t7230 = t1858*t7219;
  t7231 = t7227 + t7230;
  t7147 = 0.049*t1078;
  t7159 = t7147 + t1439;
  t7170 = -0.09*t1078;
  t7185 = -0.049*t1219;
  t7188 = t7170 + t7185;
  t7254 = -1.*t1219*t2258;
  t7257 = -1.*t1078*t2291;
  t7258 = t7254 + t7257;
  t7273 = t1625*t7258;
  t7279 = t7273 + t2360;
  t7292 = t1521*t7258;
  t7303 = -1.*t1625*t2344;
  t7304 = t7292 + t7303;
  t7339 = -1.*t1858*t7279;
  t7356 = t1837*t7304;
  t7386 = t7339 + t7356;
  t7427 = t1837*t7279;
  t7437 = t1858*t7304;
  t7440 = t7427 + t7437;
  t7493 = -1.*t1219*t2663;
  t7494 = -1.*t1078*t2707;
  t7495 = t7493 + t7494;
  t7499 = t1625*t7495;
  t7500 = t7499 + t2749;
  t7502 = t1521*t7495;
  t7504 = -1.*t1625*t2748;
  t7505 = t7502 + t7504;
  t7507 = -1.*t1858*t7500;
  t7508 = t1837*t7505;
  t7509 = t7507 + t7508;
  t7511 = t1837*t7500;
  t7512 = t1858*t7505;
  t7513 = t7511 + t7512;
  t7552 = t1967*t7509;
  t7555 = t1939*t7513;
  t7559 = t7552 + t7555;
  t7453 = t1967*t7386;
  t7470 = t1939*t7440;
  t7477 = t7453 + t7470;
  t7233 = t1967*t7225;
  t7234 = t1939*t7231;
  t7235 = t7233 + t7234;
  t7702 = -1.*t1521*t3482;
  t7704 = t7702 + t7213;
  t7707 = -1.*t1858*t3555;
  t7708 = t1837*t7704;
  t7710 = t7707 + t7708;
  t7719 = t1858*t7704;
  t7725 = t3657 + t7719;
  t7650 = -0.21*t1521;
  t7651 = -0.049*t1625;
  t7652 = t7650 + t7651;
  t7665 = 0.049*t1521;
  t7688 = t7665 + t1673;
  t7918 = -1.*t1521*t2327;
  t7929 = t7918 + t7303;
  t7970 = -1.*t1858*t2369;
  t7977 = t1837*t7929;
  t7982 = t7970 + t7977;
  t8024 = t1858*t7929;
  t8031 = t2480 + t8024;
  t8120 = -1.*t1521*t2726;
  t8140 = t8120 + t7504;
  t8201 = -1.*t1858*t2776;
  t8249 = t1837*t8140;
  t8270 = t8201 + t8249;
  t8322 = t1858*t8140;
  t8323 = t2894 + t8322;
  t8325 = t1967*t8270;
  t8326 = t1939*t8323;
  t8327 = t8325 + t8326;
  t8034 = t1967*t7982;
  t8036 = t1939*t8031;
  t8039 = t8034 + t8036;
  t7734 = t1967*t7710;
  t7767 = t1939*t7725;
  t7768 = t7734 + t7767;
  t8399 = -1.*t1837*t3612;
  t8402 = t7707 + t8399;
  t8381 = 0.00159*t1837;
  t8382 = t8381 + t1908;
  t8385 = -0.27068*t1837;
  t8390 = -0.00159*t1858;
  t8395 = t8385 + t8390;
  t8502 = -1.*t1837*t2410;
  t8508 = t7970 + t8502;
  t2536 = t1939*t2524;
  t8591 = -1.*t1837*t2818;
  t8594 = t8201 + t8591;
  t8597 = t1967*t8594;
  t8598 = t1939*t2959;
  t8599 = t8597 + t8598;
  t8525 = t1967*t8508;
  t8527 = t8525 + t2536;
  t8409 = t1967*t8402;
  t8410 = t1939*t3669;
  t8411 = t8409 + t8410;
  t8418 = -1.*t1967*t3669;
  t8869 = -0.70544*t1939;
  t8871 = 0.01841*t1967;
  t8872 = t8869 + t8871;
  t8880 = -0.01841*t1939;
  t8891 = t8880 + t1971;
  t2533 = -1.*t1967*t2439;
  t2540 = t2533 + t2536;
  t8535 = -1.*t1967*t2524;
  t8631 = -1.*t1967*t2959;
  t8963 = -1.*t1967*t2844;
  t8964 = t8963 + t8598;
  t8902 = -1.*t1967*t3640;
  t8903 = t8902 + t8410;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=1.;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=t1013*t1049 + t1236*t1283 + t1444*t1492 + t1718*t1740 + t1794*t1831 + t1871*t1880 + t1917*t1935 + t1972*t1991 + t2024*t2046 - 1.11344*(-1.*t1967*t1991 + t1939*t2046) - 0.135*t136*t160*t209 - 0.02159*t2126 + t536*t852 - 0.1305*(t1049*t354 - 1.*t377*t852) - 0.135*t894*t949;
  p_output1[14]=t1013*t2205 + t1236*t2258 - 0.1305*t2269 + t1444*t2291 + t1718*t2327 + t1794*t2344 + t1871*t2369 + t1917*t2410 + t1972*t2439 + t2024*t2524 - 1.11344*t2540 - 0.02159*t2577 + t2175*t536 - 0.135*t160*t209*t788 - 0.135*t2197*t894;
  p_output1[15]=t3213*(-1.*t2594*t3176*t3704 + t2577*t3176*t3746 + 0.5*t3089*t3704*t3767*t3774 - 0.5*t3046*t3746*t3767*t3774)*t3903 + t3903*t3922*(t2126*t3089*t3176 + 0.5*t2594*t3046*t3767*t3774 - 0.5*t2577*t3089*t3767*t3774 - 1.*t3046*t3176*(-1.*t1049*t354 + t377*t852));
  p_output1[16]=0.135*t160*t209 + t1013*t4026 + t1236*t4035 + t1444*t4066 + t1718*t4111 + t1794*t4118 + t1871*t4135 + t1917*t4163 + t1972*t4184 + t2024*t4209 - 1.11344*(-1.*t1967*t4184 + t1939*t4209) - 0.02159*t4243 - 1.*t536*t594*t658 - 0.1305*(t354*t4026 + t377*t594*t658) - 0.135*t658*t844*t894;
  p_output1[17]=t1013*t4275 + t1236*t4283 + t1444*t4325 + t1718*t4334 + t1794*t4359 + t1871*t4394 + t1917*t4424 + t1972*t4449 + t2024*t4475 - 1.11344*(-1.*t1967*t4449 + t1939*t4475) - 0.02159*t4531 + t160*t536*t594*t788 + 0.135*t209*t658*t788 - 0.1305*(t354*t4275 - 1.*t160*t377*t594*t788) + 0.135*t160*t788*t844*t894;
  p_output1[18]=t1013*t4551 + t1236*t4576 + t1444*t4634 + t1718*t4662 + t1794*t4683 + t1871*t4718 + t1917*t4728 + t1972*t4738 + t2024*t4749 - 1.11344*(-1.*t1967*t4738 + t1939*t4749) - 0.02159*t4794 - 1.*t136*t160*t536*t594 - 0.1305*(t354*t4551 + t136*t160*t377*t594) - 0.135*t136*t209*t658 - 0.135*t136*t160*t844*t894;
  p_output1[19]=t3213*t3903*(-1.*t3089*t3176*t4243 + t3176*t3746*t4794 - 1.*t3176*t3704*t4839 + 0.5*t3089*t3704*t3767*t4851 - 0.5*t3046*t3746*t3767*t4851 + t3046*t3176*(-1.*t354*t4026 - 1.*t377*t594*t658)) + t3903*t3922*(t3089*t3176*t4531 - 1.*t2594*t3176*t4794 + t2577*t3176*t4839 + 0.5*t2594*t3046*t3767*t4851 - 0.5*t2577*t3089*t3767*t4851 - 1.*t3046*t3176*(-1.*t354*t4275 + t160*t377*t594*t788));
  p_output1[20]=t1444*t4921 + t1718*t4939 + t1794*t4946 + t1871*t4960 + t1917*t4977 + t1972*t5001 + t2024*t5007 - 1.11344*(-1.*t1967*t5001 + t1939*t5007) - 0.02159*t5041 + t1236*t160*t209*t594 - 1.*t160*t536*t844 - 1.*t1013*t160*t594*t858 - 0.1305*(t160*t377*t844 - 1.*t160*t354*t594*t858) + 0.135*t160*t594*t894;
  p_output1[21]=-1.*t1236*t209*t5065 + t1444*t5076 + t1718*t5109 + t1794*t5125 + t1871*t5134 + t1917*t5142 + t1972*t5165 + t2024*t5171 - 1.11344*(-1.*t1967*t5165 + t1939*t5171) - 0.02159*t5197 + t2197*t536 + t1013*t5065*t858 - 0.1305*(-1.*t2197*t377 + t354*t5065*t858) - 0.135*t5065*t894;
  p_output1[22]=t1444*t5239 + t1718*t5258 + t1794*t5275 + t1871*t5283 + t1917*t5316 + t1972*t5333 + t2024*t5350 - 1.11344*(-1.*t1967*t5333 + t1939*t5350) + t2640*t536 - 0.02159*t5383 - 1.*t1236*t209*t852 + t1013*t852*t858 - 0.1305*(-1.*t2640*t377 + t354*t852*t858) - 0.135*t852*t894;
  p_output1[23]=t3903*t3922*(t3089*t3176*t5197 - 1.*t2594*t3176*t5383 + t2577*t3176*t5394 + 0.5*t2594*t3046*t3767*t5401 - 0.5*t2577*t3089*t3767*t5401 - 1.*t3046*t3176*(t2197*t377 - 1.*t354*t5065*t858)) + t3213*t3903*(-1.*t3089*t3176*t5041 + t3176*t3746*t5383 - 1.*t3176*t3704*t5394 + 0.5*t3089*t3704*t3767*t5401 - 0.5*t3046*t3746*t3767*t5401 + t3046*t3176*(-1.*t160*t377*t844 + t160*t354*t594*t858));
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=t1013*t3280 - 0.1305*t3280*t354 + t1444*t3280*t377 + t1236*t5491 + t1718*t5526 + t1794*t5545 + t1871*t5557 + t1917*t5582 + t1972*t5619 + t2024*t5672 - 1.11344*(-1.*t1967*t5619 + t1939*t5672) - 0.02159*t5726 + 0.135*t160*t209*t844 + 0.135*t658*t858;
  p_output1[57]=-0.135*t209*t2197 + t1013*t2258 - 0.1305*t2258*t354 + t1444*t2258*t377 + t1236*t5756 + t1718*t5799 + t1794*t5821 + t1871*t5838 + t1917*t5861 + t1972*t5875 + t2024*t5897 - 1.11344*(-1.*t1967*t5875 + t1939*t5897) - 0.02159*t5940 - 0.135*t160*t788*t858;
  p_output1[58]=-0.135*t209*t2640 + t1013*t2663 - 0.1305*t2663*t354 + t1444*t2663*t377 + t1236*t6068 + t1718*t6136 + t1794*t6140 + t1871*t6149 + t1917*t6159 + t1972*t6170 + t2024*t6174 - 1.11344*(-1.*t1967*t6170 + t1939*t6174) - 0.02159*t6183 + 0.135*t136*t160*t858;
  p_output1[59]=t3903*t3922*(-1.*t2577*t2663*t3176*t354 + t2258*t3046*t3176*t354 + t3089*t3176*t5940 - 1.*t2594*t3176*t6183 + 0.5*t2594*t3046*t3767*t6188 - 0.5*t2577*t3089*t3767*t6188) + t3213*t3903*(-1.*t3046*t3176*t3280*t354 + t2663*t3176*t354*t3704 - 1.*t3089*t3176*t5726 + t3176*t3746*t6183 + 0.5*t3089*t3704*t3767*t6188 - 0.5*t3046*t3746*t3767*t6188);
  p_output1[60]=-0.1305*(-1.*t3392*t377 - 1.*t160*t354*t594) + t160*t594*t6212 + t3392*t6222 + t1444*t6242 + t1078*t1718*t6242 - 1.*t1219*t1794*t6242 + t1871*t6253 + t1917*t6258 + t1972*t6262 + t2024*t6291 - 1.11344*(-1.*t1967*t6262 + t1939*t6291) - 0.02159*t6329;
  p_output1[61]=t1444*t2269 + t1078*t1718*t2269 - 1.*t1219*t1794*t2269 - 0.1305*(-1.*t2175*t354 - 1.*t2205*t377) + t2175*t6212 + t2205*t6222 + t1871*t6415 + t1917*t6433 + t1972*t6444 + t2024*t6527 - 1.11344*(-1.*t1967*t6444 + t1939*t6527) - 0.02159*t6581;
  p_output1[62]=-0.1305*(-1.*t2679*t354 - 1.*t2699*t377) + t2679*t6212 + t2699*t6222 + t1444*t6611 + t1078*t1718*t6611 - 1.*t1219*t1794*t6611 + t1871*t6630 + t1917*t6652 + t1972*t6710 + t2024*t6728 - 1.11344*(-1.*t1967*t6710 + t1939*t6728) - 0.02159*t6883;
  p_output1[63]=t3903*t3922*(t2577*t2707*t3176 - 1.*t2291*t3046*t3176 + t3089*t3176*t6581 - 1.*t2594*t3176*t6883 + 0.5*t2594*t3046*t3767*t6952 - 0.5*t2577*t3089*t3767*t6952) + t3213*t3903*(t3046*t3176*t3453 - 1.*t2707*t3176*t3704 - 1.*t3089*t3176*t6329 + t3176*t3746*t6883 + 0.5*t3089*t3704*t3767*t6952 - 0.5*t3046*t3746*t3767*t6952);
  p_output1[64]=t1718*t3544 + t3280*t7159 + t3453*t7188 + t1794*t7202 + t1917*t7208 + t1871*t7219 + t2024*t7225 + t1972*t7231 - 1.11344*(t1939*t7225 - 1.*t1967*t7231) - 0.02159*t7235;
  p_output1[65]=t1718*t2344 + t2258*t7159 + t2291*t7188 + t1794*t7258 + t1917*t7279 + t1871*t7304 + t2024*t7386 + t1972*t7440 - 1.11344*(t1939*t7386 - 1.*t1967*t7440) - 0.02159*t7477;
  p_output1[66]=t1718*t2748 + t2663*t7159 + t2707*t7188 + t1794*t7495 + t1917*t7500 + t1871*t7505 + t2024*t7509 + t1972*t7513 - 1.11344*(t1939*t7509 - 1.*t1967*t7513) - 0.02159*t7559;
  p_output1[67]=t3903*t3922*(t3089*t3176*t7477 - 1.*t2594*t3176*t7559 - 1.*t2577*t3046*t3089*t3767*t7559 + t2594*t3129*t3767*t7559) + t3213*t3903*(-1.*t3089*t3176*t7235 + t3176*t3746*t7559 + t3046*t3089*t3704*t3767*t7559 - 1.*t3129*t3746*t3767*t7559);
  p_output1[68]=t1917*t3555 + t3482*t7652 + t3544*t7688 + t1871*t7704 + t2024*t7710 + t1972*t7725 - 1.11344*(t1939*t7710 - 1.*t1967*t7725) - 0.02159*t7768;
  p_output1[69]=t1917*t2369 + t2327*t7652 + t2344*t7688 + t1871*t7929 + t2024*t7982 + t1972*t8031 - 1.11344*(t1939*t7982 - 1.*t1967*t8031) - 0.02159*t8039;
  p_output1[70]=t1917*t2776 + t2726*t7652 + t2748*t7688 + t1871*t8140 + t2024*t8270 + t1972*t8323 - 1.11344*(t1939*t8270 - 1.*t1967*t8323) - 0.02159*t8327;
  p_output1[71]=t3903*t3922*(t3089*t3176*t8039 - 1.*t2594*t3176*t8327 - 1.*t2577*t3046*t3089*t3767*t8327 + t2594*t3129*t3767*t8327) + t3213*t3903*(-1.*t3089*t3176*t7768 + t3176*t3746*t8327 + t3046*t3089*t3704*t3767*t8327 - 1.*t3129*t3746*t3767*t8327);
  p_output1[72]=t1972*t3669 + t3555*t8382 + t3612*t8395 + t2024*t8402 - 0.02159*t8411 - 1.11344*(t1939*t8402 + t8418);
  p_output1[73]=t1972*t2524 + t2369*t8382 + t2410*t8395 + t2024*t8508 - 0.02159*t8527 - 1.11344*(t1939*t8508 + t8535);
  p_output1[74]=t1972*t2959 + t2776*t8382 + t2818*t8395 + t2024*t8594 - 0.02159*t8599 - 1.11344*(t1939*t8594 + t8631);
  p_output1[75]=t3903*t3922*(t3089*t3176*t8527 - 1.*t2594*t3176*t8599 - 1.*t2577*t3046*t3089*t3767*t8599 + t2594*t3129*t3767*t8599) + t3213*t3903*(-1.*t3089*t3176*t8411 + t3176*t3746*t8599 + t3046*t3089*t3704*t3767*t8599 - 1.*t3129*t3746*t3767*t8599);
  p_output1[76]=-1.11344*(-1.*t1939*t3640 + t8418) + t3640*t8872 + t3669*t8891 - 0.02159*t8903;
  p_output1[77]=-0.02159*t2540 - 1.11344*(-1.*t1939*t2439 + t8535) + t2439*t8872 + t2524*t8891;
  p_output1[78]=-1.11344*(-1.*t1939*t2844 + t8631) + t2844*t8872 + t2959*t8891 - 0.02159*t8964;
  p_output1[79]=t3903*t3922*(t2540*t3089*t3176 - 1.*t2594*t3176*t8964 - 1.*t2577*t3046*t3089*t3767*t8964 + t2594*t3129*t3767*t8964) + t3213*t3903*(-1.*t3089*t3176*t8903 + t3176*t3746*t8964 + t3046*t3089*t3704*t3767*t8964 - 1.*t3129*t3746*t3767*t8964);
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightPoint_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




