/*
 * Automatically Generated from Mathematica.
 * Thu 26 Aug 2021 14:18:57 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightPoint_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t268;
  double t827;
  double t902;
  double t841;
  double t928;
  double t610;
  double t647;
  double t679;
  double t710;
  double t411;
  double t502;
  double t936;
  double t947;
  double t953;
  double t958;
  double t861;
  double t931;
  double t932;
  double t996;
  double t1006;
  double t1018;
  double t1033;
  double t1048;
  double t1066;
  double t1087;
  double t1100;
  double t1102;
  double t1124;
  double t1170;
  double t1171;
  double t1180;
  double t1193;
  double t1219;
  double t1226;
  double t1236;
  double t1243;
  double t1244;
  double t1256;
  double t1278;
  double t1279;
  double t1281;
  double t1286;
  double t1289;
  double t1293;
  double t1305;
  double t1315;
  double t1316;
  double t1317;
  double t1333;
  double t1334;
  double t1337;
  double t1342;
  double t1346;
  double t1347;
  double t1367;
  double t1375;
  double t1388;
  double t1390;
  double t1406;
  double t1407;
  double t1424;
  double t694;
  double t747;
  double t801;
  double t942;
  double t944;
  double t992;
  double t994;
  double t995;
  double t1757;
  double t1763;
  double t1797;
  double t1080;
  double t1090;
  double t1097;
  double t1704;
  double t1729;
  double t1734;
  double t1854;
  double t1869;
  double t1906;
  double t1165;
  double t1166;
  double t1167;
  double t1231;
  double t1237;
  double t1239;
  double t2092;
  double t2177;
  double t2231;
  double t2402;
  double t2405;
  double t2411;
  double t1261;
  double t1262;
  double t1266;
  double t1294;
  double t1311;
  double t1312;
  double t2419;
  double t2423;
  double t2442;
  double t2453;
  double t2457;
  double t2474;
  double t1322;
  double t1325;
  double t1332;
  double t1359;
  double t1369;
  double t1373;
  double t2480;
  double t2481;
  double t2485;
  double t2490;
  double t2493;
  double t2497;
  double t1399;
  double t1400;
  double t1404;
  double t2500;
  double t2507;
  double t2522;
  double t2553;
  double t2558;
  double t2570;
  double t2656;
  double t2661;
  double t2662;
  double t2655;
  double t2663;
  double t2669;
  double t2672;
  double t2673;
  double t2675;
  double t2680;
  double t2681;
  double t2683;
  double t2684;
  double t2685;
  double t2686;
  double t2670;
  double t2688;
  double t2691;
  double t2694;
  double t2704;
  double t2705;
  double t2692;
  double t2713;
  double t2714;
  double t2729;
  double t2730;
  double t2732;
  double t2719;
  double t2742;
  double t2743;
  double t2746;
  double t2757;
  double t2758;
  double t2761;
  double t2762;
  double t2763;
  double t2766;
  double t2767;
  double t2768;
  double t2600;
  double t2612;
  double t2617;
  double t2772;
  double t2778;
  double t2782;
  double t2787;
  double t2641;
  double t2648;
  double t2652;
  double t2798;
  double t2800;
  double t2802;
  double t2812;
  double t2815;
  double t2817;
  double t2818;
  double t2821;
  double t2822;
  double t2805;
  double t2823;
  double t2824;
  double t2828;
  double t2829;
  double t2846;
  double t2825;
  double t2851;
  double t2852;
  double t2878;
  double t2880;
  double t2881;
  double t2871;
  double t2882;
  double t2888;
  double t2889;
  double t2892;
  double t2894;
  double t2898;
  double t2899;
  double t2900;
  double t2903;
  double t2906;
  double t2907;
  double t2913;
  double t2914;
  double t2915;
  double t2918;
  double t2790;
  double t2791;
  double t2796;
  double t1604;
  double t1631;
  double t1647;
  double t2922;
  double t2924;
  double t2925;
  double t2926;
  double t2927;
  double t2928;
  double t2929;
  double t2971;
  double t2976;
  double t2979;
  double t2987;
  double t2988;
  double t2989;
  double t3005;
  double t3011;
  double t3015;
  double t3032;
  double t3033;
  double t3034;
  double t3037;
  double t3042;
  double t3045;
  double t3054;
  double t3055;
  double t3061;
  double t3108;
  double t3113;
  double t3119;
  double t3126;
  double t3135;
  double t3144;
  double t3151;
  double t3156;
  double t3157;
  double t3197;
  double t3199;
  double t3200;
  double t3202;
  double t3213;
  double t3214;
  double t3224;
  double t3225;
  double t3229;
  double t3239;
  double t3240;
  double t3242;
  double t3261;
  double t3272;
  double t3274;
  double t3295;
  double t3296;
  double t3302;
  double t3313;
  double t3319;
  double t3332;
  double t3337;
  double t3343;
  double t3372;
  double t3380;
  double t3384;
  double t3393;
  double t3474;
  double t3478;
  double t3479;
  double t3481;
  double t3492;
  double t3497;
  double t3531;
  double t3536;
  double t3537;
  double t3540;
  double t3548;
  double t3549;
  double t3552;
  double t3554;
  double t3555;
  double t3558;
  double t3568;
  double t3573;
  double t3604;
  double t3618;
  double t3631;
  double t3708;
  double t3713;
  double t3725;
  double t3741;
  double t3742;
  double t3747;
  double t2932;
  double t2933;
  double t2934;
  double t3788;
  double t3793;
  double t3797;
  double t3815;
  double t3820;
  double t3839;
  double t3845;
  double t3854;
  double t3856;
  double t3416;
  double t3417;
  double t3442;
  double t3181;
  double t3182;
  double t3184;
  double t4036;
  double t4039;
  double t4041;
  double t4086;
  double t4087;
  double t4089;
  double t4094;
  double t4095;
  double t4097;
  double t4100;
  double t4102;
  double t4103;
  double t4107;
  double t4108;
  double t4110;
  double t4116;
  double t4122;
  double t4127;
  double t4131;
  double t4136;
  double t4139;
  double t4219;
  double t4223;
  double t4227;
  double t4245;
  double t4246;
  double t4249;
  double t4263;
  double t4264;
  double t4265;
  double t4268;
  double t4269;
  double t4270;
  double t4273;
  double t4274;
  double t4276;
  double t4285;
  double t4299;
  double t4331;
  double t4345;
  double t4348;
  double t4349;
  double t4358;
  double t4360;
  double t4361;
  double t4411;
  double t4412;
  double t4415;
  double t4426;
  double t4432;
  double t4433;
  double t4445;
  double t4449;
  double t4450;
  double t4456;
  double t4460;
  double t4463;
  double t4480;
  double t4483;
  double t4487;
  double t4497;
  double t4498;
  double t4507;
  double t4527;
  double t4530;
  double t4531;
  double t4559;
  double t4561;
  double t4562;
  double t4570;
  double t4572;
  double t4573;
  double t4576;
  double t4577;
  double t4578;
  double t4376;
  double t4382;
  double t4384;
  double t4179;
  double t4184;
  double t4199;
  double t4641;
  double t4642;
  double t4643;
  double t4668;
  double t4669;
  double t4670;
  double t4682;
  double t4685;
  double t4687;
  double t4693;
  double t4694;
  double t4698;
  double t4704;
  double t4709;
  double t4710;
  double t4720;
  double t4722;
  double t4723;
  double t4761;
  double t4762;
  double t4765;
  double t4808;
  double t4814;
  double t4836;
  double t4852;
  double t4853;
  double t4857;
  double t4870;
  double t4871;
  double t4876;
  double t4878;
  double t4883;
  double t4887;
  double t4892;
  double t4900;
  double t4904;
  double t4913;
  double t4915;
  double t4917;
  double t4922;
  double t4929;
  double t4939;
  double t4996;
  double t4998;
  double t5010;
  double t5011;
  double t5014;
  double t5017;
  double t5022;
  double t5024;
  double t5030;
  double t5031;
  double t5035;
  double t5039;
  double t5041;
  double t5042;
  double t5045;
  double t5046;
  double t5048;
  double t5050;
  double t5052;
  double t5056;
  double t5087;
  double t5092;
  double t5099;
  double t5106;
  double t5107;
  double t5116;
  double t4980;
  double t4981;
  double t4983;
  double t4781;
  double t4783;
  double t4784;
  double t5204;
  double t5209;
  double t5212;
  double t5229;
  double t5230;
  double t5233;
  double t5236;
  double t5242;
  double t5243;
  double t5248;
  double t5253;
  double t5256;
  double t5263;
  double t5264;
  double t5271;
  double t5164;
  double t5171;
  double t5176;
  double t5189;
  double t5191;
  double t2252;
  double t2377;
  double t2384;
  double t5318;
  double t5319;
  double t5320;
  double t5323;
  double t5325;
  double t5326;
  double t5334;
  double t5339;
  double t5340;
  double t5363;
  double t5368;
  double t5390;
  double t5421;
  double t5422;
  double t5424;
  double t5461;
  double t5465;
  double t5474;
  double t5478;
  double t5480;
  double t5485;
  double t5490;
  double t5491;
  double t5492;
  double t5496;
  double t5498;
  double t5504;
  double t5514;
  double t5515;
  double t5520;
  double t5528;
  double t5532;
  double t5533;
  double t5294;
  double t5295;
  double t5296;
  double t5406;
  double t5407;
  double t5408;
  double t5632;
  double t5635;
  double t5646;
  double t5652;
  double t5656;
  double t5661;
  double t5664;
  double t5666;
  double t5671;
  double t5672;
  double t5674;
  double t5681;
  double t5682;
  double t5683;
  double t5590;
  double t5594;
  double t5603;
  double t5606;
  double t5611;
  double t5711;
  double t5723;
  double t5724;
  double t5730;
  double t5731;
  double t5735;
  double t5737;
  double t5738;
  double t5743;
  double t5746;
  double t5747;
  double t5769;
  double t5772;
  double t5773;
  double t5806;
  double t5815;
  double t5818;
  double t5822;
  double t5823;
  double t5826;
  double t5827;
  double t5829;
  double t5835;
  double t5836;
  double t5839;
  double t5848;
  double t5850;
  double t5852;
  double t5869;
  double t5870;
  double t5871;
  double t5775;
  double t5778;
  double t5779;
  double t5686;
  double t5687;
  double t5688;
  double t5960;
  double t5962;
  double t5967;
  double t5969;
  double t5970;
  double t5972;
  double t5992;
  double t5937;
  double t5938;
  double t5940;
  double t5943;
  double t5946;
  double t6041;
  double t6043;
  double t6051;
  double t6054;
  double t6056;
  double t6061;
  double t6065;
  double t6170;
  double t6176;
  double t6186;
  double t6192;
  double t6197;
  double t6205;
  double t6210;
  double t6223;
  double t6227;
  double t6228;
  double t6100;
  double t6104;
  double t6105;
  double t6010;
  double t6014;
  double t6015;
  double t6286;
  double t6287;
  double t6272;
  double t6276;
  double t6282;
  double t6283;
  double t6284;
  double t6347;
  double t6358;
  double t2587;
  double t6396;
  double t6399;
  double t6412;
  double t6416;
  double t6418;
  double t6371;
  double t6372;
  double t6292;
  double t6294;
  double t6303;
  double t6314;
  double t6491;
  double t6492;
  double t6493;
  double t6500;
  double t6501;
  double t2586;
  double t2590;
  double t6376;
  double t6422;
  double t6554;
  double t6557;
  double t6509;
  double t6511;
  t268 = Cos(var1[3]);
  t827 = Cos(var1[5]);
  t902 = Sin(var1[3]);
  t841 = Sin(var1[4]);
  t928 = Sin(var1[5]);
  t610 = Cos(var1[15]);
  t647 = -1.*t610;
  t679 = 1. + t647;
  t710 = Sin(var1[15]);
  t411 = Cos(var1[4]);
  t502 = Sin(var1[14]);
  t936 = Cos(var1[14]);
  t947 = -1.*t827*t902;
  t953 = -1.*t268*t841*t928;
  t958 = t947 + t953;
  t861 = t268*t827*t841;
  t931 = -1.*t902*t928;
  t932 = t861 + t931;
  t996 = -1.*t268*t411*t502;
  t1006 = t936*t958;
  t1018 = t996 + t1006;
  t1033 = Cos(var1[16]);
  t1048 = -1.*t1033;
  t1066 = 1. + t1048;
  t1087 = Sin(var1[16]);
  t1100 = -1.*t936*t268*t411;
  t1102 = -1.*t502*t958;
  t1124 = t1100 + t1102;
  t1170 = t610*t932;
  t1171 = t710*t1018;
  t1180 = t1170 + t1171;
  t1193 = Cos(var1[17]);
  t1219 = -1.*t1193;
  t1226 = 1. + t1219;
  t1236 = Sin(var1[17]);
  t1243 = t1087*t1124;
  t1244 = t1033*t1180;
  t1256 = t1243 + t1244;
  t1278 = t1033*t1124;
  t1279 = -1.*t1087*t1180;
  t1281 = t1278 + t1279;
  t1286 = Cos(var1[18]);
  t1289 = -1.*t1286;
  t1293 = 1. + t1289;
  t1305 = Sin(var1[18]);
  t1315 = -1.*t1236*t1256;
  t1316 = t1193*t1281;
  t1317 = t1315 + t1316;
  t1333 = t1193*t1256;
  t1334 = t1236*t1281;
  t1337 = t1333 + t1334;
  t1342 = Cos(var1[19]);
  t1346 = -1.*t1342;
  t1347 = 1. + t1346;
  t1367 = Sin(var1[19]);
  t1375 = t1305*t1317;
  t1388 = t1286*t1337;
  t1390 = t1375 + t1388;
  t1406 = t1286*t1317;
  t1407 = -1.*t1305*t1337;
  t1424 = t1406 + t1407;
  t694 = -0.049*t679;
  t747 = -0.135*t710;
  t801 = t694 + t747;
  t942 = -1.*t936;
  t944 = 1. + t942;
  t992 = -0.135*t679;
  t994 = 0.049*t710;
  t995 = t992 + t994;
  t1757 = t268*t827;
  t1763 = -1.*t902*t841*t928;
  t1797 = t1757 + t1763;
  t1080 = -0.09*t1066;
  t1090 = 0.049*t1087;
  t1097 = t1080 + t1090;
  t1704 = t827*t902*t841;
  t1729 = t268*t928;
  t1734 = t1704 + t1729;
  t1854 = -1.*t411*t502*t902;
  t1869 = t936*t1797;
  t1906 = t1854 + t1869;
  t1165 = -0.049*t1066;
  t1166 = -0.09*t1087;
  t1167 = t1165 + t1166;
  t1231 = -0.049*t1226;
  t1237 = -0.21*t1236;
  t1239 = t1231 + t1237;
  t2092 = -1.*t936*t411*t902;
  t2177 = -1.*t502*t1797;
  t2231 = t2092 + t2177;
  t2402 = t610*t1734;
  t2405 = t710*t1906;
  t2411 = t2402 + t2405;
  t1261 = -0.21*t1226;
  t1262 = 0.049*t1236;
  t1266 = t1261 + t1262;
  t1294 = -0.27068*t1293;
  t1311 = 0.00159*t1305;
  t1312 = t1294 + t1311;
  t2419 = t1087*t2231;
  t2423 = t1033*t2411;
  t2442 = t2419 + t2423;
  t2453 = t1033*t2231;
  t2457 = -1.*t1087*t2411;
  t2474 = t2453 + t2457;
  t1322 = -0.00159*t1293;
  t1325 = -0.27068*t1305;
  t1332 = t1322 + t1325;
  t1359 = 0.01841*t1347;
  t1369 = -0.70544*t1367;
  t1373 = t1359 + t1369;
  t2480 = -1.*t1236*t2442;
  t2481 = t1193*t2474;
  t2485 = t2480 + t2481;
  t2490 = t1193*t2442;
  t2493 = t1236*t2474;
  t2497 = t2490 + t2493;
  t1399 = -0.70544*t1347;
  t1400 = -0.01841*t1367;
  t1404 = t1399 + t1400;
  t2500 = t1305*t2485;
  t2507 = t1286*t2497;
  t2522 = t2500 + t2507;
  t2553 = t1286*t2485;
  t2558 = -1.*t1305*t2497;
  t2570 = t2553 + t2558;
  t2656 = t827*t902;
  t2661 = t268*t841*t928;
  t2662 = t2656 + t2661;
  t2655 = t936*t268*t411;
  t2663 = -1.*t502*t2662;
  t2669 = t2655 + t2663;
  t2672 = -1.*t268*t827*t841;
  t2673 = t902*t928;
  t2675 = t2672 + t2673;
  t2680 = t610*t2675;
  t2681 = t268*t411*t502;
  t2683 = t936*t2662;
  t2684 = t2681 + t2683;
  t2685 = t710*t2684;
  t2686 = t2680 + t2685;
  t2670 = t1087*t2669;
  t2688 = t1033*t2686;
  t2691 = t2670 + t2688;
  t2694 = t1033*t2669;
  t2704 = -1.*t1087*t2686;
  t2705 = t2694 + t2704;
  t2692 = -1.*t1236*t2691;
  t2713 = t1193*t2705;
  t2714 = t2692 + t2713;
  t2729 = t1193*t2691;
  t2730 = t1236*t2705;
  t2732 = t2729 + t2730;
  t2719 = t1305*t2714;
  t2742 = t1286*t2732;
  t2743 = t2719 + t2742;
  t2746 = t1342*t2743;
  t2757 = t1286*t2714;
  t2758 = -1.*t1305*t2732;
  t2761 = t2757 + t2758;
  t2762 = t1367*t2761;
  t2763 = t2746 + t2762;
  t2766 = t710*t2675;
  t2767 = -1.*t610*t2684;
  t2768 = t2766 + t2767;
  t2600 = t1342*t2522;
  t2612 = t1367*t2570;
  t2617 = t2600 + t2612;
  t2772 = Power(t2768,2);
  t2778 = Power(t2763,2);
  t2782 = t2772 + t2778;
  t2787 = 1/Sqrt(t2782);
  t2641 = t710*t1734;
  t2648 = -1.*t610*t1906;
  t2652 = t2641 + t2648;
  t2798 = t936*t841;
  t2800 = t411*t502*t928;
  t2802 = t2798 + t2800;
  t2812 = t610*t411*t827;
  t2815 = t502*t841;
  t2817 = -1.*t936*t411*t928;
  t2818 = t2815 + t2817;
  t2821 = t710*t2818;
  t2822 = t2812 + t2821;
  t2805 = t1087*t2802;
  t2823 = t1033*t2822;
  t2824 = t2805 + t2823;
  t2828 = t1033*t2802;
  t2829 = -1.*t1087*t2822;
  t2846 = t2828 + t2829;
  t2825 = -1.*t1236*t2824;
  t2851 = t1193*t2846;
  t2852 = t2825 + t2851;
  t2878 = t1193*t2824;
  t2880 = t1236*t2846;
  t2881 = t2878 + t2880;
  t2871 = t1305*t2852;
  t2882 = t1286*t2881;
  t2888 = t2871 + t2882;
  t2889 = t1342*t2888;
  t2892 = t1286*t2852;
  t2894 = -1.*t1305*t2881;
  t2898 = t2892 + t2894;
  t2899 = t1367*t2898;
  t2900 = t2889 + t2899;
  t2903 = t411*t827*t710;
  t2906 = -1.*t610*t2818;
  t2907 = t2903 + t2906;
  t2913 = Power(t2782,-1.5);
  t2914 = 2.*t2768*t2652;
  t2915 = 2.*t2763*t2617;
  t2918 = t2914 + t2915;
  t2790 = -1.*t2652*t2763*t2787;
  t2791 = t2768*t2617*t2787;
  t2796 = t2790 + t2791;
  t1604 = t1342*t1390;
  t1631 = t1367*t1424;
  t1647 = t1604 + t1631;
  t2922 = -1.*t2768*t2900*t2787;
  t2924 = t2907*t2763*t2787;
  t2925 = t2922 + t2924;
  t2926 = Power(t2925,2);
  t2927 = Power(t2796,2);
  t2928 = t2926 + t2927;
  t2929 = 1/t2928;
  t2971 = t411*t502;
  t2976 = t936*t841*t928;
  t2979 = t2971 + t2976;
  t2987 = t936*t411;
  t2988 = -1.*t502*t841*t928;
  t2989 = t2987 + t2988;
  t3005 = -1.*t610*t827*t841;
  t3011 = t710*t2979;
  t3015 = t3005 + t3011;
  t3032 = t1087*t2989;
  t3033 = t1033*t3015;
  t3034 = t3032 + t3033;
  t3037 = t1033*t2989;
  t3042 = -1.*t1087*t3015;
  t3045 = t3037 + t3042;
  t3054 = -1.*t1236*t3034;
  t3055 = t1193*t3045;
  t3061 = t3054 + t3055;
  t3108 = t1193*t3034;
  t3113 = t1236*t3045;
  t3119 = t3108 + t3113;
  t3126 = t1305*t3061;
  t3135 = t1286*t3119;
  t3144 = t3126 + t3135;
  t3151 = t1286*t3061;
  t3156 = -1.*t1305*t3119;
  t3157 = t3151 + t3156;
  t3197 = t502*t902*t841;
  t3199 = -1.*t936*t411*t902*t928;
  t3200 = t3197 + t3199;
  t3202 = t936*t902*t841;
  t3213 = t411*t502*t902*t928;
  t3214 = t3202 + t3213;
  t3224 = t610*t411*t827*t902;
  t3225 = t710*t3200;
  t3229 = t3224 + t3225;
  t3239 = t1087*t3214;
  t3240 = t1033*t3229;
  t3242 = t3239 + t3240;
  t3261 = t1033*t3214;
  t3272 = -1.*t1087*t3229;
  t3274 = t3261 + t3272;
  t3295 = -1.*t1236*t3242;
  t3296 = t1193*t3274;
  t3302 = t3295 + t3296;
  t3313 = t1193*t3242;
  t3319 = t1236*t3274;
  t3332 = t3313 + t3319;
  t3337 = t1305*t3302;
  t3343 = t1286*t3332;
  t3372 = t3337 + t3343;
  t3380 = t1286*t3302;
  t3384 = -1.*t1305*t3332;
  t3393 = t3380 + t3384;
  t3474 = -1.*t268*t502*t841;
  t3478 = t936*t268*t411*t928;
  t3479 = t3474 + t3478;
  t3481 = -1.*t936*t268*t841;
  t3492 = -1.*t268*t411*t502*t928;
  t3497 = t3481 + t3492;
  t3531 = -1.*t610*t268*t411*t827;
  t3536 = t710*t3479;
  t3537 = t3531 + t3536;
  t3540 = t1087*t3497;
  t3548 = t1033*t3537;
  t3549 = t3540 + t3548;
  t3552 = t1033*t3497;
  t3554 = -1.*t1087*t3537;
  t3555 = t3552 + t3554;
  t3558 = -1.*t1236*t3549;
  t3568 = t1193*t3555;
  t3573 = t3558 + t3568;
  t3604 = t1193*t3549;
  t3618 = t1236*t3555;
  t3631 = t3604 + t3618;
  t3708 = t1305*t3573;
  t3713 = t1286*t3631;
  t3725 = t3708 + t3713;
  t3741 = t1286*t3573;
  t3742 = -1.*t1305*t3631;
  t3747 = t3741 + t3742;
  t2932 = t2768*t2900*t2787;
  t2933 = -1.*t2907*t2763*t2787;
  t2934 = t2932 + t2933;
  t3788 = t1342*t3725;
  t3793 = t1367*t3747;
  t3797 = t3788 + t3793;
  t3815 = -1.*t268*t411*t827*t710;
  t3820 = -1.*t610*t3479;
  t3839 = t3815 + t3820;
  t3845 = 2.*t3839*t2768;
  t3854 = 2.*t3797*t2763;
  t3856 = t3845 + t3854;
  t3416 = t1342*t3372;
  t3417 = t1367*t3393;
  t3442 = t3416 + t3417;
  t3181 = t1342*t3144;
  t3182 = t1367*t3157;
  t3184 = t3181 + t3182;
  t4036 = -1.*t936*t411*t827*t710;
  t4039 = -1.*t610*t411*t928;
  t4041 = t4036 + t4039;
  t4086 = t411*t827*t502*t1087;
  t4087 = t1033*t4041;
  t4089 = t4086 + t4087;
  t4094 = t1033*t411*t827*t502;
  t4095 = -1.*t1087*t4041;
  t4097 = t4094 + t4095;
  t4100 = -1.*t1236*t4089;
  t4102 = t1193*t4097;
  t4103 = t4100 + t4102;
  t4107 = t1193*t4089;
  t4108 = t1236*t4097;
  t4110 = t4107 + t4108;
  t4116 = t1305*t4103;
  t4122 = t1286*t4110;
  t4127 = t4116 + t4122;
  t4131 = t1286*t4103;
  t4136 = -1.*t1305*t4110;
  t4139 = t4131 + t4136;
  t4219 = -1.*t827*t902*t841;
  t4223 = -1.*t268*t928;
  t4227 = t4219 + t4223;
  t4245 = t936*t710*t4227;
  t4246 = t610*t1797;
  t4249 = t4245 + t4246;
  t4263 = -1.*t502*t1087*t4227;
  t4264 = t1033*t4249;
  t4265 = t4263 + t4264;
  t4268 = -1.*t1033*t502*t4227;
  t4269 = -1.*t1087*t4249;
  t4270 = t4268 + t4269;
  t4273 = -1.*t1236*t4265;
  t4274 = t1193*t4270;
  t4276 = t4273 + t4274;
  t4285 = t1193*t4265;
  t4299 = t1236*t4270;
  t4331 = t4285 + t4299;
  t4345 = t1305*t4276;
  t4348 = t1286*t4331;
  t4349 = t4345 + t4348;
  t4358 = t1286*t4276;
  t4360 = -1.*t1305*t4331;
  t4361 = t4358 + t4360;
  t4411 = t936*t710*t932;
  t4412 = t610*t2662;
  t4415 = t4411 + t4412;
  t4426 = -1.*t502*t1087*t932;
  t4432 = t1033*t4415;
  t4433 = t4426 + t4432;
  t4445 = -1.*t1033*t502*t932;
  t4449 = -1.*t1087*t4415;
  t4450 = t4445 + t4449;
  t4456 = -1.*t1236*t4433;
  t4460 = t1193*t4450;
  t4463 = t4456 + t4460;
  t4480 = t1193*t4433;
  t4483 = t1236*t4450;
  t4487 = t4480 + t4483;
  t4497 = t1305*t4463;
  t4498 = t1286*t4487;
  t4507 = t4497 + t4498;
  t4527 = t1286*t4463;
  t4530 = -1.*t1305*t4487;
  t4531 = t4527 + t4530;
  t4559 = t1342*t4507;
  t4561 = t1367*t4531;
  t4562 = t4559 + t4561;
  t4570 = -1.*t936*t610*t932;
  t4572 = t710*t2662;
  t4573 = t4570 + t4572;
  t4576 = 2.*t4573*t2768;
  t4577 = 2.*t4562*t2763;
  t4578 = t4576 + t4577;
  t4376 = t1342*t4349;
  t4382 = t1367*t4361;
  t4384 = t4376 + t4382;
  t4179 = t1342*t4127;
  t4184 = t1367*t4139;
  t4199 = t4179 + t4184;
  t4641 = -1.*t502*t841;
  t4642 = t936*t411*t928;
  t4643 = t4641 + t4642;
  t4668 = t1087*t4643;
  t4669 = t1033*t710*t2802;
  t4670 = t4668 + t4669;
  t4682 = t1033*t4643;
  t4685 = -1.*t710*t1087*t2802;
  t4687 = t4682 + t4685;
  t4693 = -1.*t1236*t4670;
  t4694 = t1193*t4687;
  t4698 = t4693 + t4694;
  t4704 = t1193*t4670;
  t4709 = t1236*t4687;
  t4710 = t4704 + t4709;
  t4720 = t1305*t4698;
  t4722 = t1286*t4710;
  t4723 = t4720 + t4722;
  t4761 = t1286*t4698;
  t4762 = -1.*t1305*t4710;
  t4765 = t4761 + t4762;
  t4808 = t411*t502*t902;
  t4814 = -1.*t936*t1797;
  t4836 = t4808 + t4814;
  t4852 = t1087*t4836;
  t4853 = t1033*t710*t2231;
  t4857 = t4852 + t4853;
  t4870 = t1033*t4836;
  t4871 = -1.*t710*t1087*t2231;
  t4876 = t4870 + t4871;
  t4878 = -1.*t1236*t4857;
  t4883 = t1193*t4876;
  t4887 = t4878 + t4883;
  t4892 = t1193*t4857;
  t4900 = t1236*t4876;
  t4904 = t4892 + t4900;
  t4913 = t1305*t4887;
  t4915 = t1286*t4904;
  t4917 = t4913 + t4915;
  t4922 = t1286*t4887;
  t4929 = -1.*t1305*t4904;
  t4939 = t4922 + t4929;
  t4996 = -1.*t936*t2662;
  t4998 = t996 + t4996;
  t5010 = t1087*t4998;
  t5011 = t1033*t710*t2669;
  t5014 = t5010 + t5011;
  t5017 = t1033*t4998;
  t5022 = -1.*t710*t1087*t2669;
  t5024 = t5017 + t5022;
  t5030 = -1.*t1236*t5014;
  t5031 = t1193*t5024;
  t5035 = t5030 + t5031;
  t5039 = t1193*t5014;
  t5041 = t1236*t5024;
  t5042 = t5039 + t5041;
  t5045 = t1305*t5035;
  t5046 = t1286*t5042;
  t5048 = t5045 + t5046;
  t5050 = t1286*t5035;
  t5052 = -1.*t1305*t5042;
  t5056 = t5050 + t5052;
  t5087 = t1342*t5048;
  t5092 = t1367*t5056;
  t5099 = t5087 + t5092;
  t5106 = -2.*t610*t2669*t2768;
  t5107 = 2.*t5099*t2763;
  t5116 = t5106 + t5107;
  t4980 = t1342*t4917;
  t4981 = t1367*t4939;
  t4983 = t4980 + t4981;
  t4781 = t1342*t4723;
  t4783 = t1367*t4765;
  t4784 = t4781 + t4783;
  t5204 = -1.*t411*t827*t710;
  t5209 = t610*t2818;
  t5212 = t5204 + t5209;
  t5229 = -1.*t1193*t1087*t5212;
  t5230 = -1.*t1033*t1236*t5212;
  t5233 = t5229 + t5230;
  t5236 = t1033*t1193*t5212;
  t5242 = -1.*t1087*t1236*t5212;
  t5243 = t5236 + t5242;
  t5248 = t1305*t5233;
  t5253 = t1286*t5243;
  t5256 = t5248 + t5253;
  t5263 = t1286*t5233;
  t5264 = -1.*t1305*t5243;
  t5271 = t5263 + t5264;
  t5164 = -0.135*t610;
  t5171 = -0.049*t710;
  t5176 = t5164 + t5171;
  t5189 = 0.049*t610;
  t5191 = t5189 + t747;
  t2252 = -1.*t710*t1734;
  t2377 = t610*t1906;
  t2384 = t2252 + t2377;
  t5318 = -1.*t1193*t1087*t2384;
  t5319 = -1.*t1033*t1236*t2384;
  t5320 = t5318 + t5319;
  t5323 = t1033*t1193*t2384;
  t5325 = -1.*t1087*t1236*t2384;
  t5326 = t5323 + t5325;
  t5334 = t1305*t5320;
  t5339 = t1286*t5326;
  t5340 = t5334 + t5339;
  t5363 = t1286*t5320;
  t5368 = -1.*t1305*t5326;
  t5390 = t5363 + t5368;
  t5421 = -1.*t710*t2675;
  t5422 = t610*t2684;
  t5424 = t5421 + t5422;
  t5461 = -1.*t1193*t1087*t5424;
  t5465 = -1.*t1033*t1236*t5424;
  t5474 = t5461 + t5465;
  t5478 = t1033*t1193*t5424;
  t5480 = -1.*t1087*t1236*t5424;
  t5485 = t5478 + t5480;
  t5490 = t1305*t5474;
  t5491 = t1286*t5485;
  t5492 = t5490 + t5491;
  t5496 = t1286*t5474;
  t5498 = -1.*t1305*t5485;
  t5504 = t5496 + t5498;
  t5514 = t1342*t5492;
  t5515 = t1367*t5504;
  t5520 = t5514 + t5515;
  t5528 = 2.*t2768*t2686;
  t5532 = 2.*t5520*t2763;
  t5533 = t5528 + t5532;
  t5294 = t1342*t5256;
  t5295 = t1367*t5271;
  t5296 = t5294 + t5295;
  t5406 = t1342*t5340;
  t5407 = t1367*t5390;
  t5408 = t5406 + t5407;
  t5632 = -1.*t1087*t2802;
  t5635 = -1.*t1033*t2822;
  t5646 = t5632 + t5635;
  t5652 = t1236*t5646;
  t5656 = t5652 + t2851;
  t5661 = t1193*t5646;
  t5664 = -1.*t1236*t2846;
  t5666 = t5661 + t5664;
  t5671 = -1.*t1305*t5656;
  t5672 = t1286*t5666;
  t5674 = t5671 + t5672;
  t5681 = t1286*t5656;
  t5682 = t1305*t5666;
  t5683 = t5681 + t5682;
  t5590 = 0.049*t1033;
  t5594 = t5590 + t1166;
  t5603 = -0.09*t1033;
  t5606 = -0.049*t1087;
  t5611 = t5603 + t5606;
  t5711 = -1.*t1087*t2231;
  t5723 = -1.*t1033*t2411;
  t5724 = t5711 + t5723;
  t5730 = t1236*t5724;
  t5731 = t5730 + t2481;
  t5735 = t1193*t5724;
  t5737 = -1.*t1236*t2474;
  t5738 = t5735 + t5737;
  t5743 = -1.*t1305*t5731;
  t5746 = t1286*t5738;
  t5747 = t5743 + t5746;
  t5769 = t1286*t5731;
  t5772 = t1305*t5738;
  t5773 = t5769 + t5772;
  t5806 = -1.*t1087*t2669;
  t5815 = -1.*t1033*t2686;
  t5818 = t5806 + t5815;
  t5822 = t1236*t5818;
  t5823 = t5822 + t2713;
  t5826 = t1193*t5818;
  t5827 = -1.*t1236*t2705;
  t5829 = t5826 + t5827;
  t5835 = -1.*t1305*t5823;
  t5836 = t1286*t5829;
  t5839 = t5835 + t5836;
  t5848 = t1286*t5823;
  t5850 = t1305*t5829;
  t5852 = t5848 + t5850;
  t5869 = t1367*t5839;
  t5870 = t1342*t5852;
  t5871 = t5869 + t5870;
  t5775 = t1367*t5747;
  t5778 = t1342*t5773;
  t5779 = t5775 + t5778;
  t5686 = t1367*t5674;
  t5687 = t1342*t5683;
  t5688 = t5686 + t5687;
  t5960 = -1.*t1193*t2824;
  t5962 = t5960 + t5664;
  t5967 = -1.*t1305*t2852;
  t5969 = t1286*t5962;
  t5970 = t5967 + t5969;
  t5972 = t1305*t5962;
  t5992 = t2892 + t5972;
  t5937 = -0.21*t1193;
  t5938 = -0.049*t1236;
  t5940 = t5937 + t5938;
  t5943 = 0.049*t1193;
  t5946 = t5943 + t1237;
  t6041 = -1.*t1193*t2442;
  t6043 = t6041 + t5737;
  t6051 = -1.*t1305*t2485;
  t6054 = t1286*t6043;
  t6056 = t6051 + t6054;
  t6061 = t1305*t6043;
  t6065 = t2553 + t6061;
  t6170 = -1.*t1193*t2691;
  t6176 = t6170 + t5827;
  t6186 = -1.*t1305*t2714;
  t6192 = t1286*t6176;
  t6197 = t6186 + t6192;
  t6205 = t1305*t6176;
  t6210 = t2757 + t6205;
  t6223 = t1367*t6197;
  t6227 = t1342*t6210;
  t6228 = t6223 + t6227;
  t6100 = t1367*t6056;
  t6104 = t1342*t6065;
  t6105 = t6100 + t6104;
  t6010 = t1367*t5970;
  t6014 = t1342*t5992;
  t6015 = t6010 + t6014;
  t6286 = -1.*t1286*t2881;
  t6287 = t5967 + t6286;
  t6272 = 0.00159*t1286;
  t6276 = t6272 + t1325;
  t6282 = -0.27068*t1286;
  t6283 = -0.00159*t1305;
  t6284 = t6282 + t6283;
  t6347 = -1.*t1286*t2497;
  t6358 = t6051 + t6347;
  t2587 = t1342*t2570;
  t6396 = -1.*t1286*t2732;
  t6399 = t6186 + t6396;
  t6412 = t1367*t6399;
  t6416 = t1342*t2761;
  t6418 = t6412 + t6416;
  t6371 = t1367*t6358;
  t6372 = t6371 + t2587;
  t6292 = t1367*t6287;
  t6294 = t1342*t2898;
  t6303 = t6292 + t6294;
  t6314 = -1.*t1367*t2898;
  t6491 = -0.70544*t1342;
  t6492 = 0.01841*t1367;
  t6493 = t6491 + t6492;
  t6500 = -0.01841*t1342;
  t6501 = t6500 + t1369;
  t2586 = -1.*t1367*t2522;
  t2590 = t2586 + t2587;
  t6376 = -1.*t1367*t2570;
  t6422 = -1.*t1367*t2761;
  t6554 = -1.*t1367*t2743;
  t6557 = t6554 + t6416;
  t6509 = -1.*t1367*t2888;
  t6511 = t6509 + t6294;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=1.;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=t1097*t1124 + t1167*t1180 + t1239*t1256 + t1266*t1281 + t1312*t1317 + t1332*t1337 + t1373*t1390 + t1404*t1424 - 1.11344*(-1.*t1367*t1390 + t1342*t1424) - 0.02159*t1647 - 0.135*t268*t411*t502 + t801*t932 - 0.1305*(t1018*t610 - 1.*t710*t932) - 0.135*t944*t958 + t1018*t995;
  p_output1[14]=t1097*t2231 - 0.1305*t2384 + t1167*t2411 + t1239*t2442 + t1266*t2474 + t1312*t2485 + t1332*t2497 + t1373*t2522 + t1404*t2570 - 1.11344*t2590 - 0.02159*t2617 + t1734*t801 - 0.135*t411*t502*t902 - 0.135*t1797*t944 + t1906*t995;
  p_output1[15]=t2796*(-1.*t2652*t2787*t2900 + t2617*t2787*t2907 + 0.5*t2768*t2900*t2913*t2918 - 0.5*t2763*t2907*t2913*t2918)*t2929 + t2929*t2934*(t1647*t2768*t2787 + 0.5*t2652*t2763*t2913*t2918 - 0.5*t2617*t2768*t2913*t2918 - 1.*t2763*t2787*(-1.*t1018*t610 + t710*t932));
  p_output1[16]=t1097*t2989 + t1167*t3015 + t1239*t3034 + t1266*t3045 + t1312*t3061 + t1332*t3119 + t1373*t3144 + t1404*t3157 - 1.11344*(-1.*t1367*t3144 + t1342*t3157) - 0.02159*t3184 + 0.135*t411*t502 - 1.*t801*t827*t841 - 0.1305*(t2979*t610 + t710*t827*t841) - 0.135*t841*t928*t944 + t2979*t995;
  p_output1[17]=t1097*t3214 + t1167*t3229 + t1239*t3242 + t1266*t3274 + t1312*t3302 + t1332*t3332 + t1373*t3372 + t1404*t3393 - 1.11344*(-1.*t1367*t3372 + t1342*t3393) - 0.02159*t3442 + t411*t801*t827*t902 + 0.135*t502*t841*t902 - 0.1305*(t3200*t610 - 1.*t411*t710*t827*t902) + 0.135*t411*t902*t928*t944 + t3200*t995;
  p_output1[18]=t1097*t3497 + t1167*t3537 + t1239*t3549 + t1266*t3555 + t1312*t3573 + t1332*t3631 + t1373*t3725 + t1404*t3747 - 1.11344*(-1.*t1367*t3725 + t1342*t3747) - 0.02159*t3797 - 1.*t268*t411*t801*t827 - 0.1305*(t3479*t610 + t268*t411*t710*t827) - 0.135*t268*t502*t841 - 0.135*t268*t411*t928*t944 + t3479*t995;
  p_output1[19]=t2796*t2929*(-1.*t2768*t2787*t3184 + t2787*t2907*t3797 - 1.*t2787*t2900*t3839 + 0.5*t2768*t2900*t2913*t3856 - 0.5*t2763*t2907*t2913*t3856 + t2763*t2787*(-1.*t2979*t610 - 1.*t710*t827*t841)) + t2929*t2934*(t2768*t2787*t3442 - 1.*t2652*t2787*t3797 + t2617*t2787*t3839 + 0.5*t2652*t2763*t2913*t3856 - 0.5*t2617*t2768*t2913*t3856 - 1.*t2763*t2787*(-1.*t3200*t610 + t411*t710*t827*t902));
  p_output1[20]=t1167*t4041 + t1239*t4089 + t1266*t4097 + t1312*t4103 + t1332*t4110 + t1373*t4127 + t1404*t4139 - 1.11344*(-1.*t1367*t4127 + t1342*t4139) - 0.02159*t4199 + t1097*t411*t502*t827 - 1.*t411*t801*t928 - 0.1305*(t411*t710*t928 - 1.*t411*t610*t827*t936) + 0.135*t411*t827*t944 - 1.*t411*t827*t936*t995;
  p_output1[21]=t1167*t4249 + t1239*t4265 + t1266*t4270 + t1312*t4276 + t1332*t4331 + t1373*t4349 + t1404*t4361 - 1.11344*(-1.*t1367*t4349 + t1342*t4361) - 0.02159*t4384 - 1.*t1097*t4227*t502 + t1797*t801 - 0.1305*(-1.*t1797*t710 + t4227*t610*t936) - 0.135*t4227*t944 + t4227*t936*t995;
  p_output1[22]=t1167*t4415 + t1239*t4433 + t1266*t4450 + t1312*t4463 + t1332*t4487 + t1373*t4507 + t1404*t4531 - 1.11344*(-1.*t1367*t4507 + t1342*t4531) - 0.02159*t4562 + t2662*t801 - 1.*t1097*t502*t932 - 0.1305*(-1.*t2662*t710 + t610*t932*t936) - 0.135*t932*t944 + t932*t936*t995;
  p_output1[23]=t2929*t2934*(t2768*t2787*t4384 - 1.*t2652*t2787*t4562 + t2617*t2787*t4573 + 0.5*t2652*t2763*t2913*t4578 - 0.5*t2617*t2768*t2913*t4578 - 1.*t2763*t2787*(t1797*t710 - 1.*t4227*t610*t936)) + t2796*t2929*(-1.*t2768*t2787*t4199 + t2787*t2907*t4562 - 1.*t2787*t2900*t4573 + 0.5*t2768*t2900*t2913*t4578 - 0.5*t2763*t2907*t2913*t4578 + t2763*t2787*(-1.*t411*t710*t928 + t411*t610*t827*t936));
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=t1097*t4643 + t1239*t4670 + t1266*t4687 + t1312*t4698 + t1332*t4710 + t1373*t4723 + t1404*t4765 - 1.11344*(-1.*t1367*t4723 + t1342*t4765) - 0.02159*t4784 - 0.1305*t2802*t610 + t1167*t2802*t710 + 0.135*t411*t502*t928 + 0.135*t841*t936 + t2802*t995;
  p_output1[57]=t1097*t4836 + t1239*t4857 + t1266*t4876 + t1312*t4887 + t1332*t4904 + t1373*t4917 + t1404*t4939 - 1.11344*(-1.*t1367*t4917 + t1342*t4939) - 0.02159*t4983 - 0.135*t1797*t502 - 0.1305*t2231*t610 + t1167*t2231*t710 - 0.135*t411*t902*t936 + t2231*t995;
  p_output1[58]=t1097*t4998 + t1239*t5014 - 0.135*t2662*t502 + t1266*t5024 + t1312*t5035 + t1332*t5042 + t1373*t5048 + t1404*t5056 - 1.11344*(-1.*t1367*t5048 + t1342*t5056) - 0.02159*t5099 - 0.1305*t2669*t610 + t1167*t2669*t710 + 0.135*t268*t411*t936 + t2669*t995;
  p_output1[59]=t2929*t2934*(t2768*t2787*t4983 - 1.*t2652*t2787*t5099 + 0.5*t2652*t2763*t2913*t5116 - 0.5*t2617*t2768*t2913*t5116 - 1.*t2617*t2669*t2787*t610 + t2231*t2763*t2787*t610) + t2796*t2929*(-1.*t2768*t2787*t4784 + t2787*t2907*t5099 + 0.5*t2768*t2900*t2913*t5116 - 0.5*t2763*t2907*t2913*t5116 - 1.*t2763*t2787*t2802*t610 + t2669*t2787*t2900*t610);
  p_output1[60]=t2818*t5191 + t1167*t5212 + t1033*t1239*t5212 - 1.*t1087*t1266*t5212 + t1312*t5233 + t1332*t5243 + t1373*t5256 + t1404*t5271 - 1.11344*(-1.*t1367*t5256 + t1342*t5271) - 0.02159*t5296 + t411*t5176*t827 - 0.1305*(-1.*t2818*t710 - 1.*t411*t610*t827);
  p_output1[61]=t1167*t2384 + t1033*t1239*t2384 - 1.*t1087*t1266*t2384 + t1734*t5176 + t1906*t5191 + t1312*t5320 + t1332*t5326 + t1373*t5340 + t1404*t5390 - 1.11344*(-1.*t1367*t5340 + t1342*t5390) - 0.02159*t5408 - 0.1305*(-1.*t1734*t610 - 1.*t1906*t710);
  p_output1[62]=t2675*t5176 + t2684*t5191 + t1167*t5424 + t1033*t1239*t5424 - 1.*t1087*t1266*t5424 + t1312*t5474 + t1332*t5485 + t1373*t5492 + t1404*t5504 - 1.11344*(-1.*t1367*t5492 + t1342*t5504) - 0.02159*t5520 - 0.1305*(-1.*t2675*t610 - 1.*t2684*t710);
  p_output1[63]=t2929*t2934*(t2617*t2686*t2787 - 1.*t2411*t2763*t2787 + t2768*t2787*t5408 - 1.*t2652*t2787*t5520 + 0.5*t2652*t2763*t2913*t5533 - 0.5*t2617*t2768*t2913*t5533) + t2796*t2929*(t2763*t2787*t2822 - 1.*t2686*t2787*t2900 - 1.*t2768*t2787*t5296 + t2787*t2907*t5520 + 0.5*t2768*t2900*t2913*t5533 - 0.5*t2763*t2907*t2913*t5533);
  p_output1[64]=t1239*t2846 + t2802*t5594 + t2822*t5611 + t1266*t5646 + t1332*t5656 + t1312*t5666 + t1404*t5674 + t1373*t5683 - 1.11344*(t1342*t5674 - 1.*t1367*t5683) - 0.02159*t5688;
  p_output1[65]=t1239*t2474 + t2231*t5594 + t2411*t5611 + t1266*t5724 + t1332*t5731 + t1312*t5738 + t1404*t5747 + t1373*t5773 - 1.11344*(t1342*t5747 - 1.*t1367*t5773) - 0.02159*t5779;
  p_output1[66]=t1239*t2705 + t2669*t5594 + t2686*t5611 + t1266*t5818 + t1332*t5823 + t1312*t5829 + t1404*t5839 + t1373*t5852 - 1.11344*(t1342*t5839 - 1.*t1367*t5852) - 0.02159*t5871;
  p_output1[67]=t2929*t2934*(t2768*t2787*t5779 - 1.*t2652*t2787*t5871 - 1.*t2617*t2763*t2768*t2913*t5871 + t2652*t2778*t2913*t5871) + t2796*t2929*(-1.*t2768*t2787*t5688 + t2787*t2907*t5871 + t2763*t2768*t2900*t2913*t5871 - 1.*t2778*t2907*t2913*t5871);
  p_output1[68]=t1332*t2852 + t2824*t5940 + t2846*t5946 + t1312*t5962 + t1404*t5970 + t1373*t5992 - 1.11344*(t1342*t5970 - 1.*t1367*t5992) - 0.02159*t6015;
  p_output1[69]=t1332*t2485 + t2442*t5940 + t2474*t5946 + t1312*t6043 + t1404*t6056 + t1373*t6065 - 1.11344*(t1342*t6056 - 1.*t1367*t6065) - 0.02159*t6105;
  p_output1[70]=t1332*t2714 + t2691*t5940 + t2705*t5946 + t1312*t6176 + t1404*t6197 + t1373*t6210 - 1.11344*(t1342*t6197 - 1.*t1367*t6210) - 0.02159*t6228;
  p_output1[71]=t2929*t2934*(t2768*t2787*t6105 - 1.*t2652*t2787*t6228 - 1.*t2617*t2763*t2768*t2913*t6228 + t2652*t2778*t2913*t6228) + t2796*t2929*(-1.*t2768*t2787*t6015 + t2787*t2907*t6228 + t2763*t2768*t2900*t2913*t6228 - 1.*t2778*t2907*t2913*t6228);
  p_output1[72]=t1373*t2898 + t2852*t6276 + t2881*t6284 + t1404*t6287 - 0.02159*t6303 - 1.11344*(t1342*t6287 + t6314);
  p_output1[73]=t1373*t2570 + t2485*t6276 + t2497*t6284 + t1404*t6358 - 0.02159*t6372 - 1.11344*(t1342*t6358 + t6376);
  p_output1[74]=t1373*t2761 + t2714*t6276 + t2732*t6284 + t1404*t6399 - 0.02159*t6418 - 1.11344*(t1342*t6399 + t6422);
  p_output1[75]=t2929*t2934*(t2768*t2787*t6372 - 1.*t2652*t2787*t6418 - 1.*t2617*t2763*t2768*t2913*t6418 + t2652*t2778*t2913*t6418) + t2796*t2929*(-1.*t2768*t2787*t6303 + t2787*t2907*t6418 + t2763*t2768*t2900*t2913*t6418 - 1.*t2778*t2907*t2913*t6418);
  p_output1[76]=-1.11344*(-1.*t1342*t2888 + t6314) + t2888*t6493 + t2898*t6501 - 0.02159*t6511;
  p_output1[77]=-0.02159*t2590 - 1.11344*(-1.*t1342*t2522 + t6376) + t2522*t6493 + t2570*t6501;
  p_output1[78]=-1.11344*(-1.*t1342*t2743 + t6422) + t2743*t6493 + t2761*t6501 - 0.02159*t6557;
  p_output1[79]=t2929*t2934*(t2590*t2768*t2787 - 1.*t2652*t2787*t6557 - 1.*t2617*t2763*t2768*t2913*t6557 + t2652*t2778*t2913*t6557) + t2796*t2929*(-1.*t2768*t2787*t6511 + t2787*t2907*t6557 + t2763*t2768*t2900*t2913*t6557 - 1.*t2778*t2907*t2913*t6557);
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightPoint_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




